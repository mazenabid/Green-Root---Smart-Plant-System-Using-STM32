
iPot2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004230  08000130  08000130  00010130  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000003fc  08004360  08004360  00014360  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800475c  0800475c  000201c8  2**0
                  CONTENTS
  4 .ARM          00000000  0800475c  0800475c  000201c8  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800475c  0800475c  000201c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800475c  0800475c  0001475c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08004760  08004760  00014760  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001c8  20000000  08004764  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000001ac  200001c8  0800492c  000201c8  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000374  0800492c  00020374  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000201c8  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  000201f1  2**0
                  CONTENTS, READONLY
 13 .debug_info   00001a33  00000000  00000000  00020234  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000008ef  00000000  00000000  00021c67  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000208  00000000  00000000  00022558  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000016b  00000000  00000000  00022760  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00011e3c  00000000  00000000  000228cb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00002f13  00000000  00000000  00034707  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0005a652  00000000  00000000  0003761a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00001878  00000000  00000000  00091c6c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000065  00000000  00000000  000934e4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	200001c8 	.word	0x200001c8
 800014c:	00000000 	.word	0x00000000
 8000150:	08004348 	.word	0x08004348

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	200001cc 	.word	0x200001cc
 800016c:	08004348 	.word	0x08004348

08000170 <strlen>:
 8000170:	4603      	mov	r3, r0
 8000172:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000176:	2a00      	cmp	r2, #0
 8000178:	d1fb      	bne.n	8000172 <strlen+0x2>
 800017a:	1a18      	subs	r0, r3, r0
 800017c:	3801      	subs	r0, #1
 800017e:	4770      	bx	lr

08000180 <__aeabi_drsub>:
 8000180:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000184:	e002      	b.n	800018c <__adddf3>
 8000186:	bf00      	nop

08000188 <__aeabi_dsub>:
 8000188:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800018c <__adddf3>:
 800018c:	b530      	push	{r4, r5, lr}
 800018e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000192:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000196:	ea94 0f05 	teq	r4, r5
 800019a:	bf08      	it	eq
 800019c:	ea90 0f02 	teqeq	r0, r2
 80001a0:	bf1f      	itttt	ne
 80001a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80001a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80001aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80001ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80001b2:	f000 80e2 	beq.w	800037a <__adddf3+0x1ee>
 80001b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80001ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80001be:	bfb8      	it	lt
 80001c0:	426d      	neglt	r5, r5
 80001c2:	dd0c      	ble.n	80001de <__adddf3+0x52>
 80001c4:	442c      	add	r4, r5
 80001c6:	ea80 0202 	eor.w	r2, r0, r2
 80001ca:	ea81 0303 	eor.w	r3, r1, r3
 80001ce:	ea82 0000 	eor.w	r0, r2, r0
 80001d2:	ea83 0101 	eor.w	r1, r3, r1
 80001d6:	ea80 0202 	eor.w	r2, r0, r2
 80001da:	ea81 0303 	eor.w	r3, r1, r3
 80001de:	2d36      	cmp	r5, #54	; 0x36
 80001e0:	bf88      	it	hi
 80001e2:	bd30      	pophi	{r4, r5, pc}
 80001e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80001e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80001f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001f4:	d002      	beq.n	80001fc <__adddf3+0x70>
 80001f6:	4240      	negs	r0, r0
 80001f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000200:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000204:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000208:	d002      	beq.n	8000210 <__adddf3+0x84>
 800020a:	4252      	negs	r2, r2
 800020c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000210:	ea94 0f05 	teq	r4, r5
 8000214:	f000 80a7 	beq.w	8000366 <__adddf3+0x1da>
 8000218:	f1a4 0401 	sub.w	r4, r4, #1
 800021c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000220:	db0d      	blt.n	800023e <__adddf3+0xb2>
 8000222:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000226:	fa22 f205 	lsr.w	r2, r2, r5
 800022a:	1880      	adds	r0, r0, r2
 800022c:	f141 0100 	adc.w	r1, r1, #0
 8000230:	fa03 f20e 	lsl.w	r2, r3, lr
 8000234:	1880      	adds	r0, r0, r2
 8000236:	fa43 f305 	asr.w	r3, r3, r5
 800023a:	4159      	adcs	r1, r3
 800023c:	e00e      	b.n	800025c <__adddf3+0xd0>
 800023e:	f1a5 0520 	sub.w	r5, r5, #32
 8000242:	f10e 0e20 	add.w	lr, lr, #32
 8000246:	2a01      	cmp	r2, #1
 8000248:	fa03 fc0e 	lsl.w	ip, r3, lr
 800024c:	bf28      	it	cs
 800024e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000252:	fa43 f305 	asr.w	r3, r3, r5
 8000256:	18c0      	adds	r0, r0, r3
 8000258:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800025c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000260:	d507      	bpl.n	8000272 <__adddf3+0xe6>
 8000262:	f04f 0e00 	mov.w	lr, #0
 8000266:	f1dc 0c00 	rsbs	ip, ip, #0
 800026a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800026e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000272:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000276:	d31b      	bcc.n	80002b0 <__adddf3+0x124>
 8000278:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800027c:	d30c      	bcc.n	8000298 <__adddf3+0x10c>
 800027e:	0849      	lsrs	r1, r1, #1
 8000280:	ea5f 0030 	movs.w	r0, r0, rrx
 8000284:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000288:	f104 0401 	add.w	r4, r4, #1
 800028c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000290:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000294:	f080 809a 	bcs.w	80003cc <__adddf3+0x240>
 8000298:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800029c:	bf08      	it	eq
 800029e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80002a2:	f150 0000 	adcs.w	r0, r0, #0
 80002a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80002aa:	ea41 0105 	orr.w	r1, r1, r5
 80002ae:	bd30      	pop	{r4, r5, pc}
 80002b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80002b4:	4140      	adcs	r0, r0
 80002b6:	eb41 0101 	adc.w	r1, r1, r1
 80002ba:	3c01      	subs	r4, #1
 80002bc:	bf28      	it	cs
 80002be:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80002c2:	d2e9      	bcs.n	8000298 <__adddf3+0x10c>
 80002c4:	f091 0f00 	teq	r1, #0
 80002c8:	bf04      	itt	eq
 80002ca:	4601      	moveq	r1, r0
 80002cc:	2000      	moveq	r0, #0
 80002ce:	fab1 f381 	clz	r3, r1
 80002d2:	bf08      	it	eq
 80002d4:	3320      	addeq	r3, #32
 80002d6:	f1a3 030b 	sub.w	r3, r3, #11
 80002da:	f1b3 0220 	subs.w	r2, r3, #32
 80002de:	da0c      	bge.n	80002fa <__adddf3+0x16e>
 80002e0:	320c      	adds	r2, #12
 80002e2:	dd08      	ble.n	80002f6 <__adddf3+0x16a>
 80002e4:	f102 0c14 	add.w	ip, r2, #20
 80002e8:	f1c2 020c 	rsb	r2, r2, #12
 80002ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80002f0:	fa21 f102 	lsr.w	r1, r1, r2
 80002f4:	e00c      	b.n	8000310 <__adddf3+0x184>
 80002f6:	f102 0214 	add.w	r2, r2, #20
 80002fa:	bfd8      	it	le
 80002fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000300:	fa01 f102 	lsl.w	r1, r1, r2
 8000304:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000308:	bfdc      	itt	le
 800030a:	ea41 010c 	orrle.w	r1, r1, ip
 800030e:	4090      	lslle	r0, r2
 8000310:	1ae4      	subs	r4, r4, r3
 8000312:	bfa2      	ittt	ge
 8000314:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000318:	4329      	orrge	r1, r5
 800031a:	bd30      	popge	{r4, r5, pc}
 800031c:	ea6f 0404 	mvn.w	r4, r4
 8000320:	3c1f      	subs	r4, #31
 8000322:	da1c      	bge.n	800035e <__adddf3+0x1d2>
 8000324:	340c      	adds	r4, #12
 8000326:	dc0e      	bgt.n	8000346 <__adddf3+0x1ba>
 8000328:	f104 0414 	add.w	r4, r4, #20
 800032c:	f1c4 0220 	rsb	r2, r4, #32
 8000330:	fa20 f004 	lsr.w	r0, r0, r4
 8000334:	fa01 f302 	lsl.w	r3, r1, r2
 8000338:	ea40 0003 	orr.w	r0, r0, r3
 800033c:	fa21 f304 	lsr.w	r3, r1, r4
 8000340:	ea45 0103 	orr.w	r1, r5, r3
 8000344:	bd30      	pop	{r4, r5, pc}
 8000346:	f1c4 040c 	rsb	r4, r4, #12
 800034a:	f1c4 0220 	rsb	r2, r4, #32
 800034e:	fa20 f002 	lsr.w	r0, r0, r2
 8000352:	fa01 f304 	lsl.w	r3, r1, r4
 8000356:	ea40 0003 	orr.w	r0, r0, r3
 800035a:	4629      	mov	r1, r5
 800035c:	bd30      	pop	{r4, r5, pc}
 800035e:	fa21 f004 	lsr.w	r0, r1, r4
 8000362:	4629      	mov	r1, r5
 8000364:	bd30      	pop	{r4, r5, pc}
 8000366:	f094 0f00 	teq	r4, #0
 800036a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800036e:	bf06      	itte	eq
 8000370:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000374:	3401      	addeq	r4, #1
 8000376:	3d01      	subne	r5, #1
 8000378:	e74e      	b.n	8000218 <__adddf3+0x8c>
 800037a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800037e:	bf18      	it	ne
 8000380:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000384:	d029      	beq.n	80003da <__adddf3+0x24e>
 8000386:	ea94 0f05 	teq	r4, r5
 800038a:	bf08      	it	eq
 800038c:	ea90 0f02 	teqeq	r0, r2
 8000390:	d005      	beq.n	800039e <__adddf3+0x212>
 8000392:	ea54 0c00 	orrs.w	ip, r4, r0
 8000396:	bf04      	itt	eq
 8000398:	4619      	moveq	r1, r3
 800039a:	4610      	moveq	r0, r2
 800039c:	bd30      	pop	{r4, r5, pc}
 800039e:	ea91 0f03 	teq	r1, r3
 80003a2:	bf1e      	ittt	ne
 80003a4:	2100      	movne	r1, #0
 80003a6:	2000      	movne	r0, #0
 80003a8:	bd30      	popne	{r4, r5, pc}
 80003aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80003ae:	d105      	bne.n	80003bc <__adddf3+0x230>
 80003b0:	0040      	lsls	r0, r0, #1
 80003b2:	4149      	adcs	r1, r1
 80003b4:	bf28      	it	cs
 80003b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80003ba:	bd30      	pop	{r4, r5, pc}
 80003bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80003c0:	bf3c      	itt	cc
 80003c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80003c6:	bd30      	popcc	{r4, r5, pc}
 80003c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80003d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80003d4:	f04f 0000 	mov.w	r0, #0
 80003d8:	bd30      	pop	{r4, r5, pc}
 80003da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003de:	bf1a      	itte	ne
 80003e0:	4619      	movne	r1, r3
 80003e2:	4610      	movne	r0, r2
 80003e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003e8:	bf1c      	itt	ne
 80003ea:	460b      	movne	r3, r1
 80003ec:	4602      	movne	r2, r0
 80003ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003f2:	bf06      	itte	eq
 80003f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003f8:	ea91 0f03 	teqeq	r1, r3
 80003fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000400:	bd30      	pop	{r4, r5, pc}
 8000402:	bf00      	nop

08000404 <__aeabi_ui2d>:
 8000404:	f090 0f00 	teq	r0, #0
 8000408:	bf04      	itt	eq
 800040a:	2100      	moveq	r1, #0
 800040c:	4770      	bxeq	lr
 800040e:	b530      	push	{r4, r5, lr}
 8000410:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000414:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000418:	f04f 0500 	mov.w	r5, #0
 800041c:	f04f 0100 	mov.w	r1, #0
 8000420:	e750      	b.n	80002c4 <__adddf3+0x138>
 8000422:	bf00      	nop

08000424 <__aeabi_i2d>:
 8000424:	f090 0f00 	teq	r0, #0
 8000428:	bf04      	itt	eq
 800042a:	2100      	moveq	r1, #0
 800042c:	4770      	bxeq	lr
 800042e:	b530      	push	{r4, r5, lr}
 8000430:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000434:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000438:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800043c:	bf48      	it	mi
 800043e:	4240      	negmi	r0, r0
 8000440:	f04f 0100 	mov.w	r1, #0
 8000444:	e73e      	b.n	80002c4 <__adddf3+0x138>
 8000446:	bf00      	nop

08000448 <__aeabi_f2d>:
 8000448:	0042      	lsls	r2, r0, #1
 800044a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800044e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000452:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000456:	bf1f      	itttt	ne
 8000458:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800045c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000460:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000464:	4770      	bxne	lr
 8000466:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800046a:	bf08      	it	eq
 800046c:	4770      	bxeq	lr
 800046e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000472:	bf04      	itt	eq
 8000474:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000478:	4770      	bxeq	lr
 800047a:	b530      	push	{r4, r5, lr}
 800047c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000480:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000484:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000488:	e71c      	b.n	80002c4 <__adddf3+0x138>
 800048a:	bf00      	nop

0800048c <__aeabi_ul2d>:
 800048c:	ea50 0201 	orrs.w	r2, r0, r1
 8000490:	bf08      	it	eq
 8000492:	4770      	bxeq	lr
 8000494:	b530      	push	{r4, r5, lr}
 8000496:	f04f 0500 	mov.w	r5, #0
 800049a:	e00a      	b.n	80004b2 <__aeabi_l2d+0x16>

0800049c <__aeabi_l2d>:
 800049c:	ea50 0201 	orrs.w	r2, r0, r1
 80004a0:	bf08      	it	eq
 80004a2:	4770      	bxeq	lr
 80004a4:	b530      	push	{r4, r5, lr}
 80004a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80004aa:	d502      	bpl.n	80004b2 <__aeabi_l2d+0x16>
 80004ac:	4240      	negs	r0, r0
 80004ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80004b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80004be:	f43f aed8 	beq.w	8000272 <__adddf3+0xe6>
 80004c2:	f04f 0203 	mov.w	r2, #3
 80004c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004ca:	bf18      	it	ne
 80004cc:	3203      	addne	r2, #3
 80004ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004d2:	bf18      	it	ne
 80004d4:	3203      	addne	r2, #3
 80004d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004da:	f1c2 0320 	rsb	r3, r2, #32
 80004de:	fa00 fc03 	lsl.w	ip, r0, r3
 80004e2:	fa20 f002 	lsr.w	r0, r0, r2
 80004e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004ea:	ea40 000e 	orr.w	r0, r0, lr
 80004ee:	fa21 f102 	lsr.w	r1, r1, r2
 80004f2:	4414      	add	r4, r2
 80004f4:	e6bd      	b.n	8000272 <__adddf3+0xe6>
 80004f6:	bf00      	nop

080004f8 <__aeabi_dmul>:
 80004f8:	b570      	push	{r4, r5, r6, lr}
 80004fa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80004fe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000502:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000506:	bf1d      	ittte	ne
 8000508:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800050c:	ea94 0f0c 	teqne	r4, ip
 8000510:	ea95 0f0c 	teqne	r5, ip
 8000514:	f000 f8de 	bleq	80006d4 <__aeabi_dmul+0x1dc>
 8000518:	442c      	add	r4, r5
 800051a:	ea81 0603 	eor.w	r6, r1, r3
 800051e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000522:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000526:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800052a:	bf18      	it	ne
 800052c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000530:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000534:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000538:	d038      	beq.n	80005ac <__aeabi_dmul+0xb4>
 800053a:	fba0 ce02 	umull	ip, lr, r0, r2
 800053e:	f04f 0500 	mov.w	r5, #0
 8000542:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000546:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800054a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800054e:	f04f 0600 	mov.w	r6, #0
 8000552:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000556:	f09c 0f00 	teq	ip, #0
 800055a:	bf18      	it	ne
 800055c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000560:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000564:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000568:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800056c:	d204      	bcs.n	8000578 <__aeabi_dmul+0x80>
 800056e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000572:	416d      	adcs	r5, r5
 8000574:	eb46 0606 	adc.w	r6, r6, r6
 8000578:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800057c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000580:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000584:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000588:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800058c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000590:	bf88      	it	hi
 8000592:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000596:	d81e      	bhi.n	80005d6 <__aeabi_dmul+0xde>
 8000598:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800059c:	bf08      	it	eq
 800059e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80005a2:	f150 0000 	adcs.w	r0, r0, #0
 80005a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80005aa:	bd70      	pop	{r4, r5, r6, pc}
 80005ac:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80005b0:	ea46 0101 	orr.w	r1, r6, r1
 80005b4:	ea40 0002 	orr.w	r0, r0, r2
 80005b8:	ea81 0103 	eor.w	r1, r1, r3
 80005bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005c0:	bfc2      	ittt	gt
 80005c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005ca:	bd70      	popgt	{r4, r5, r6, pc}
 80005cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005d0:	f04f 0e00 	mov.w	lr, #0
 80005d4:	3c01      	subs	r4, #1
 80005d6:	f300 80ab 	bgt.w	8000730 <__aeabi_dmul+0x238>
 80005da:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80005de:	bfde      	ittt	le
 80005e0:	2000      	movle	r0, #0
 80005e2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80005e6:	bd70      	pople	{r4, r5, r6, pc}
 80005e8:	f1c4 0400 	rsb	r4, r4, #0
 80005ec:	3c20      	subs	r4, #32
 80005ee:	da35      	bge.n	800065c <__aeabi_dmul+0x164>
 80005f0:	340c      	adds	r4, #12
 80005f2:	dc1b      	bgt.n	800062c <__aeabi_dmul+0x134>
 80005f4:	f104 0414 	add.w	r4, r4, #20
 80005f8:	f1c4 0520 	rsb	r5, r4, #32
 80005fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000600:	fa20 f004 	lsr.w	r0, r0, r4
 8000604:	fa01 f205 	lsl.w	r2, r1, r5
 8000608:	ea40 0002 	orr.w	r0, r0, r2
 800060c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000610:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000614:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000618:	fa21 f604 	lsr.w	r6, r1, r4
 800061c:	eb42 0106 	adc.w	r1, r2, r6
 8000620:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000624:	bf08      	it	eq
 8000626:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800062a:	bd70      	pop	{r4, r5, r6, pc}
 800062c:	f1c4 040c 	rsb	r4, r4, #12
 8000630:	f1c4 0520 	rsb	r5, r4, #32
 8000634:	fa00 f304 	lsl.w	r3, r0, r4
 8000638:	fa20 f005 	lsr.w	r0, r0, r5
 800063c:	fa01 f204 	lsl.w	r2, r1, r4
 8000640:	ea40 0002 	orr.w	r0, r0, r2
 8000644:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000648:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800064c:	f141 0100 	adc.w	r1, r1, #0
 8000650:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000654:	bf08      	it	eq
 8000656:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800065a:	bd70      	pop	{r4, r5, r6, pc}
 800065c:	f1c4 0520 	rsb	r5, r4, #32
 8000660:	fa00 f205 	lsl.w	r2, r0, r5
 8000664:	ea4e 0e02 	orr.w	lr, lr, r2
 8000668:	fa20 f304 	lsr.w	r3, r0, r4
 800066c:	fa01 f205 	lsl.w	r2, r1, r5
 8000670:	ea43 0302 	orr.w	r3, r3, r2
 8000674:	fa21 f004 	lsr.w	r0, r1, r4
 8000678:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800067c:	fa21 f204 	lsr.w	r2, r1, r4
 8000680:	ea20 0002 	bic.w	r0, r0, r2
 8000684:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000688:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800068c:	bf08      	it	eq
 800068e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000692:	bd70      	pop	{r4, r5, r6, pc}
 8000694:	f094 0f00 	teq	r4, #0
 8000698:	d10f      	bne.n	80006ba <__aeabi_dmul+0x1c2>
 800069a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800069e:	0040      	lsls	r0, r0, #1
 80006a0:	eb41 0101 	adc.w	r1, r1, r1
 80006a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80006a8:	bf08      	it	eq
 80006aa:	3c01      	subeq	r4, #1
 80006ac:	d0f7      	beq.n	800069e <__aeabi_dmul+0x1a6>
 80006ae:	ea41 0106 	orr.w	r1, r1, r6
 80006b2:	f095 0f00 	teq	r5, #0
 80006b6:	bf18      	it	ne
 80006b8:	4770      	bxne	lr
 80006ba:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80006be:	0052      	lsls	r2, r2, #1
 80006c0:	eb43 0303 	adc.w	r3, r3, r3
 80006c4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80006c8:	bf08      	it	eq
 80006ca:	3d01      	subeq	r5, #1
 80006cc:	d0f7      	beq.n	80006be <__aeabi_dmul+0x1c6>
 80006ce:	ea43 0306 	orr.w	r3, r3, r6
 80006d2:	4770      	bx	lr
 80006d4:	ea94 0f0c 	teq	r4, ip
 80006d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006dc:	bf18      	it	ne
 80006de:	ea95 0f0c 	teqne	r5, ip
 80006e2:	d00c      	beq.n	80006fe <__aeabi_dmul+0x206>
 80006e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006e8:	bf18      	it	ne
 80006ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ee:	d1d1      	bne.n	8000694 <__aeabi_dmul+0x19c>
 80006f0:	ea81 0103 	eor.w	r1, r1, r3
 80006f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006f8:	f04f 0000 	mov.w	r0, #0
 80006fc:	bd70      	pop	{r4, r5, r6, pc}
 80006fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000702:	bf06      	itte	eq
 8000704:	4610      	moveq	r0, r2
 8000706:	4619      	moveq	r1, r3
 8000708:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800070c:	d019      	beq.n	8000742 <__aeabi_dmul+0x24a>
 800070e:	ea94 0f0c 	teq	r4, ip
 8000712:	d102      	bne.n	800071a <__aeabi_dmul+0x222>
 8000714:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000718:	d113      	bne.n	8000742 <__aeabi_dmul+0x24a>
 800071a:	ea95 0f0c 	teq	r5, ip
 800071e:	d105      	bne.n	800072c <__aeabi_dmul+0x234>
 8000720:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000724:	bf1c      	itt	ne
 8000726:	4610      	movne	r0, r2
 8000728:	4619      	movne	r1, r3
 800072a:	d10a      	bne.n	8000742 <__aeabi_dmul+0x24a>
 800072c:	ea81 0103 	eor.w	r1, r1, r3
 8000730:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000734:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000738:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800073c:	f04f 0000 	mov.w	r0, #0
 8000740:	bd70      	pop	{r4, r5, r6, pc}
 8000742:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000746:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800074a:	bd70      	pop	{r4, r5, r6, pc}

0800074c <__aeabi_ddiv>:
 800074c:	b570      	push	{r4, r5, r6, lr}
 800074e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000752:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000756:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800075a:	bf1d      	ittte	ne
 800075c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000760:	ea94 0f0c 	teqne	r4, ip
 8000764:	ea95 0f0c 	teqne	r5, ip
 8000768:	f000 f8a7 	bleq	80008ba <__aeabi_ddiv+0x16e>
 800076c:	eba4 0405 	sub.w	r4, r4, r5
 8000770:	ea81 0e03 	eor.w	lr, r1, r3
 8000774:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000778:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800077c:	f000 8088 	beq.w	8000890 <__aeabi_ddiv+0x144>
 8000780:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000784:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000788:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800078c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000790:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000794:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000798:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800079c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80007a0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80007a4:	429d      	cmp	r5, r3
 80007a6:	bf08      	it	eq
 80007a8:	4296      	cmpeq	r6, r2
 80007aa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80007ae:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80007b2:	d202      	bcs.n	80007ba <__aeabi_ddiv+0x6e>
 80007b4:	085b      	lsrs	r3, r3, #1
 80007b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80007ba:	1ab6      	subs	r6, r6, r2
 80007bc:	eb65 0503 	sbc.w	r5, r5, r3
 80007c0:	085b      	lsrs	r3, r3, #1
 80007c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007c6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80007ca:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80007ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80007d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007d6:	bf22      	ittt	cs
 80007d8:	1ab6      	subcs	r6, r6, r2
 80007da:	4675      	movcs	r5, lr
 80007dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80007e0:	085b      	lsrs	r3, r3, #1
 80007e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ee:	bf22      	ittt	cs
 80007f0:	1ab6      	subcs	r6, r6, r2
 80007f2:	4675      	movcs	r5, lr
 80007f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007f8:	085b      	lsrs	r3, r3, #1
 80007fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80007fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000802:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000806:	bf22      	ittt	cs
 8000808:	1ab6      	subcs	r6, r6, r2
 800080a:	4675      	movcs	r5, lr
 800080c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000810:	085b      	lsrs	r3, r3, #1
 8000812:	ea4f 0232 	mov.w	r2, r2, rrx
 8000816:	ebb6 0e02 	subs.w	lr, r6, r2
 800081a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800081e:	bf22      	ittt	cs
 8000820:	1ab6      	subcs	r6, r6, r2
 8000822:	4675      	movcs	r5, lr
 8000824:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000828:	ea55 0e06 	orrs.w	lr, r5, r6
 800082c:	d018      	beq.n	8000860 <__aeabi_ddiv+0x114>
 800082e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000832:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000836:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800083a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800083e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000842:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000846:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800084a:	d1c0      	bne.n	80007ce <__aeabi_ddiv+0x82>
 800084c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000850:	d10b      	bne.n	800086a <__aeabi_ddiv+0x11e>
 8000852:	ea41 0100 	orr.w	r1, r1, r0
 8000856:	f04f 0000 	mov.w	r0, #0
 800085a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800085e:	e7b6      	b.n	80007ce <__aeabi_ddiv+0x82>
 8000860:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000864:	bf04      	itt	eq
 8000866:	4301      	orreq	r1, r0
 8000868:	2000      	moveq	r0, #0
 800086a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800086e:	bf88      	it	hi
 8000870:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000874:	f63f aeaf 	bhi.w	80005d6 <__aeabi_dmul+0xde>
 8000878:	ebb5 0c03 	subs.w	ip, r5, r3
 800087c:	bf04      	itt	eq
 800087e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000882:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000886:	f150 0000 	adcs.w	r0, r0, #0
 800088a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800088e:	bd70      	pop	{r4, r5, r6, pc}
 8000890:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000894:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000898:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800089c:	bfc2      	ittt	gt
 800089e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80008a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80008a6:	bd70      	popgt	{r4, r5, r6, pc}
 80008a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80008ac:	f04f 0e00 	mov.w	lr, #0
 80008b0:	3c01      	subs	r4, #1
 80008b2:	e690      	b.n	80005d6 <__aeabi_dmul+0xde>
 80008b4:	ea45 0e06 	orr.w	lr, r5, r6
 80008b8:	e68d      	b.n	80005d6 <__aeabi_dmul+0xde>
 80008ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80008be:	ea94 0f0c 	teq	r4, ip
 80008c2:	bf08      	it	eq
 80008c4:	ea95 0f0c 	teqeq	r5, ip
 80008c8:	f43f af3b 	beq.w	8000742 <__aeabi_dmul+0x24a>
 80008cc:	ea94 0f0c 	teq	r4, ip
 80008d0:	d10a      	bne.n	80008e8 <__aeabi_ddiv+0x19c>
 80008d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008d6:	f47f af34 	bne.w	8000742 <__aeabi_dmul+0x24a>
 80008da:	ea95 0f0c 	teq	r5, ip
 80008de:	f47f af25 	bne.w	800072c <__aeabi_dmul+0x234>
 80008e2:	4610      	mov	r0, r2
 80008e4:	4619      	mov	r1, r3
 80008e6:	e72c      	b.n	8000742 <__aeabi_dmul+0x24a>
 80008e8:	ea95 0f0c 	teq	r5, ip
 80008ec:	d106      	bne.n	80008fc <__aeabi_ddiv+0x1b0>
 80008ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008f2:	f43f aefd 	beq.w	80006f0 <__aeabi_dmul+0x1f8>
 80008f6:	4610      	mov	r0, r2
 80008f8:	4619      	mov	r1, r3
 80008fa:	e722      	b.n	8000742 <__aeabi_dmul+0x24a>
 80008fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000900:	bf18      	it	ne
 8000902:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000906:	f47f aec5 	bne.w	8000694 <__aeabi_dmul+0x19c>
 800090a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 800090e:	f47f af0d 	bne.w	800072c <__aeabi_dmul+0x234>
 8000912:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000916:	f47f aeeb 	bne.w	80006f0 <__aeabi_dmul+0x1f8>
 800091a:	e712      	b.n	8000742 <__aeabi_dmul+0x24a>

0800091c <__gedf2>:
 800091c:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8000920:	e006      	b.n	8000930 <__cmpdf2+0x4>
 8000922:	bf00      	nop

08000924 <__ledf2>:
 8000924:	f04f 0c01 	mov.w	ip, #1
 8000928:	e002      	b.n	8000930 <__cmpdf2+0x4>
 800092a:	bf00      	nop

0800092c <__cmpdf2>:
 800092c:	f04f 0c01 	mov.w	ip, #1
 8000930:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000934:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000938:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800093c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000940:	bf18      	it	ne
 8000942:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000946:	d01b      	beq.n	8000980 <__cmpdf2+0x54>
 8000948:	b001      	add	sp, #4
 800094a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800094e:	bf0c      	ite	eq
 8000950:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000954:	ea91 0f03 	teqne	r1, r3
 8000958:	bf02      	ittt	eq
 800095a:	ea90 0f02 	teqeq	r0, r2
 800095e:	2000      	moveq	r0, #0
 8000960:	4770      	bxeq	lr
 8000962:	f110 0f00 	cmn.w	r0, #0
 8000966:	ea91 0f03 	teq	r1, r3
 800096a:	bf58      	it	pl
 800096c:	4299      	cmppl	r1, r3
 800096e:	bf08      	it	eq
 8000970:	4290      	cmpeq	r0, r2
 8000972:	bf2c      	ite	cs
 8000974:	17d8      	asrcs	r0, r3, #31
 8000976:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800097a:	f040 0001 	orr.w	r0, r0, #1
 800097e:	4770      	bx	lr
 8000980:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000984:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000988:	d102      	bne.n	8000990 <__cmpdf2+0x64>
 800098a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800098e:	d107      	bne.n	80009a0 <__cmpdf2+0x74>
 8000990:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000994:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000998:	d1d6      	bne.n	8000948 <__cmpdf2+0x1c>
 800099a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800099e:	d0d3      	beq.n	8000948 <__cmpdf2+0x1c>
 80009a0:	f85d 0b04 	ldr.w	r0, [sp], #4
 80009a4:	4770      	bx	lr
 80009a6:	bf00      	nop

080009a8 <__aeabi_cdrcmple>:
 80009a8:	4684      	mov	ip, r0
 80009aa:	4610      	mov	r0, r2
 80009ac:	4662      	mov	r2, ip
 80009ae:	468c      	mov	ip, r1
 80009b0:	4619      	mov	r1, r3
 80009b2:	4663      	mov	r3, ip
 80009b4:	e000      	b.n	80009b8 <__aeabi_cdcmpeq>
 80009b6:	bf00      	nop

080009b8 <__aeabi_cdcmpeq>:
 80009b8:	b501      	push	{r0, lr}
 80009ba:	f7ff ffb7 	bl	800092c <__cmpdf2>
 80009be:	2800      	cmp	r0, #0
 80009c0:	bf48      	it	mi
 80009c2:	f110 0f00 	cmnmi.w	r0, #0
 80009c6:	bd01      	pop	{r0, pc}

080009c8 <__aeabi_dcmpeq>:
 80009c8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009cc:	f7ff fff4 	bl	80009b8 <__aeabi_cdcmpeq>
 80009d0:	bf0c      	ite	eq
 80009d2:	2001      	moveq	r0, #1
 80009d4:	2000      	movne	r0, #0
 80009d6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009da:	bf00      	nop

080009dc <__aeabi_dcmplt>:
 80009dc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e0:	f7ff ffea 	bl	80009b8 <__aeabi_cdcmpeq>
 80009e4:	bf34      	ite	cc
 80009e6:	2001      	movcc	r0, #1
 80009e8:	2000      	movcs	r0, #0
 80009ea:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ee:	bf00      	nop

080009f0 <__aeabi_dcmple>:
 80009f0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009f4:	f7ff ffe0 	bl	80009b8 <__aeabi_cdcmpeq>
 80009f8:	bf94      	ite	ls
 80009fa:	2001      	movls	r0, #1
 80009fc:	2000      	movhi	r0, #0
 80009fe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a02:	bf00      	nop

08000a04 <__aeabi_dcmpge>:
 8000a04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a08:	f7ff ffce 	bl	80009a8 <__aeabi_cdrcmple>
 8000a0c:	bf94      	ite	ls
 8000a0e:	2001      	movls	r0, #1
 8000a10:	2000      	movhi	r0, #0
 8000a12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a16:	bf00      	nop

08000a18 <__aeabi_dcmpgt>:
 8000a18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a1c:	f7ff ffc4 	bl	80009a8 <__aeabi_cdrcmple>
 8000a20:	bf34      	ite	cc
 8000a22:	2001      	movcc	r0, #1
 8000a24:	2000      	movcs	r0, #0
 8000a26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a2a:	bf00      	nop

08000a2c <__aeabi_dcmpun>:
 8000a2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a34:	d102      	bne.n	8000a3c <__aeabi_dcmpun+0x10>
 8000a36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a3a:	d10a      	bne.n	8000a52 <__aeabi_dcmpun+0x26>
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a44:	d102      	bne.n	8000a4c <__aeabi_dcmpun+0x20>
 8000a46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a4a:	d102      	bne.n	8000a52 <__aeabi_dcmpun+0x26>
 8000a4c:	f04f 0000 	mov.w	r0, #0
 8000a50:	4770      	bx	lr
 8000a52:	f04f 0001 	mov.w	r0, #1
 8000a56:	4770      	bx	lr

08000a58 <__aeabi_d2iz>:
 8000a58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a5c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a60:	d215      	bcs.n	8000a8e <__aeabi_d2iz+0x36>
 8000a62:	d511      	bpl.n	8000a88 <__aeabi_d2iz+0x30>
 8000a64:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a6c:	d912      	bls.n	8000a94 <__aeabi_d2iz+0x3c>
 8000a6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a72:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a7a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000a7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000a82:	bf18      	it	ne
 8000a84:	4240      	negne	r0, r0
 8000a86:	4770      	bx	lr
 8000a88:	f04f 0000 	mov.w	r0, #0
 8000a8c:	4770      	bx	lr
 8000a8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a92:	d105      	bne.n	8000aa0 <__aeabi_d2iz+0x48>
 8000a94:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000a98:	bf08      	it	eq
 8000a9a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000a9e:	4770      	bx	lr
 8000aa0:	f04f 0000 	mov.w	r0, #0
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_frsub>:
 8000aa8:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8000aac:	e002      	b.n	8000ab4 <__addsf3>
 8000aae:	bf00      	nop

08000ab0 <__aeabi_fsub>:
 8000ab0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000ab4 <__addsf3>:
 8000ab4:	0042      	lsls	r2, r0, #1
 8000ab6:	bf1f      	itttt	ne
 8000ab8:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000abc:	ea92 0f03 	teqne	r2, r3
 8000ac0:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000ac4:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000ac8:	d06a      	beq.n	8000ba0 <__addsf3+0xec>
 8000aca:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000ace:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000ad2:	bfc1      	itttt	gt
 8000ad4:	18d2      	addgt	r2, r2, r3
 8000ad6:	4041      	eorgt	r1, r0
 8000ad8:	4048      	eorgt	r0, r1
 8000ada:	4041      	eorgt	r1, r0
 8000adc:	bfb8      	it	lt
 8000ade:	425b      	neglt	r3, r3
 8000ae0:	2b19      	cmp	r3, #25
 8000ae2:	bf88      	it	hi
 8000ae4:	4770      	bxhi	lr
 8000ae6:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000aea:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000aee:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8000af2:	bf18      	it	ne
 8000af4:	4240      	negne	r0, r0
 8000af6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000afa:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8000afe:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8000b02:	bf18      	it	ne
 8000b04:	4249      	negne	r1, r1
 8000b06:	ea92 0f03 	teq	r2, r3
 8000b0a:	d03f      	beq.n	8000b8c <__addsf3+0xd8>
 8000b0c:	f1a2 0201 	sub.w	r2, r2, #1
 8000b10:	fa41 fc03 	asr.w	ip, r1, r3
 8000b14:	eb10 000c 	adds.w	r0, r0, ip
 8000b18:	f1c3 0320 	rsb	r3, r3, #32
 8000b1c:	fa01 f103 	lsl.w	r1, r1, r3
 8000b20:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000b24:	d502      	bpl.n	8000b2c <__addsf3+0x78>
 8000b26:	4249      	negs	r1, r1
 8000b28:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000b2c:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8000b30:	d313      	bcc.n	8000b5a <__addsf3+0xa6>
 8000b32:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8000b36:	d306      	bcc.n	8000b46 <__addsf3+0x92>
 8000b38:	0840      	lsrs	r0, r0, #1
 8000b3a:	ea4f 0131 	mov.w	r1, r1, rrx
 8000b3e:	f102 0201 	add.w	r2, r2, #1
 8000b42:	2afe      	cmp	r2, #254	; 0xfe
 8000b44:	d251      	bcs.n	8000bea <__addsf3+0x136>
 8000b46:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8000b4a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000b4e:	bf08      	it	eq
 8000b50:	f020 0001 	biceq.w	r0, r0, #1
 8000b54:	ea40 0003 	orr.w	r0, r0, r3
 8000b58:	4770      	bx	lr
 8000b5a:	0049      	lsls	r1, r1, #1
 8000b5c:	eb40 0000 	adc.w	r0, r0, r0
 8000b60:	3a01      	subs	r2, #1
 8000b62:	bf28      	it	cs
 8000b64:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8000b68:	d2ed      	bcs.n	8000b46 <__addsf3+0x92>
 8000b6a:	fab0 fc80 	clz	ip, r0
 8000b6e:	f1ac 0c08 	sub.w	ip, ip, #8
 8000b72:	ebb2 020c 	subs.w	r2, r2, ip
 8000b76:	fa00 f00c 	lsl.w	r0, r0, ip
 8000b7a:	bfaa      	itet	ge
 8000b7c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000b80:	4252      	neglt	r2, r2
 8000b82:	4318      	orrge	r0, r3
 8000b84:	bfbc      	itt	lt
 8000b86:	40d0      	lsrlt	r0, r2
 8000b88:	4318      	orrlt	r0, r3
 8000b8a:	4770      	bx	lr
 8000b8c:	f092 0f00 	teq	r2, #0
 8000b90:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000b94:	bf06      	itte	eq
 8000b96:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8000b9a:	3201      	addeq	r2, #1
 8000b9c:	3b01      	subne	r3, #1
 8000b9e:	e7b5      	b.n	8000b0c <__addsf3+0x58>
 8000ba0:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000ba4:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000ba8:	bf18      	it	ne
 8000baa:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000bae:	d021      	beq.n	8000bf4 <__addsf3+0x140>
 8000bb0:	ea92 0f03 	teq	r2, r3
 8000bb4:	d004      	beq.n	8000bc0 <__addsf3+0x10c>
 8000bb6:	f092 0f00 	teq	r2, #0
 8000bba:	bf08      	it	eq
 8000bbc:	4608      	moveq	r0, r1
 8000bbe:	4770      	bx	lr
 8000bc0:	ea90 0f01 	teq	r0, r1
 8000bc4:	bf1c      	itt	ne
 8000bc6:	2000      	movne	r0, #0
 8000bc8:	4770      	bxne	lr
 8000bca:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8000bce:	d104      	bne.n	8000bda <__addsf3+0x126>
 8000bd0:	0040      	lsls	r0, r0, #1
 8000bd2:	bf28      	it	cs
 8000bd4:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000bd8:	4770      	bx	lr
 8000bda:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8000bde:	bf3c      	itt	cc
 8000be0:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000be4:	4770      	bxcc	lr
 8000be6:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000bea:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8000bee:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000bf2:	4770      	bx	lr
 8000bf4:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000bf8:	bf16      	itet	ne
 8000bfa:	4608      	movne	r0, r1
 8000bfc:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000c00:	4601      	movne	r1, r0
 8000c02:	0242      	lsls	r2, r0, #9
 8000c04:	bf06      	itte	eq
 8000c06:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000c0a:	ea90 0f01 	teqeq	r0, r1
 8000c0e:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8000c12:	4770      	bx	lr

08000c14 <__aeabi_ui2f>:
 8000c14:	f04f 0300 	mov.w	r3, #0
 8000c18:	e004      	b.n	8000c24 <__aeabi_i2f+0x8>
 8000c1a:	bf00      	nop

08000c1c <__aeabi_i2f>:
 8000c1c:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8000c20:	bf48      	it	mi
 8000c22:	4240      	negmi	r0, r0
 8000c24:	ea5f 0c00 	movs.w	ip, r0
 8000c28:	bf08      	it	eq
 8000c2a:	4770      	bxeq	lr
 8000c2c:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8000c30:	4601      	mov	r1, r0
 8000c32:	f04f 0000 	mov.w	r0, #0
 8000c36:	e01c      	b.n	8000c72 <__aeabi_l2f+0x2a>

08000c38 <__aeabi_ul2f>:
 8000c38:	ea50 0201 	orrs.w	r2, r0, r1
 8000c3c:	bf08      	it	eq
 8000c3e:	4770      	bxeq	lr
 8000c40:	f04f 0300 	mov.w	r3, #0
 8000c44:	e00a      	b.n	8000c5c <__aeabi_l2f+0x14>
 8000c46:	bf00      	nop

08000c48 <__aeabi_l2f>:
 8000c48:	ea50 0201 	orrs.w	r2, r0, r1
 8000c4c:	bf08      	it	eq
 8000c4e:	4770      	bxeq	lr
 8000c50:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000c54:	d502      	bpl.n	8000c5c <__aeabi_l2f+0x14>
 8000c56:	4240      	negs	r0, r0
 8000c58:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000c5c:	ea5f 0c01 	movs.w	ip, r1
 8000c60:	bf02      	ittt	eq
 8000c62:	4684      	moveq	ip, r0
 8000c64:	4601      	moveq	r1, r0
 8000c66:	2000      	moveq	r0, #0
 8000c68:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8000c6c:	bf08      	it	eq
 8000c6e:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000c72:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8000c76:	fabc f28c 	clz	r2, ip
 8000c7a:	3a08      	subs	r2, #8
 8000c7c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000c80:	db10      	blt.n	8000ca4 <__aeabi_l2f+0x5c>
 8000c82:	fa01 fc02 	lsl.w	ip, r1, r2
 8000c86:	4463      	add	r3, ip
 8000c88:	fa00 fc02 	lsl.w	ip, r0, r2
 8000c8c:	f1c2 0220 	rsb	r2, r2, #32
 8000c90:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000c94:	fa20 f202 	lsr.w	r2, r0, r2
 8000c98:	eb43 0002 	adc.w	r0, r3, r2
 8000c9c:	bf08      	it	eq
 8000c9e:	f020 0001 	biceq.w	r0, r0, #1
 8000ca2:	4770      	bx	lr
 8000ca4:	f102 0220 	add.w	r2, r2, #32
 8000ca8:	fa01 fc02 	lsl.w	ip, r1, r2
 8000cac:	f1c2 0220 	rsb	r2, r2, #32
 8000cb0:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000cb4:	fa21 f202 	lsr.w	r2, r1, r2
 8000cb8:	eb43 0002 	adc.w	r0, r3, r2
 8000cbc:	bf08      	it	eq
 8000cbe:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000cc2:	4770      	bx	lr

08000cc4 <lcd_send_cmd>:
#include "i2c.h"
extern void delay(int ms);
#define SLAVE_ADDRESS_LCD (0x27) // change this according to ur setup

void lcd_send_cmd (char cmd)
{
 8000cc4:	b580      	push	{r7, lr}
 8000cc6:	b084      	sub	sp, #16
 8000cc8:	af00      	add	r7, sp, #0
 8000cca:	4603      	mov	r3, r0
 8000ccc:	71fb      	strb	r3, [r7, #7]
  char data_u, data_l;
	uint8_t data_t[4];
	data_u = (cmd&0xf0);
 8000cce:	79fb      	ldrb	r3, [r7, #7]
 8000cd0:	f023 030f 	bic.w	r3, r3, #15
 8000cd4:	73fb      	strb	r3, [r7, #15]
	data_l = ((cmd<<4)&0xf0);
 8000cd6:	79fb      	ldrb	r3, [r7, #7]
 8000cd8:	011b      	lsls	r3, r3, #4
 8000cda:	73bb      	strb	r3, [r7, #14]
	data_t[0] = data_u|0x0C;  //en=1, rs=0
 8000cdc:	7bfb      	ldrb	r3, [r7, #15]
 8000cde:	f043 030c 	orr.w	r3, r3, #12
 8000ce2:	b2db      	uxtb	r3, r3
 8000ce4:	723b      	strb	r3, [r7, #8]
	data_t[1] = data_u|0x08;  //en=0, rs=0
 8000ce6:	7bfb      	ldrb	r3, [r7, #15]
 8000ce8:	f043 0308 	orr.w	r3, r3, #8
 8000cec:	b2db      	uxtb	r3, r3
 8000cee:	727b      	strb	r3, [r7, #9]
	data_t[2] = data_l|0x0C;  //en=1, rs=0
 8000cf0:	7bbb      	ldrb	r3, [r7, #14]
 8000cf2:	f043 030c 	orr.w	r3, r3, #12
 8000cf6:	b2db      	uxtb	r3, r3
 8000cf8:	72bb      	strb	r3, [r7, #10]
	data_t[3] = data_l|0x08;  //en=0, rs=0
 8000cfa:	7bbb      	ldrb	r3, [r7, #14]
 8000cfc:	f043 0308 	orr.w	r3, r3, #8
 8000d00:	b2db      	uxtb	r3, r3
 8000d02:	72fb      	strb	r3, [r7, #11]
	lcd_write_i2c(SLAVE_ADDRESS_LCD,(uint8_t *)data_t,4);
 8000d04:	f107 0308 	add.w	r3, r7, #8
 8000d08:	2204      	movs	r2, #4
 8000d0a:	4619      	mov	r1, r3
 8000d0c:	2027      	movs	r0, #39	; 0x27
 8000d0e:	f000 f98d 	bl	800102c <lcd_write_i2c>
}
 8000d12:	bf00      	nop
 8000d14:	3710      	adds	r7, #16
 8000d16:	46bd      	mov	sp, r7
 8000d18:	bd80      	pop	{r7, pc}

08000d1a <lcd_send_data>:

void lcd_send_data (char data)
{
 8000d1a:	b580      	push	{r7, lr}
 8000d1c:	b084      	sub	sp, #16
 8000d1e:	af00      	add	r7, sp, #0
 8000d20:	4603      	mov	r3, r0
 8000d22:	71fb      	strb	r3, [r7, #7]
	char data_u, data_l;
	uint8_t data_t[4];
	data_u = (data&0xf0);
 8000d24:	79fb      	ldrb	r3, [r7, #7]
 8000d26:	f023 030f 	bic.w	r3, r3, #15
 8000d2a:	73fb      	strb	r3, [r7, #15]
	data_l = ((data<<4)&0xf0);
 8000d2c:	79fb      	ldrb	r3, [r7, #7]
 8000d2e:	011b      	lsls	r3, r3, #4
 8000d30:	73bb      	strb	r3, [r7, #14]
	data_t[0] = data_u|0x0D;  //en=1, rs=1
 8000d32:	7bfb      	ldrb	r3, [r7, #15]
 8000d34:	f043 030d 	orr.w	r3, r3, #13
 8000d38:	b2db      	uxtb	r3, r3
 8000d3a:	723b      	strb	r3, [r7, #8]
	data_t[1] = data_u|0x09;  //en=0, rs=1
 8000d3c:	7bfb      	ldrb	r3, [r7, #15]
 8000d3e:	f043 0309 	orr.w	r3, r3, #9
 8000d42:	b2db      	uxtb	r3, r3
 8000d44:	727b      	strb	r3, [r7, #9]
	data_t[2] = data_l|0x0D;  //en=1, rs=1
 8000d46:	7bbb      	ldrb	r3, [r7, #14]
 8000d48:	f043 030d 	orr.w	r3, r3, #13
 8000d4c:	b2db      	uxtb	r3, r3
 8000d4e:	72bb      	strb	r3, [r7, #10]
	data_t[3] = data_l|0x09;  //en=0, rs=1
 8000d50:	7bbb      	ldrb	r3, [r7, #14]
 8000d52:	f043 0309 	orr.w	r3, r3, #9
 8000d56:	b2db      	uxtb	r3, r3
 8000d58:	72fb      	strb	r3, [r7, #11]
	lcd_write_i2c(SLAVE_ADDRESS_LCD,(uint8_t *)data_t,4);
 8000d5a:	f107 0308 	add.w	r3, r7, #8
 8000d5e:	2204      	movs	r2, #4
 8000d60:	4619      	mov	r1, r3
 8000d62:	2027      	movs	r0, #39	; 0x27
 8000d64:	f000 f962 	bl	800102c <lcd_write_i2c>
}
 8000d68:	bf00      	nop
 8000d6a:	3710      	adds	r7, #16
 8000d6c:	46bd      	mov	sp, r7
 8000d6e:	bd80      	pop	{r7, pc}

08000d70 <setCursor>:

void setCursor(int a, int b)
{
 8000d70:	b580      	push	{r7, lr}
 8000d72:	b084      	sub	sp, #16
 8000d74:	af00      	add	r7, sp, #0
 8000d76:	6078      	str	r0, [r7, #4]
 8000d78:	6039      	str	r1, [r7, #0]
	int i=0;
 8000d7a:	2300      	movs	r3, #0
 8000d7c:	60fb      	str	r3, [r7, #12]
	switch(b){
 8000d7e:	683b      	ldr	r3, [r7, #0]
 8000d80:	2b03      	cmp	r3, #3
 8000d82:	d81b      	bhi.n	8000dbc <setCursor+0x4c>
 8000d84:	a201      	add	r2, pc, #4	; (adr r2, 8000d8c <setCursor+0x1c>)
 8000d86:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000d8a:	bf00      	nop
 8000d8c:	08000d9d 	.word	0x08000d9d
 8000d90:	08000da5 	.word	0x08000da5
 8000d94:	08000dad 	.word	0x08000dad
 8000d98:	08000db5 	.word	0x08000db5
	case 0:lcd_send_cmd(0x80);break;
 8000d9c:	2080      	movs	r0, #128	; 0x80
 8000d9e:	f7ff ff91 	bl	8000cc4 <lcd_send_cmd>
 8000da2:	e00b      	b.n	8000dbc <setCursor+0x4c>
	case 1:lcd_send_cmd(0xC0);break;
 8000da4:	20c0      	movs	r0, #192	; 0xc0
 8000da6:	f7ff ff8d 	bl	8000cc4 <lcd_send_cmd>
 8000daa:	e007      	b.n	8000dbc <setCursor+0x4c>
	case 2:lcd_send_cmd(0x94);break;
 8000dac:	2094      	movs	r0, #148	; 0x94
 8000dae:	f7ff ff89 	bl	8000cc4 <lcd_send_cmd>
 8000db2:	e003      	b.n	8000dbc <setCursor+0x4c>
	case 3:lcd_send_cmd(0xd4);break;}
 8000db4:	20d4      	movs	r0, #212	; 0xd4
 8000db6:	f7ff ff85 	bl	8000cc4 <lcd_send_cmd>
 8000dba:	bf00      	nop
	for(i=0;i<a;i++)
 8000dbc:	2300      	movs	r3, #0
 8000dbe:	60fb      	str	r3, [r7, #12]
 8000dc0:	e005      	b.n	8000dce <setCursor+0x5e>
	lcd_send_cmd(0x14);
 8000dc2:	2014      	movs	r0, #20
 8000dc4:	f7ff ff7e 	bl	8000cc4 <lcd_send_cmd>
	for(i=0;i<a;i++)
 8000dc8:	68fb      	ldr	r3, [r7, #12]
 8000dca:	3301      	adds	r3, #1
 8000dcc:	60fb      	str	r3, [r7, #12]
 8000dce:	68fa      	ldr	r2, [r7, #12]
 8000dd0:	687b      	ldr	r3, [r7, #4]
 8000dd2:	429a      	cmp	r2, r3
 8000dd4:	dbf5      	blt.n	8000dc2 <setCursor+0x52>
}
 8000dd6:	bf00      	nop
 8000dd8:	bf00      	nop
 8000dda:	3710      	adds	r7, #16
 8000ddc:	46bd      	mov	sp, r7
 8000dde:	bd80      	pop	{r7, pc}

08000de0 <lcd_send_string>:


void lcd_send_string (char *str)
{
 8000de0:	b580      	push	{r7, lr}
 8000de2:	b082      	sub	sp, #8
 8000de4:	af00      	add	r7, sp, #0
 8000de6:	6078      	str	r0, [r7, #4]
	while (*str) lcd_send_data (*str++);
 8000de8:	e006      	b.n	8000df8 <lcd_send_string+0x18>
 8000dea:	687b      	ldr	r3, [r7, #4]
 8000dec:	1c5a      	adds	r2, r3, #1
 8000dee:	607a      	str	r2, [r7, #4]
 8000df0:	781b      	ldrb	r3, [r3, #0]
 8000df2:	4618      	mov	r0, r3
 8000df4:	f7ff ff91 	bl	8000d1a <lcd_send_data>
 8000df8:	687b      	ldr	r3, [r7, #4]
 8000dfa:	781b      	ldrb	r3, [r3, #0]
 8000dfc:	2b00      	cmp	r3, #0
 8000dfe:	d1f4      	bne.n	8000dea <lcd_send_string+0xa>
}
 8000e00:	bf00      	nop
 8000e02:	bf00      	nop
 8000e04:	3708      	adds	r7, #8
 8000e06:	46bd      	mov	sp, r7
 8000e08:	bd80      	pop	{r7, pc}

08000e0a <lcd_init>:
void lcd_init (void)
{
 8000e0a:	b580      	push	{r7, lr}
 8000e0c:	af00      	add	r7, sp, #0
	// 4 bit initialisation
	delay(50);  // wait for >40ms
 8000e0e:	2032      	movs	r0, #50	; 0x32
 8000e10:	f000 f8e2 	bl	8000fd8 <delay>
	lcd_send_cmd (0x3);
 8000e14:	2003      	movs	r0, #3
 8000e16:	f7ff ff55 	bl	8000cc4 <lcd_send_cmd>
	delay(5);  // wait for >4.1ms
 8000e1a:	2005      	movs	r0, #5
 8000e1c:	f000 f8dc 	bl	8000fd8 <delay>
	lcd_send_cmd (0x3);
 8000e20:	2003      	movs	r0, #3
 8000e22:	f7ff ff4f 	bl	8000cc4 <lcd_send_cmd>
	delay(1);  // wait for >100us
 8000e26:	2001      	movs	r0, #1
 8000e28:	f000 f8d6 	bl	8000fd8 <delay>
	lcd_send_cmd (0x3);
 8000e2c:	2003      	movs	r0, #3
 8000e2e:	f7ff ff49 	bl	8000cc4 <lcd_send_cmd>
	delay(10);
 8000e32:	200a      	movs	r0, #10
 8000e34:	f000 f8d0 	bl	8000fd8 <delay>
	lcd_send_cmd (0x2);  // 4bit mode
 8000e38:	2002      	movs	r0, #2
 8000e3a:	f7ff ff43 	bl	8000cc4 <lcd_send_cmd>
	delay(10);
 8000e3e:	200a      	movs	r0, #10
 8000e40:	f000 f8ca 	bl	8000fd8 <delay>

  // dislay initialisation
	lcd_send_cmd (0x28); // Function set --> DL=0 (4 bit mode), N = 1 (2 line display) F = 0 (5x8 characters)
 8000e44:	2028      	movs	r0, #40	; 0x28
 8000e46:	f7ff ff3d 	bl	8000cc4 <lcd_send_cmd>
	delay(1);
 8000e4a:	2001      	movs	r0, #1
 8000e4c:	f000 f8c4 	bl	8000fd8 <delay>
	lcd_send_cmd (0x08); //Display on/off control --> D=0,C=0, B=0  ---> display off
 8000e50:	2008      	movs	r0, #8
 8000e52:	f7ff ff37 	bl	8000cc4 <lcd_send_cmd>
	delay(1);
 8000e56:	2001      	movs	r0, #1
 8000e58:	f000 f8be 	bl	8000fd8 <delay>
	lcd_send_cmd (0x01);  // clear display
 8000e5c:	2001      	movs	r0, #1
 8000e5e:	f7ff ff31 	bl	8000cc4 <lcd_send_cmd>
	delay(1);
 8000e62:	2001      	movs	r0, #1
 8000e64:	f000 f8b8 	bl	8000fd8 <delay>
	delay(1);
 8000e68:	2001      	movs	r0, #1
 8000e6a:	f000 f8b5 	bl	8000fd8 <delay>
	lcd_send_cmd (0x06); //Entry mode set --> I/D = 1 (increment cursor) & S = 0 (no shift)
 8000e6e:	2006      	movs	r0, #6
 8000e70:	f7ff ff28 	bl	8000cc4 <lcd_send_cmd>
	delay(1);
 8000e74:	2001      	movs	r0, #1
 8000e76:	f000 f8af 	bl	8000fd8 <delay>
	lcd_send_cmd (0x0C); //Display on/off control --> D = 1, C and B = 0. (Cursor and blink, last two bits)
 8000e7a:	200c      	movs	r0, #12
 8000e7c:	f7ff ff22 	bl	8000cc4 <lcd_send_cmd>





}
 8000e80:	bf00      	nop
 8000e82:	bd80      	pop	{r7, pc}

08000e84 <lcd_clear>:

void lcd_clear (void)
{
 8000e84:	b580      	push	{r7, lr}
 8000e86:	af00      	add	r7, sp, #0
	//for (int i=0; i<100; i++)
//	{
//		lcd_send_data (' ');
//	}
	#define LCD_CLEARDISPLAY 0x01
	lcd_send_cmd(LCD_CLEARDISPLAY);
 8000e88:	2001      	movs	r0, #1
 8000e8a:	f7ff ff1b 	bl	8000cc4 <lcd_send_cmd>
	delay(100);
 8000e8e:	2064      	movs	r0, #100	; 0x64
 8000e90:	f000 f8a2 	bl	8000fd8 <delay>
	
}
 8000e94:	bf00      	nop
 8000e96:	bd80      	pop	{r7, pc}

08000e98 <adc_init>:
#define SR_EOC			(1U<<1)

/********************************ADC1 INITIALIZATION************************************/

void adc_init(void)
{
 8000e98:	b480      	push	{r7}
 8000e9a:	af00      	add	r7, sp, #0

	// Enable ADC1 and GPIOA clock
    RCC->APB2ENR |= RCC_APB2ENR_ADC1EN | RCC_APB2ENR_IOPAEN | RCC_APB2ENR_AFIOEN;
 8000e9c:	4b18      	ldr	r3, [pc, #96]	; (8000f00 <adc_init+0x68>)
 8000e9e:	699b      	ldr	r3, [r3, #24]
 8000ea0:	4a17      	ldr	r2, [pc, #92]	; (8000f00 <adc_init+0x68>)
 8000ea2:	f443 7301 	orr.w	r3, r3, #516	; 0x204
 8000ea6:	f043 0301 	orr.w	r3, r3, #1
 8000eaa:	6193      	str	r3, [r2, #24]

    // Initialize PA1 and PA4 as analog inputs for ADC
    GPIOA->CRL &= ~((GPIO_CRL_MODE1 | GPIO_CRL_CNF1) | (GPIO_CRL_MODE4 | GPIO_CRL_CNF4)); // Clear MODE and CNF for PA1 and PA4
 8000eac:	4b15      	ldr	r3, [pc, #84]	; (8000f04 <adc_init+0x6c>)
 8000eae:	681b      	ldr	r3, [r3, #0]
 8000eb0:	4a14      	ldr	r2, [pc, #80]	; (8000f04 <adc_init+0x6c>)
 8000eb2:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
 8000eb6:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000eba:	6013      	str	r3, [r2, #0]


    //1 Set ADC pre-scaler to divide APB2 clock by 8 (72MHz/8 = 9Mhz)
    RCC->CFGR |= RCC_CFGR_ADCPRE_DIV8;
 8000ebc:	4b10      	ldr	r3, [pc, #64]	; (8000f00 <adc_init+0x68>)
 8000ebe:	685b      	ldr	r3, [r3, #4]
 8000ec0:	4a0f      	ldr	r2, [pc, #60]	; (8000f00 <adc_init+0x68>)
 8000ec2:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8000ec6:	6053      	str	r3, [r2, #4]

    // Enable ADC1
    ADC1->CR2 |= ADC_CR2_ADON;
 8000ec8:	4b0f      	ldr	r3, [pc, #60]	; (8000f08 <adc_init+0x70>)
 8000eca:	689b      	ldr	r3, [r3, #8]
 8000ecc:	4a0e      	ldr	r2, [pc, #56]	; (8000f08 <adc_init+0x70>)
 8000ece:	f043 0301 	orr.w	r3, r3, #1
 8000ed2:	6093      	str	r3, [r2, #8]


    // 2 Set ADC sampling rate to its lowest value for PA0, PA1, and PA4
    ADC1->SMPR2 = 0x0000703F; //I'm using PA0, PA1,PA4
 8000ed4:	4b0c      	ldr	r3, [pc, #48]	; (8000f08 <adc_init+0x70>)
 8000ed6:	f247 023f 	movw	r2, #28735	; 0x703f
 8000eda:	611a      	str	r2, [r3, #16]

    // 3 ADC1 calibration
    ADC1->CR2 |= ADC_CR2_CAL;
 8000edc:	4b0a      	ldr	r3, [pc, #40]	; (8000f08 <adc_init+0x70>)
 8000ede:	689b      	ldr	r3, [r3, #8]
 8000ee0:	4a09      	ldr	r2, [pc, #36]	; (8000f08 <adc_init+0x70>)
 8000ee2:	f043 0304 	orr.w	r3, r3, #4
 8000ee6:	6093      	str	r3, [r2, #8]
    while ((ADC1->CR2 & (ADC_CR2_CAL)) == ADC_CR2_CAL);
 8000ee8:	bf00      	nop
 8000eea:	4b07      	ldr	r3, [pc, #28]	; (8000f08 <adc_init+0x70>)
 8000eec:	689b      	ldr	r3, [r3, #8]
 8000eee:	f003 0304 	and.w	r3, r3, #4
 8000ef2:	2b04      	cmp	r3, #4
 8000ef4:	d0f9      	beq.n	8000eea <adc_init+0x52>

}
 8000ef6:	bf00      	nop
 8000ef8:	bf00      	nop
 8000efa:	46bd      	mov	sp, r7
 8000efc:	bc80      	pop	{r7}
 8000efe:	4770      	bx	lr
 8000f00:	40021000 	.word	0x40021000
 8000f04:	40010800 	.word	0x40010800
 8000f08:	40012400 	.word	0x40012400

08000f0c <start_conversion>:

/***************************ADC1 CONVERSION FUNCTION BASED ON CHANNEL************************/

uint32_t start_conversion(uint32_t channel) {
 8000f0c:	b480      	push	{r7}
 8000f0e:	b083      	sub	sp, #12
 8000f10:	af00      	add	r7, sp, #0
 8000f12:	6078      	str	r0, [r7, #4]

    // Select the ADC channel
    ADC1->SQR3 = channel;
 8000f14:	4a0b      	ldr	r2, [pc, #44]	; (8000f44 <start_conversion+0x38>)
 8000f16:	687b      	ldr	r3, [r7, #4]
 8000f18:	6353      	str	r3, [r2, #52]	; 0x34

    // Start the conversion
    ADC1->CR2 |= ADC_CR2_ADON ;//| ADC_CR2_SWSTART;
 8000f1a:	4b0a      	ldr	r3, [pc, #40]	; (8000f44 <start_conversion+0x38>)
 8000f1c:	689b      	ldr	r3, [r3, #8]
 8000f1e:	4a09      	ldr	r2, [pc, #36]	; (8000f44 <start_conversion+0x38>)
 8000f20:	f043 0301 	orr.w	r3, r3, #1
 8000f24:	6093      	str	r3, [r2, #8]

    // Wait for the conversion to complete
    while (!(ADC1->SR & ADC_SR_EOC));
 8000f26:	bf00      	nop
 8000f28:	4b06      	ldr	r3, [pc, #24]	; (8000f44 <start_conversion+0x38>)
 8000f2a:	681b      	ldr	r3, [r3, #0]
 8000f2c:	f003 0302 	and.w	r3, r3, #2
 8000f30:	2b00      	cmp	r3, #0
 8000f32:	d0f9      	beq.n	8000f28 <start_conversion+0x1c>

    // Return the conversion result
    return ADC1->DR;
 8000f34:	4b03      	ldr	r3, [pc, #12]	; (8000f44 <start_conversion+0x38>)
 8000f36:	6cdb      	ldr	r3, [r3, #76]	; 0x4c

}
 8000f38:	4618      	mov	r0, r3
 8000f3a:	370c      	adds	r7, #12
 8000f3c:	46bd      	mov	sp, r7
 8000f3e:	bc80      	pop	{r7}
 8000f40:	4770      	bx	lr
 8000f42:	bf00      	nop
 8000f44:	40012400 	.word	0x40012400

08000f48 <i2c_init>:
#include "i2c.h"
#include "uart.h"
#include "stdio.h"

char data[50];
void i2c_init(void) {
 8000f48:	b480      	push	{r7}
 8000f4a:	af00      	add	r7, sp, #0
    // Enable clock for GPIOB and I2C1
    RCC->APB2ENR |= RCC_APB2ENR_IOPBEN; // Enable GPIOB clock (IOPBEN in APB2ENR for F1 series)
 8000f4c:	4b1f      	ldr	r3, [pc, #124]	; (8000fcc <i2c_init+0x84>)
 8000f4e:	699b      	ldr	r3, [r3, #24]
 8000f50:	4a1e      	ldr	r2, [pc, #120]	; (8000fcc <i2c_init+0x84>)
 8000f52:	f043 0308 	orr.w	r3, r3, #8
 8000f56:	6193      	str	r3, [r2, #24]
    RCC->APB1ENR |= RCC_APB1ENR_I2C1EN; // Enable I2C1 clock
 8000f58:	4b1c      	ldr	r3, [pc, #112]	; (8000fcc <i2c_init+0x84>)
 8000f5a:	69db      	ldr	r3, [r3, #28]
 8000f5c:	4a1b      	ldr	r2, [pc, #108]	; (8000fcc <i2c_init+0x84>)
 8000f5e:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8000f62:	61d3      	str	r3, [r2, #28]

    // Configure PB6 and PB7 for I2C use
    GPIOB->CRL &= ~(GPIO_CRL_CNF6 | GPIO_CRL_CNF7 | GPIO_CRL_MODE6 | GPIO_CRL_MODE7); // Clear CNF and MODE bits for PB6 and PB7
 8000f64:	4b1a      	ldr	r3, [pc, #104]	; (8000fd0 <i2c_init+0x88>)
 8000f66:	681b      	ldr	r3, [r3, #0]
 8000f68:	4a19      	ldr	r2, [pc, #100]	; (8000fd0 <i2c_init+0x88>)
 8000f6a:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8000f6e:	6013      	str	r3, [r2, #0]
    GPIOB->CRL |= (GPIO_CRL_CNF6_1 | GPIO_CRL_CNF7_1); // Set PB6/PB7 as alternate function open-drain
 8000f70:	4b17      	ldr	r3, [pc, #92]	; (8000fd0 <i2c_init+0x88>)
 8000f72:	681b      	ldr	r3, [r3, #0]
 8000f74:	4a16      	ldr	r2, [pc, #88]	; (8000fd0 <i2c_init+0x88>)
 8000f76:	f043 4308 	orr.w	r3, r3, #2281701376	; 0x88000000
 8000f7a:	6013      	str	r3, [r2, #0]
    GPIOB->CRL |= (GPIO_CRL_MODE6_1 | GPIO_CRL_MODE7_1); // Set PB6/PB7 to Fast mode (10 MHz)
 8000f7c:	4b14      	ldr	r3, [pc, #80]	; (8000fd0 <i2c_init+0x88>)
 8000f7e:	681b      	ldr	r3, [r3, #0]
 8000f80:	4a13      	ldr	r2, [pc, #76]	; (8000fd0 <i2c_init+0x88>)
 8000f82:	f043 5308 	orr.w	r3, r3, #570425344	; 0x22000000
 8000f86:	6013      	str	r3, [r2, #0]

    // Reset and release reset of I2C1
    I2C1->CR1 |= I2C_CR1_SWRST;
 8000f88:	4b12      	ldr	r3, [pc, #72]	; (8000fd4 <i2c_init+0x8c>)
 8000f8a:	681b      	ldr	r3, [r3, #0]
 8000f8c:	4a11      	ldr	r2, [pc, #68]	; (8000fd4 <i2c_init+0x8c>)
 8000f8e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000f92:	6013      	str	r3, [r2, #0]
    I2C1->CR1 &= ~I2C_CR1_SWRST;
 8000f94:	4b0f      	ldr	r3, [pc, #60]	; (8000fd4 <i2c_init+0x8c>)
 8000f96:	681b      	ldr	r3, [r3, #0]
 8000f98:	4a0e      	ldr	r2, [pc, #56]	; (8000fd4 <i2c_init+0x8c>)
 8000f9a:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8000f9e:	6013      	str	r3, [r2, #0]

    // Configure I2C1
    I2C1->CR2 |= 36; // Set I2C clock speed (36MHz PCLK1, adjust if your clock setup is different)
 8000fa0:	4b0c      	ldr	r3, [pc, #48]	; (8000fd4 <i2c_init+0x8c>)
 8000fa2:	685b      	ldr	r3, [r3, #4]
 8000fa4:	4a0b      	ldr	r2, [pc, #44]	; (8000fd4 <i2c_init+0x8c>)
 8000fa6:	f043 0324 	orr.w	r3, r3, #36	; 0x24
 8000faa:	6053      	str	r3, [r2, #4]
    I2C1->CCR = 180; // CCR value for standard mode I2C (100kHz) with PCLK1 at 36MHz
 8000fac:	4b09      	ldr	r3, [pc, #36]	; (8000fd4 <i2c_init+0x8c>)
 8000fae:	22b4      	movs	r2, #180	; 0xb4
 8000fb0:	61da      	str	r2, [r3, #28]
    I2C1->TRISE = 37; // Maximum rise time (in APB1 clock cycles in standard mode, 1000ns/27.78ns = 36 + 1)
 8000fb2:	4b08      	ldr	r3, [pc, #32]	; (8000fd4 <i2c_init+0x8c>)
 8000fb4:	2225      	movs	r2, #37	; 0x25
 8000fb6:	621a      	str	r2, [r3, #32]

    // Enable I2C1
    I2C1->CR1 |= I2C_CR1_PE;
 8000fb8:	4b06      	ldr	r3, [pc, #24]	; (8000fd4 <i2c_init+0x8c>)
 8000fba:	681b      	ldr	r3, [r3, #0]
 8000fbc:	4a05      	ldr	r2, [pc, #20]	; (8000fd4 <i2c_init+0x8c>)
 8000fbe:	f043 0301 	orr.w	r3, r3, #1
 8000fc2:	6013      	str	r3, [r2, #0]
}
 8000fc4:	bf00      	nop
 8000fc6:	46bd      	mov	sp, r7
 8000fc8:	bc80      	pop	{r7}
 8000fca:	4770      	bx	lr
 8000fcc:	40021000 	.word	0x40021000
 8000fd0:	40010c00 	.word	0x40010c00
 8000fd4:	40005400 	.word	0x40005400

08000fd8 <delay>:
return 0;
}


void delay(int ms)
	{
 8000fd8:	b480      	push	{r7}
 8000fda:	b085      	sub	sp, #20
 8000fdc:	af00      	add	r7, sp, #0
 8000fde:	6078      	str	r0, [r7, #4]
	SysTick->LOAD=16000-1;
 8000fe0:	4b11      	ldr	r3, [pc, #68]	; (8001028 <delay+0x50>)
 8000fe2:	f643 627f 	movw	r2, #15999	; 0x3e7f
 8000fe6:	605a      	str	r2, [r3, #4]
	SysTick->VAL=0;
 8000fe8:	4b0f      	ldr	r3, [pc, #60]	; (8001028 <delay+0x50>)
 8000fea:	2200      	movs	r2, #0
 8000fec:	609a      	str	r2, [r3, #8]
	SysTick->CTRL=0x5;
 8000fee:	4b0e      	ldr	r3, [pc, #56]	; (8001028 <delay+0x50>)
 8000ff0:	2205      	movs	r2, #5
 8000ff2:	601a      	str	r2, [r3, #0]
		for (int i=0;i<ms;i++)
 8000ff4:	2300      	movs	r3, #0
 8000ff6:	60fb      	str	r3, [r7, #12]
 8000ff8:	e009      	b.n	800100e <delay+0x36>
		{
			while(!(SysTick->CTRL &0x10000)){}
 8000ffa:	bf00      	nop
 8000ffc:	4b0a      	ldr	r3, [pc, #40]	; (8001028 <delay+0x50>)
 8000ffe:	681b      	ldr	r3, [r3, #0]
 8001000:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001004:	2b00      	cmp	r3, #0
 8001006:	d0f9      	beq.n	8000ffc <delay+0x24>
		for (int i=0;i<ms;i++)
 8001008:	68fb      	ldr	r3, [r7, #12]
 800100a:	3301      	adds	r3, #1
 800100c:	60fb      	str	r3, [r7, #12]
 800100e:	68fa      	ldr	r2, [r7, #12]
 8001010:	687b      	ldr	r3, [r7, #4]
 8001012:	429a      	cmp	r2, r3
 8001014:	dbf1      	blt.n	8000ffa <delay+0x22>
		}
	SysTick->CTRL=0;
 8001016:	4b04      	ldr	r3, [pc, #16]	; (8001028 <delay+0x50>)
 8001018:	2200      	movs	r2, #0
 800101a:	601a      	str	r2, [r3, #0]

	}
 800101c:	bf00      	nop
 800101e:	3714      	adds	r7, #20
 8001020:	46bd      	mov	sp, r7
 8001022:	bc80      	pop	{r7}
 8001024:	4770      	bx	lr
 8001026:	bf00      	nop
 8001028:	e000e010 	.word	0xe000e010

0800102c <lcd_write_i2c>:
I2C1->CR1 |= I2C_CR1_STOP;										//wait until transfer finished

}

void lcd_write_i2c(char saddr,uint8_t *buffer, uint8_t length)
{
 800102c:	b480      	push	{r7}
 800102e:	b085      	sub	sp, #20
 8001030:	af00      	add	r7, sp, #0
 8001032:	4603      	mov	r3, r0
 8001034:	6039      	str	r1, [r7, #0]
 8001036:	71fb      	strb	r3, [r7, #7]
 8001038:	4613      	mov	r3, r2
 800103a:	71bb      	strb	r3, [r7, #6]
while (I2C1->SR2 & I2C_SR2_BUSY);           //wait until bus not busy
 800103c:	bf00      	nop
 800103e:	4b21      	ldr	r3, [pc, #132]	; (80010c4 <lcd_write_i2c+0x98>)
 8001040:	699b      	ldr	r3, [r3, #24]
 8001042:	f003 0302 	and.w	r3, r3, #2
 8001046:	2b00      	cmp	r3, #0
 8001048:	d1f9      	bne.n	800103e <lcd_write_i2c+0x12>
I2C1->CR1 |= I2C_CR1_START;                   //generate start
 800104a:	4b1e      	ldr	r3, [pc, #120]	; (80010c4 <lcd_write_i2c+0x98>)
 800104c:	681b      	ldr	r3, [r3, #0]
 800104e:	4a1d      	ldr	r2, [pc, #116]	; (80010c4 <lcd_write_i2c+0x98>)
 8001050:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001054:	6013      	str	r3, [r2, #0]
while (!(I2C1->SR1 & I2C_SR1_SB)){;}					//wait until start is generated
 8001056:	bf00      	nop
 8001058:	4b1a      	ldr	r3, [pc, #104]	; (80010c4 <lcd_write_i2c+0x98>)
 800105a:	695b      	ldr	r3, [r3, #20]
 800105c:	f003 0301 	and.w	r3, r3, #1
 8001060:	2b00      	cmp	r3, #0
 8001062:	d0f9      	beq.n	8001058 <lcd_write_i2c+0x2c>
volatile int Temp;
I2C1->DR = saddr<< 1;                 	 			// Send slave address
 8001064:	79fb      	ldrb	r3, [r7, #7]
 8001066:	005a      	lsls	r2, r3, #1
 8001068:	4b16      	ldr	r3, [pc, #88]	; (80010c4 <lcd_write_i2c+0x98>)
 800106a:	611a      	str	r2, [r3, #16]
while (!(I2C1->SR1 & I2C_SR1_ADDR)){;}        //wait until address flag is set
 800106c:	bf00      	nop
 800106e:	4b15      	ldr	r3, [pc, #84]	; (80010c4 <lcd_write_i2c+0x98>)
 8001070:	695b      	ldr	r3, [r3, #20]
 8001072:	f003 0302 	and.w	r3, r3, #2
 8001076:	2b00      	cmp	r3, #0
 8001078:	d0f9      	beq.n	800106e <lcd_write_i2c+0x42>
Temp = I2C1->SR2; 														//Clear SR2
 800107a:	4b12      	ldr	r3, [pc, #72]	; (80010c4 <lcd_write_i2c+0x98>)
 800107c:	699b      	ldr	r3, [r3, #24]
 800107e:	60bb      	str	r3, [r7, #8]
//sending the data
for (uint8_t i=0;i<length;i++)
 8001080:	2300      	movs	r3, #0
 8001082:	73fb      	strb	r3, [r7, #15]
 8001084:	e00f      	b.n	80010a6 <lcd_write_i2c+0x7a>
 {
 I2C1->DR=buffer[i]; 													//filling buffer with command or data
 8001086:	7bfb      	ldrb	r3, [r7, #15]
 8001088:	683a      	ldr	r2, [r7, #0]
 800108a:	4413      	add	r3, r2
 800108c:	781a      	ldrb	r2, [r3, #0]
 800108e:	4b0d      	ldr	r3, [pc, #52]	; (80010c4 <lcd_write_i2c+0x98>)
 8001090:	611a      	str	r2, [r3, #16]
	while (!(I2C1->SR1 & I2C_SR1_BTF));
 8001092:	bf00      	nop
 8001094:	4b0b      	ldr	r3, [pc, #44]	; (80010c4 <lcd_write_i2c+0x98>)
 8001096:	695b      	ldr	r3, [r3, #20]
 8001098:	f003 0304 	and.w	r3, r3, #4
 800109c:	2b00      	cmp	r3, #0
 800109e:	d0f9      	beq.n	8001094 <lcd_write_i2c+0x68>
for (uint8_t i=0;i<length;i++)
 80010a0:	7bfb      	ldrb	r3, [r7, #15]
 80010a2:	3301      	adds	r3, #1
 80010a4:	73fb      	strb	r3, [r7, #15]
 80010a6:	7bfa      	ldrb	r2, [r7, #15]
 80010a8:	79bb      	ldrb	r3, [r7, #6]
 80010aa:	429a      	cmp	r2, r3
 80010ac:	d3eb      	bcc.n	8001086 <lcd_write_i2c+0x5a>
 }

I2C1->CR1 |= I2C_CR1_STOP;										//wait until transfer finished
 80010ae:	4b05      	ldr	r3, [pc, #20]	; (80010c4 <lcd_write_i2c+0x98>)
 80010b0:	681b      	ldr	r3, [r3, #0]
 80010b2:	4a04      	ldr	r2, [pc, #16]	; (80010c4 <lcd_write_i2c+0x98>)
 80010b4:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80010b8:	6013      	str	r3, [r2, #0]

}
 80010ba:	bf00      	nop
 80010bc:	3714      	adds	r7, #20
 80010be:	46bd      	mov	sp, r7
 80010c0:	bc80      	pop	{r7}
 80010c2:	4770      	bx	lr
 80010c4:	40005400 	.word	0x40005400

080010c8 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80010c8:	b480      	push	{r7}
 80010ca:	b083      	sub	sp, #12
 80010cc:	af00      	add	r7, sp, #0
 80010ce:	4603      	mov	r3, r0
 80010d0:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80010d2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80010d6:	2b00      	cmp	r3, #0
 80010d8:	db0b      	blt.n	80010f2 <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010da:	79fb      	ldrb	r3, [r7, #7]
 80010dc:	f003 021f 	and.w	r2, r3, #31
 80010e0:	4906      	ldr	r1, [pc, #24]	; (80010fc <__NVIC_EnableIRQ+0x34>)
 80010e2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80010e6:	095b      	lsrs	r3, r3, #5
 80010e8:	2001      	movs	r0, #1
 80010ea:	fa00 f202 	lsl.w	r2, r0, r2
 80010ee:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 80010f2:	bf00      	nop
 80010f4:	370c      	adds	r7, #12
 80010f6:	46bd      	mov	sp, r7
 80010f8:	bc80      	pop	{r7}
 80010fa:	4770      	bx	lr
 80010fc:	e000e100 	.word	0xe000e100

08001100 <Timer2_Init>:


/*******************************TIM2 INITIALIZATION***********************************/

// Initialize TIM2 to trigger an interrupt every 1ms
void Timer2_Init(void) {
 8001100:	b580      	push	{r7, lr}
 8001102:	af00      	add	r7, sp, #0
    RCC->APB1ENR |= RCC_APB1ENR_TIM2EN; // Enable clock for TIM2
 8001104:	4b11      	ldr	r3, [pc, #68]	; (800114c <Timer2_Init+0x4c>)
 8001106:	69db      	ldr	r3, [r3, #28]
 8001108:	4a10      	ldr	r2, [pc, #64]	; (800114c <Timer2_Init+0x4c>)
 800110a:	f043 0301 	orr.w	r3, r3, #1
 800110e:	61d3      	str	r3, [r2, #28]
    TIM2->PSC = 7200 - 1; // Pre-scaler to tick at 10kHz assuming 72MHz clock, adjust for your clock
 8001110:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001114:	f641 421f 	movw	r2, #7199	; 0x1c1f
 8001118:	629a      	str	r2, [r3, #40]	; 0x28
    TIM2->ARR = 10 - 1;  // Auto-reload at 10 ticks = 1ms
 800111a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800111e:	2209      	movs	r2, #9
 8001120:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->DIER |= TIM_DIER_UIE; // Enable update interrupt
 8001122:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001126:	68db      	ldr	r3, [r3, #12]
 8001128:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800112c:	f043 0301 	orr.w	r3, r3, #1
 8001130:	60d3      	str	r3, [r2, #12]
    TIM2->CR1 |= TIM_CR1_CEN; // Start the timer
 8001132:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001136:	681b      	ldr	r3, [r3, #0]
 8001138:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800113c:	f043 0301 	orr.w	r3, r3, #1
 8001140:	6013      	str	r3, [r2, #0]

    NVIC_EnableIRQ(TIM2_IRQn); // Enable TIM2 interrupt in NVIC
 8001142:	201c      	movs	r0, #28
 8001144:	f7ff ffc0 	bl	80010c8 <__NVIC_EnableIRQ>
}
 8001148:	bf00      	nop
 800114a:	bd80      	pop	{r7, pc}
 800114c:	40021000 	.word	0x40021000

08001150 <TIM2_IRQHandler>:

// TIM2 Interrupt Handler updates msTicks
void TIM2_IRQHandler(void) {
 8001150:	b480      	push	{r7}
 8001152:	af00      	add	r7, sp, #0
    if (TIM2->SR & TIM_SR_UIF) { // Check interrupt source
 8001154:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001158:	691b      	ldr	r3, [r3, #16]
 800115a:	f003 0301 	and.w	r3, r3, #1
 800115e:	2b00      	cmp	r3, #0
 8001160:	d00c      	beq.n	800117c <TIM2_IRQHandler+0x2c>
        msTicks++; // Increment the millisecond counter
 8001162:	4b08      	ldr	r3, [pc, #32]	; (8001184 <TIM2_IRQHandler+0x34>)
 8001164:	681b      	ldr	r3, [r3, #0]
 8001166:	3301      	adds	r3, #1
 8001168:	4a06      	ldr	r2, [pc, #24]	; (8001184 <TIM2_IRQHandler+0x34>)
 800116a:	6013      	str	r3, [r2, #0]
        TIM2->SR &= ~TIM_SR_UIF; // Clear the interrupt flag
 800116c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001170:	691b      	ldr	r3, [r3, #16]
 8001172:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001176:	f023 0301 	bic.w	r3, r3, #1
 800117a:	6113      	str	r3, [r2, #16]
    }
}
 800117c:	bf00      	nop
 800117e:	46bd      	mov	sp, r7
 8001180:	bc80      	pop	{r7}
 8001182:	4770      	bx	lr
 8001184:	20000220 	.word	0x20000220

08001188 <get_millis>:
void Delay_ms(uint32_t ms) {
    uint32_t tickStart = msTicks;
    while ((msTicks - tickStart) < ms);
}

uint32_t get_millis(void) {
 8001188:	b480      	push	{r7}
 800118a:	af00      	add	r7, sp, #0
    return msTicks;
 800118c:	4b02      	ldr	r3, [pc, #8]	; (8001198 <get_millis+0x10>)
 800118e:	681b      	ldr	r3, [r3, #0]
}
 8001190:	4618      	mov	r0, r3
 8001192:	46bd      	mov	sp, r7
 8001194:	bc80      	pop	{r7}
 8001196:	4770      	bx	lr
 8001198:	20000220 	.word	0x20000220

0800119c <delay_ms.0>:
    uint32_t rawTempValue = 0;
    float temperature = 0.0f;


//-------------------------------------------------------------------------//
    void delay_ms(uint32_t delayTime) {
 800119c:	b480      	push	{r7}
 800119e:	b085      	sub	sp, #20
 80011a0:	af00      	add	r7, sp, #0
 80011a2:	6078      	str	r0, [r7, #4]
 80011a4:	f8c7 c000 	str.w	ip, [r7]
        for(uint32_t i = 0; i < delayTime * 18000; i++) {
 80011a8:	2300      	movs	r3, #0
 80011aa:	60fb      	str	r3, [r7, #12]
 80011ac:	e003      	b.n	80011b6 <delay_ms.0+0x1a>
            __NOP(); // NOP (No Operation) is used here to ensure the compiler doesn't optimize the loop away.
 80011ae:	bf00      	nop
        for(uint32_t i = 0; i < delayTime * 18000; i++) {
 80011b0:	68fb      	ldr	r3, [r7, #12]
 80011b2:	3301      	adds	r3, #1
 80011b4:	60fb      	str	r3, [r7, #12]
 80011b6:	687b      	ldr	r3, [r7, #4]
 80011b8:	f244 6250 	movw	r2, #18000	; 0x4650
 80011bc:	fb02 f303 	mul.w	r3, r2, r3
 80011c0:	68fa      	ldr	r2, [r7, #12]
 80011c2:	429a      	cmp	r2, r3
 80011c4:	d3f3      	bcc.n	80011ae <delay_ms.0+0x12>
        }
    }
 80011c6:	bf00      	nop
 80011c8:	bf00      	nop
 80011ca:	3714      	adds	r7, #20
 80011cc:	46bd      	mov	sp, r7
 80011ce:	bc80      	pop	{r7}
 80011d0:	4770      	bx	lr
	...

080011d4 <main>:
int main() {
 80011d4:	b580      	push	{r7, lr}
 80011d6:	b088      	sub	sp, #32
 80011d8:	af02      	add	r7, sp, #8
 80011da:	f107 0320 	add.w	r3, r7, #32
 80011de:	607b      	str	r3, [r7, #4]
	Timer2_Init(); // Initialize timer
 80011e0:	f7ff ff8e 	bl	8001100 <Timer2_Init>
    i2c_init(); // Initialize I2C
 80011e4:	f7ff feb0 	bl	8000f48 <i2c_init>
    lcd_init(); // Initialize LCD
 80011e8:	f7ff fe0f 	bl	8000e0a <lcd_init>
    adc_init(); // Initialize ADC for Sensors and Relay
 80011ec:	f7ff fe54 	bl	8000e98 <adc_init>
    uint32_t moistureValue = 0;
 80011f0:	2300      	movs	r3, #0
 80011f2:	617b      	str	r3, [r7, #20]
    uint32_t rawTempValue = 0;
 80011f4:	2300      	movs	r3, #0
 80011f6:	613b      	str	r3, [r7, #16]
    float temperature = 0.0f;
 80011f8:	f04f 0300 	mov.w	r3, #0
 80011fc:	60fb      	str	r3, [r7, #12]
//----------------------------------PA0 INITIALIZATION----------------------------------//

    // Enable GPIOA clock for PA0 button
	RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;
 80011fe:	4b8a      	ldr	r3, [pc, #552]	; (8001428 <main+0x254>)
 8001200:	699b      	ldr	r3, [r3, #24]
 8001202:	4a89      	ldr	r2, [pc, #548]	; (8001428 <main+0x254>)
 8001204:	f043 0304 	orr.w	r3, r3, #4
 8001208:	6193      	str	r3, [r2, #24]

	// Set PA0 as input with pull-up
	GPIOA->CRL &= ~(GPIO_CRL_MODE0 | GPIO_CRL_CNF0); // Input mode
 800120a:	4b88      	ldr	r3, [pc, #544]	; (800142c <main+0x258>)
 800120c:	681b      	ldr	r3, [r3, #0]
 800120e:	4a87      	ldr	r2, [pc, #540]	; (800142c <main+0x258>)
 8001210:	f023 030f 	bic.w	r3, r3, #15
 8001214:	6013      	str	r3, [r2, #0]
	GPIOA->CRL |= GPIO_CRL_CNF0_1; // Input with pull-up / pull-down
 8001216:	4b85      	ldr	r3, [pc, #532]	; (800142c <main+0x258>)
 8001218:	681b      	ldr	r3, [r3, #0]
 800121a:	4a84      	ldr	r2, [pc, #528]	; (800142c <main+0x258>)
 800121c:	f043 0308 	orr.w	r3, r3, #8
 8001220:	6013      	str	r3, [r2, #0]
	GPIOA->ODR |= GPIO_ODR_ODR0; // Enable pull-up
 8001222:	4b82      	ldr	r3, [pc, #520]	; (800142c <main+0x258>)
 8001224:	68db      	ldr	r3, [r3, #12]
 8001226:	4a81      	ldr	r2, [pc, #516]	; (800142c <main+0x258>)
 8001228:	f043 0301 	orr.w	r3, r3, #1
 800122c:	60d3      	str	r3, [r2, #12]

//---------------------------PB0 INITIALIZATION FOR RELAY-------------------------------//

	// Enable clock for GPIOB
	RCC->APB2ENR |= RCC_APB2ENR_IOPBEN;
 800122e:	4b7e      	ldr	r3, [pc, #504]	; (8001428 <main+0x254>)
 8001230:	699b      	ldr	r3, [r3, #24]
 8001232:	4a7d      	ldr	r2, [pc, #500]	; (8001428 <main+0x254>)
 8001234:	f043 0308 	orr.w	r3, r3, #8
 8001238:	6193      	str	r3, [r2, #24]

	// Configure PB0 as output push-pull, max speed 10 MHz
	GPIOB->CRL &= ~GPIO_CRL_MODE0; // Clear MODE0 bits
 800123a:	4b7d      	ldr	r3, [pc, #500]	; (8001430 <main+0x25c>)
 800123c:	681b      	ldr	r3, [r3, #0]
 800123e:	4a7c      	ldr	r2, [pc, #496]	; (8001430 <main+0x25c>)
 8001240:	f023 0303 	bic.w	r3, r3, #3
 8001244:	6013      	str	r3, [r2, #0]
	GPIOB->CRL &= ~GPIO_CRL_CNF0;  // Clear CNF0 bits
 8001246:	4b7a      	ldr	r3, [pc, #488]	; (8001430 <main+0x25c>)
 8001248:	681b      	ldr	r3, [r3, #0]
 800124a:	4a79      	ldr	r2, [pc, #484]	; (8001430 <main+0x25c>)
 800124c:	f023 030c 	bic.w	r3, r3, #12
 8001250:	6013      	str	r3, [r2, #0]
	GPIOB->CRL |= GPIO_CRL_MODE0_0; // Output mode, max speed 10 MHz
 8001252:	4b77      	ldr	r3, [pc, #476]	; (8001430 <main+0x25c>)
 8001254:	681b      	ldr	r3, [r3, #0]
 8001256:	4a76      	ldr	r2, [pc, #472]	; (8001430 <main+0x25c>)
 8001258:	f043 0301 	orr.w	r3, r3, #1
 800125c:	6013      	str	r3, [r2, #0]

//--------------------------------MESSAGE WHEN REBOOTING----------------------------------//

lcd_clear();
 800125e:	f7ff fe11 	bl	8000e84 <lcd_clear>
setCursor(0, 0);
 8001262:	2100      	movs	r1, #0
 8001264:	2000      	movs	r0, #0
 8001266:	f7ff fd83 	bl	8000d70 <setCursor>
lcd_send_string("--------------------");
 800126a:	4872      	ldr	r0, [pc, #456]	; (8001434 <main+0x260>)
 800126c:	f7ff fdb8 	bl	8000de0 <lcd_send_string>
setCursor(0, 1);
 8001270:	2101      	movs	r1, #1
 8001272:	2000      	movs	r0, #0
 8001274:	f7ff fd7c 	bl	8000d70 <setCursor>
lcd_send_string("        iPot"); // 8 spaces before "ipot"
 8001278:	486f      	ldr	r0, [pc, #444]	; (8001438 <main+0x264>)
 800127a:	f7ff fdb1 	bl	8000de0 <lcd_send_string>
setCursor(0, 2);
 800127e:	2102      	movs	r1, #2
 8001280:	2000      	movs	r0, #0
 8001282:	f7ff fd75 	bl	8000d70 <setCursor>
lcd_send_string("      By: Mazen ");
 8001286:	486d      	ldr	r0, [pc, #436]	; (800143c <main+0x268>)
 8001288:	f7ff fdaa 	bl	8000de0 <lcd_send_string>
setCursor(0, 3);
 800128c:	2103      	movs	r1, #3
 800128e:	2000      	movs	r0, #0
 8001290:	f7ff fd6e 	bl	8000d70 <setCursor>
lcd_send_string("--------------------");
 8001294:	4867      	ldr	r0, [pc, #412]	; (8001434 <main+0x260>)
 8001296:	f7ff fda3 	bl	8000de0 <lcd_send_string>
delay_ms(100);
 800129a:	1d3b      	adds	r3, r7, #4
 800129c:	469c      	mov	ip, r3
 800129e:	2064      	movs	r0, #100	; 0x64
 80012a0:	f7ff ff7c 	bl	800119c <delay_ms.0>
lcd_clear();
 80012a4:	f7ff fdee 	bl	8000e84 <lcd_clear>
//--------------------------------WHILE LOOP----------------------------------//

    while(1) {

    	// DAC -> Button Press Initialization
        if (!(GPIOA->IDR & GPIO_IDR_IDR0)) { // Check if button is pressed
 80012a8:	4b60      	ldr	r3, [pc, #384]	; (800142c <main+0x258>)
 80012aa:	689b      	ldr	r3, [r3, #8]
 80012ac:	f003 0301 	and.w	r3, r3, #1
 80012b0:	2b00      	cmp	r3, #0
 80012b2:	d11c      	bne.n	80012ee <main+0x11a>
            setCursor(0, 0);
 80012b4:	2100      	movs	r1, #0
 80012b6:	2000      	movs	r0, #0
 80012b8:	f7ff fd5a 	bl	8000d70 <setCursor>
            lcd_send_string("                    "); // Clear the first line
 80012bc:	4860      	ldr	r0, [pc, #384]	; (8001440 <main+0x26c>)
 80012be:	f7ff fd8f 	bl	8000de0 <lcd_send_string>
            setCursor(0, 1);
 80012c2:	2101      	movs	r1, #1
 80012c4:	2000      	movs	r0, #0
 80012c6:	f7ff fd53 	bl	8000d70 <setCursor>
            lcd_send_string("                    "); // Clear the second line
 80012ca:	485d      	ldr	r0, [pc, #372]	; (8001440 <main+0x26c>)
 80012cc:	f7ff fd88 	bl	8000de0 <lcd_send_string>
            setCursor(0, 2);
 80012d0:	2102      	movs	r1, #2
 80012d2:	2000      	movs	r0, #0
 80012d4:	f7ff fd4c 	bl	8000d70 <setCursor>
            lcd_send_string("I'm a Cactus!       "); // Display message
 80012d8:	485a      	ldr	r0, [pc, #360]	; (8001444 <main+0x270>)
 80012da:	f7ff fd81 	bl	8000de0 <lcd_send_string>
            delay_ms(50); // Display the message for 2 seconds
 80012de:	1d3b      	adds	r3, r7, #4
 80012e0:	469c      	mov	ip, r3
 80012e2:	2032      	movs	r0, #50	; 0x32
 80012e4:	f7ff ff5a 	bl	800119c <delay_ms.0>
            lcd_clear();
 80012e8:	f7ff fdcc 	bl	8000e84 <lcd_clear>
 80012ec:	e064      	b.n	80013b8 <main+0x1e4>
//--------------------------------RELAY & SENSOR READINGS----------------------------------//

        } else {

            // Read from the soil moisture sensor on PA1
            moistureValue = start_conversion(1); // Selecting ADC channel for PA1 (1)
 80012ee:	2001      	movs	r0, #1
 80012f0:	f7ff fe0c 	bl	8000f0c <start_conversion>
 80012f4:	6178      	str	r0, [r7, #20]

            // Convert ADC value to moisture percentage
            moistureValue = (moistureValue * 100 / 4095); // Read sensor value
 80012f6:	697b      	ldr	r3, [r7, #20]
 80012f8:	2264      	movs	r2, #100	; 0x64
 80012fa:	fb03 f202 	mul.w	r2, r3, r2
 80012fe:	4b52      	ldr	r3, [pc, #328]	; (8001448 <main+0x274>)
 8001300:	fba3 1302 	umull	r1, r3, r3, r2
 8001304:	1ad2      	subs	r2, r2, r3
 8001306:	0852      	lsrs	r2, r2, #1
 8001308:	4413      	add	r3, r2
 800130a:	0adb      	lsrs	r3, r3, #11
 800130c:	617b      	str	r3, [r7, #20]

//--------------------------------RELAY FUNCTIONALITY----------------------------------//


            // Control relay based on moisture level
            uint32_t currentTime = get_millis(); // Get the current time in milliseconds
 800130e:	f7ff ff3b 	bl	8001188 <get_millis>
 8001312:	60b8      	str	r0, [r7, #8]

            // Check if the period has elapsed to reset activation count
            if (currentTime - periodStartTime >= ACTIVATION_PERIOD) {
 8001314:	4b4d      	ldr	r3, [pc, #308]	; (800144c <main+0x278>)
 8001316:	681b      	ldr	r3, [r3, #0]
 8001318:	68ba      	ldr	r2, [r7, #8]
 800131a:	1ad3      	subs	r3, r2, r3
 800131c:	f241 726f 	movw	r2, #5999	; 0x176f
 8001320:	4293      	cmp	r3, r2
 8001322:	d905      	bls.n	8001330 <main+0x15c>
                periodStartTime = currentTime; // Start a new period
 8001324:	4a49      	ldr	r2, [pc, #292]	; (800144c <main+0x278>)
 8001326:	68bb      	ldr	r3, [r7, #8]
 8001328:	6013      	str	r3, [r2, #0]
                activationCount = 0; // Reset the activation count for the new period
 800132a:	4b49      	ldr	r3, [pc, #292]	; (8001450 <main+0x27c>)
 800132c:	2200      	movs	r2, #0
 800132e:	701a      	strb	r2, [r3, #0]
            }

            // Relay activation logic
            if (moistureValue <= 30) {
 8001330:	697b      	ldr	r3, [r7, #20]
 8001332:	2b1e      	cmp	r3, #30
 8001334:	d81a      	bhi.n	800136c <main+0x198>
                if (!isRelayOn && activationCount < MAX_ACTIVATIONS) {
 8001336:	4b47      	ldr	r3, [pc, #284]	; (8001454 <main+0x280>)
 8001338:	781b      	ldrb	r3, [r3, #0]
 800133a:	f083 0301 	eor.w	r3, r3, #1
 800133e:	b2db      	uxtb	r3, r3
 8001340:	2b00      	cmp	r3, #0
 8001342:	d024      	beq.n	800138e <main+0x1ba>
 8001344:	4b42      	ldr	r3, [pc, #264]	; (8001450 <main+0x27c>)
 8001346:	781b      	ldrb	r3, [r3, #0]
 8001348:	2b02      	cmp	r3, #2
 800134a:	d820      	bhi.n	800138e <main+0x1ba>
                    // Turn on the relay
                    GPIOB->BSRR = GPIO_BSRR_BS0; // Example for turning on the relay
 800134c:	4b38      	ldr	r3, [pc, #224]	; (8001430 <main+0x25c>)
 800134e:	2201      	movs	r2, #1
 8001350:	611a      	str	r2, [r3, #16]
                    relayOnTime = currentTime;
 8001352:	4a41      	ldr	r2, [pc, #260]	; (8001458 <main+0x284>)
 8001354:	68bb      	ldr	r3, [r7, #8]
 8001356:	6013      	str	r3, [r2, #0]
                    isRelayOn = true;
 8001358:	4b3e      	ldr	r3, [pc, #248]	; (8001454 <main+0x280>)
 800135a:	2201      	movs	r2, #1
 800135c:	701a      	strb	r2, [r3, #0]
                    activationCount++; // Increment the activation count
 800135e:	4b3c      	ldr	r3, [pc, #240]	; (8001450 <main+0x27c>)
 8001360:	781b      	ldrb	r3, [r3, #0]
 8001362:	3301      	adds	r3, #1
 8001364:	b2da      	uxtb	r2, r3
 8001366:	4b3a      	ldr	r3, [pc, #232]	; (8001450 <main+0x27c>)
 8001368:	701a      	strb	r2, [r3, #0]
 800136a:	e010      	b.n	800138e <main+0x1ba>
                }
            } else if (moistureValue >= 60 && isRelayOn) {
 800136c:	697b      	ldr	r3, [r7, #20]
 800136e:	2b3b      	cmp	r3, #59	; 0x3b
 8001370:	d90d      	bls.n	800138e <main+0x1ba>
 8001372:	4b38      	ldr	r3, [pc, #224]	; (8001454 <main+0x280>)
 8001374:	781b      	ldrb	r3, [r3, #0]
 8001376:	2b00      	cmp	r3, #0
 8001378:	d009      	beq.n	800138e <main+0x1ba>
                // Turn off the relay
                GPIOB->BSRR = GPIO_BSRR_BR0; // Example for turning off the relay
 800137a:	4b2d      	ldr	r3, [pc, #180]	; (8001430 <main+0x25c>)
 800137c:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 8001380:	611a      	str	r2, [r3, #16]
                isRelayOn = false;
 8001382:	4b34      	ldr	r3, [pc, #208]	; (8001454 <main+0x280>)
 8001384:	2200      	movs	r2, #0
 8001386:	701a      	strb	r2, [r3, #0]
                relayOffTime = currentTime; // Update last off time
 8001388:	4a34      	ldr	r2, [pc, #208]	; (800145c <main+0x288>)
 800138a:	68bb      	ldr	r3, [r7, #8]
 800138c:	6013      	str	r3, [r2, #0]
            }

            // Automatic turn-off after 10 seconds
            if (isRelayOn && (currentTime - relayOnTime > 1000)) { // 10 seconds
 800138e:	4b31      	ldr	r3, [pc, #196]	; (8001454 <main+0x280>)
 8001390:	781b      	ldrb	r3, [r3, #0]
 8001392:	2b00      	cmp	r3, #0
 8001394:	d010      	beq.n	80013b8 <main+0x1e4>
 8001396:	4b30      	ldr	r3, [pc, #192]	; (8001458 <main+0x284>)
 8001398:	681b      	ldr	r3, [r3, #0]
 800139a:	68ba      	ldr	r2, [r7, #8]
 800139c:	1ad3      	subs	r3, r2, r3
 800139e:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80013a2:	d909      	bls.n	80013b8 <main+0x1e4>
                GPIOB->BSRR = GPIO_BSRR_BR0; // Turn off the relay
 80013a4:	4b22      	ldr	r3, [pc, #136]	; (8001430 <main+0x25c>)
 80013a6:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 80013aa:	611a      	str	r2, [r3, #16]
                isRelayOn = false;
 80013ac:	4b29      	ldr	r3, [pc, #164]	; (8001454 <main+0x280>)
 80013ae:	2200      	movs	r2, #0
 80013b0:	701a      	strb	r2, [r3, #0]
                relayOffTime = currentTime; // Update last off time
 80013b2:	4a2a      	ldr	r2, [pc, #168]	; (800145c <main+0x288>)
 80013b4:	68bb      	ldr	r3, [r7, #8]
 80013b6:	6013      	str	r3, [r2, #0]
        }

 //-------------------------READ & DISPLAY SENSOR VALUES TO LCD--------------------------//

            // Read from the temperature sensor on PA4
            rawTempValue = start_conversion(4); // Select ADC channel for PA4 (4)
 80013b8:	2004      	movs	r0, #4
 80013ba:	f7ff fda7 	bl	8000f0c <start_conversion>
 80013be:	6138      	str	r0, [r7, #16]

            // Convert raw ADC value to temperature here
            temperature = ((rawTempValue * 3300 )/ 4096 /10);
 80013c0:	693b      	ldr	r3, [r7, #16]
 80013c2:	f640 42e4 	movw	r2, #3300	; 0xce4
 80013c6:	fb02 f303 	mul.w	r3, r2, r3
 80013ca:	4a25      	ldr	r2, [pc, #148]	; (8001460 <main+0x28c>)
 80013cc:	fba2 2303 	umull	r2, r3, r2, r3
 80013d0:	0bdb      	lsrs	r3, r3, #15
 80013d2:	4618      	mov	r0, r3
 80013d4:	f7ff fc1e 	bl	8000c14 <__aeabi_ui2f>
 80013d8:	4603      	mov	r3, r0
 80013da:	60fb      	str	r3, [r7, #12]

            setCursor(0, 0);
 80013dc:	2100      	movs	r1, #0
 80013de:	2000      	movs	r0, #0
 80013e0:	f7ff fcc6 	bl	8000d70 <setCursor>
            snprintf(str, sizeof(str), "Temp: %.1fC", temperature);
 80013e4:	68f8      	ldr	r0, [r7, #12]
 80013e6:	f7ff f82f 	bl	8000448 <__aeabi_f2d>
 80013ea:	4602      	mov	r2, r0
 80013ec:	460b      	mov	r3, r1
 80013ee:	e9cd 2300 	strd	r2, r3, [sp]
 80013f2:	4a1c      	ldr	r2, [pc, #112]	; (8001464 <main+0x290>)
 80013f4:	2128      	movs	r1, #40	; 0x28
 80013f6:	481c      	ldr	r0, [pc, #112]	; (8001468 <main+0x294>)
 80013f8:	f000 fd82 	bl	8001f00 <sniprintf>
            lcd_send_string(str); // Display temperature
 80013fc:	481a      	ldr	r0, [pc, #104]	; (8001468 <main+0x294>)
 80013fe:	f7ff fcef 	bl	8000de0 <lcd_send_string>

            setCursor(0, 1);
 8001402:	2101      	movs	r1, #1
 8001404:	2000      	movs	r0, #0
 8001406:	f7ff fcb3 	bl	8000d70 <setCursor>
            snprintf(str, sizeof(str), "Moisture: %lu%%    ", moistureValue); // Add spaces to clear extra characters
 800140a:	697b      	ldr	r3, [r7, #20]
 800140c:	4a17      	ldr	r2, [pc, #92]	; (800146c <main+0x298>)
 800140e:	2128      	movs	r1, #40	; 0x28
 8001410:	4815      	ldr	r0, [pc, #84]	; (8001468 <main+0x294>)
 8001412:	f000 fd75 	bl	8001f00 <sniprintf>
            lcd_send_string(str); // Display moisture value
 8001416:	4814      	ldr	r0, [pc, #80]	; (8001468 <main+0x294>)
 8001418:	f7ff fce2 	bl	8000de0 <lcd_send_string>
            delay_ms(10);
 800141c:	1d3b      	adds	r3, r7, #4
 800141e:	469c      	mov	ip, r3
 8001420:	200a      	movs	r0, #10
 8001422:	f7ff febb 	bl	800119c <delay_ms.0>
        if (!(GPIOA->IDR & GPIO_IDR_IDR0)) { // Check if button is pressed
 8001426:	e73f      	b.n	80012a8 <main+0xd4>
 8001428:	40021000 	.word	0x40021000
 800142c:	40010800 	.word	0x40010800
 8001430:	40010c00 	.word	0x40010c00
 8001434:	08004360 	.word	0x08004360
 8001438:	08004378 	.word	0x08004378
 800143c:	08004388 	.word	0x08004388
 8001440:	0800439c 	.word	0x0800439c
 8001444:	080043b4 	.word	0x080043b4
 8001448:	00100101 	.word	0x00100101
 800144c:	200001e8 	.word	0x200001e8
 8001450:	200001e4 	.word	0x200001e4
 8001454:	200001ec 	.word	0x200001ec
 8001458:	200001f0 	.word	0x200001f0
 800145c:	200001f4 	.word	0x200001f4
 8001460:	cccccccd 	.word	0xcccccccd
 8001464:	080043cc 	.word	0x080043cc
 8001468:	200001f8 	.word	0x200001f8
 800146c:	080043d8 	.word	0x080043d8

08001470 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001470:	b480      	push	{r7}
 8001472:	af00      	add	r7, sp, #0
  return 1;
 8001474:	2301      	movs	r3, #1
}
 8001476:	4618      	mov	r0, r3
 8001478:	46bd      	mov	sp, r7
 800147a:	bc80      	pop	{r7}
 800147c:	4770      	bx	lr

0800147e <_kill>:

int _kill(int pid, int sig)
{
 800147e:	b580      	push	{r7, lr}
 8001480:	b082      	sub	sp, #8
 8001482:	af00      	add	r7, sp, #0
 8001484:	6078      	str	r0, [r7, #4]
 8001486:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8001488:	f000 fe3c 	bl	8002104 <__errno>
 800148c:	4603      	mov	r3, r0
 800148e:	2216      	movs	r2, #22
 8001490:	601a      	str	r2, [r3, #0]
  return -1;
 8001492:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 8001496:	4618      	mov	r0, r3
 8001498:	3708      	adds	r7, #8
 800149a:	46bd      	mov	sp, r7
 800149c:	bd80      	pop	{r7, pc}

0800149e <_exit>:

void _exit (int status)
{
 800149e:	b580      	push	{r7, lr}
 80014a0:	b082      	sub	sp, #8
 80014a2:	af00      	add	r7, sp, #0
 80014a4:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 80014a6:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80014aa:	6878      	ldr	r0, [r7, #4]
 80014ac:	f7ff ffe7 	bl	800147e <_kill>
  while (1) {}    /* Make sure we hang here */
 80014b0:	e7fe      	b.n	80014b0 <_exit+0x12>

080014b2 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80014b2:	b580      	push	{r7, lr}
 80014b4:	b086      	sub	sp, #24
 80014b6:	af00      	add	r7, sp, #0
 80014b8:	60f8      	str	r0, [r7, #12]
 80014ba:	60b9      	str	r1, [r7, #8]
 80014bc:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80014be:	2300      	movs	r3, #0
 80014c0:	617b      	str	r3, [r7, #20]
 80014c2:	e00a      	b.n	80014da <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80014c4:	f3af 8000 	nop.w
 80014c8:	4601      	mov	r1, r0
 80014ca:	68bb      	ldr	r3, [r7, #8]
 80014cc:	1c5a      	adds	r2, r3, #1
 80014ce:	60ba      	str	r2, [r7, #8]
 80014d0:	b2ca      	uxtb	r2, r1
 80014d2:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80014d4:	697b      	ldr	r3, [r7, #20]
 80014d6:	3301      	adds	r3, #1
 80014d8:	617b      	str	r3, [r7, #20]
 80014da:	697a      	ldr	r2, [r7, #20]
 80014dc:	687b      	ldr	r3, [r7, #4]
 80014de:	429a      	cmp	r2, r3
 80014e0:	dbf0      	blt.n	80014c4 <_read+0x12>
  }

  return len;
 80014e2:	687b      	ldr	r3, [r7, #4]
}
 80014e4:	4618      	mov	r0, r3
 80014e6:	3718      	adds	r7, #24
 80014e8:	46bd      	mov	sp, r7
 80014ea:	bd80      	pop	{r7, pc}

080014ec <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80014ec:	b580      	push	{r7, lr}
 80014ee:	b086      	sub	sp, #24
 80014f0:	af00      	add	r7, sp, #0
 80014f2:	60f8      	str	r0, [r7, #12]
 80014f4:	60b9      	str	r1, [r7, #8]
 80014f6:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80014f8:	2300      	movs	r3, #0
 80014fa:	617b      	str	r3, [r7, #20]
 80014fc:	e009      	b.n	8001512 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80014fe:	68bb      	ldr	r3, [r7, #8]
 8001500:	1c5a      	adds	r2, r3, #1
 8001502:	60ba      	str	r2, [r7, #8]
 8001504:	781b      	ldrb	r3, [r3, #0]
 8001506:	4618      	mov	r0, r3
 8001508:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800150c:	697b      	ldr	r3, [r7, #20]
 800150e:	3301      	adds	r3, #1
 8001510:	617b      	str	r3, [r7, #20]
 8001512:	697a      	ldr	r2, [r7, #20]
 8001514:	687b      	ldr	r3, [r7, #4]
 8001516:	429a      	cmp	r2, r3
 8001518:	dbf1      	blt.n	80014fe <_write+0x12>
  }
  return len;
 800151a:	687b      	ldr	r3, [r7, #4]
}
 800151c:	4618      	mov	r0, r3
 800151e:	3718      	adds	r7, #24
 8001520:	46bd      	mov	sp, r7
 8001522:	bd80      	pop	{r7, pc}

08001524 <_close>:

int _close(int file)
{
 8001524:	b480      	push	{r7}
 8001526:	b083      	sub	sp, #12
 8001528:	af00      	add	r7, sp, #0
 800152a:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800152c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 8001530:	4618      	mov	r0, r3
 8001532:	370c      	adds	r7, #12
 8001534:	46bd      	mov	sp, r7
 8001536:	bc80      	pop	{r7}
 8001538:	4770      	bx	lr

0800153a <_fstat>:


int _fstat(int file, struct stat *st)
{
 800153a:	b480      	push	{r7}
 800153c:	b083      	sub	sp, #12
 800153e:	af00      	add	r7, sp, #0
 8001540:	6078      	str	r0, [r7, #4]
 8001542:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8001544:	683b      	ldr	r3, [r7, #0]
 8001546:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800154a:	605a      	str	r2, [r3, #4]
  return 0;
 800154c:	2300      	movs	r3, #0
}
 800154e:	4618      	mov	r0, r3
 8001550:	370c      	adds	r7, #12
 8001552:	46bd      	mov	sp, r7
 8001554:	bc80      	pop	{r7}
 8001556:	4770      	bx	lr

08001558 <_isatty>:

int _isatty(int file)
{
 8001558:	b480      	push	{r7}
 800155a:	b083      	sub	sp, #12
 800155c:	af00      	add	r7, sp, #0
 800155e:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8001560:	2301      	movs	r3, #1
}
 8001562:	4618      	mov	r0, r3
 8001564:	370c      	adds	r7, #12
 8001566:	46bd      	mov	sp, r7
 8001568:	bc80      	pop	{r7}
 800156a:	4770      	bx	lr

0800156c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800156c:	b480      	push	{r7}
 800156e:	b085      	sub	sp, #20
 8001570:	af00      	add	r7, sp, #0
 8001572:	60f8      	str	r0, [r7, #12]
 8001574:	60b9      	str	r1, [r7, #8]
 8001576:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8001578:	2300      	movs	r3, #0
}
 800157a:	4618      	mov	r0, r3
 800157c:	3714      	adds	r7, #20
 800157e:	46bd      	mov	sp, r7
 8001580:	bc80      	pop	{r7}
 8001582:	4770      	bx	lr

08001584 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001584:	b580      	push	{r7, lr}
 8001586:	b086      	sub	sp, #24
 8001588:	af00      	add	r7, sp, #0
 800158a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800158c:	4a14      	ldr	r2, [pc, #80]	; (80015e0 <_sbrk+0x5c>)
 800158e:	4b15      	ldr	r3, [pc, #84]	; (80015e4 <_sbrk+0x60>)
 8001590:	1ad3      	subs	r3, r2, r3
 8001592:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001594:	697b      	ldr	r3, [r7, #20]
 8001596:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001598:	4b13      	ldr	r3, [pc, #76]	; (80015e8 <_sbrk+0x64>)
 800159a:	681b      	ldr	r3, [r3, #0]
 800159c:	2b00      	cmp	r3, #0
 800159e:	d102      	bne.n	80015a6 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80015a0:	4b11      	ldr	r3, [pc, #68]	; (80015e8 <_sbrk+0x64>)
 80015a2:	4a12      	ldr	r2, [pc, #72]	; (80015ec <_sbrk+0x68>)
 80015a4:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80015a6:	4b10      	ldr	r3, [pc, #64]	; (80015e8 <_sbrk+0x64>)
 80015a8:	681a      	ldr	r2, [r3, #0]
 80015aa:	687b      	ldr	r3, [r7, #4]
 80015ac:	4413      	add	r3, r2
 80015ae:	693a      	ldr	r2, [r7, #16]
 80015b0:	429a      	cmp	r2, r3
 80015b2:	d207      	bcs.n	80015c4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80015b4:	f000 fda6 	bl	8002104 <__errno>
 80015b8:	4603      	mov	r3, r0
 80015ba:	220c      	movs	r2, #12
 80015bc:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80015be:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80015c2:	e009      	b.n	80015d8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80015c4:	4b08      	ldr	r3, [pc, #32]	; (80015e8 <_sbrk+0x64>)
 80015c6:	681b      	ldr	r3, [r3, #0]
 80015c8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80015ca:	4b07      	ldr	r3, [pc, #28]	; (80015e8 <_sbrk+0x64>)
 80015cc:	681a      	ldr	r2, [r3, #0]
 80015ce:	687b      	ldr	r3, [r7, #4]
 80015d0:	4413      	add	r3, r2
 80015d2:	4a05      	ldr	r2, [pc, #20]	; (80015e8 <_sbrk+0x64>)
 80015d4:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80015d6:	68fb      	ldr	r3, [r7, #12]
}
 80015d8:	4618      	mov	r0, r3
 80015da:	3718      	adds	r7, #24
 80015dc:	46bd      	mov	sp, r7
 80015de:	bd80      	pop	{r7, pc}
 80015e0:	20005000 	.word	0x20005000
 80015e4:	00000400 	.word	0x00000400
 80015e8:	20000224 	.word	0x20000224
 80015ec:	20000378 	.word	0x20000378

080015f0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80015f0:	480d      	ldr	r0, [pc, #52]	; (8001628 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80015f2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80015f4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80015f8:	480c      	ldr	r0, [pc, #48]	; (800162c <LoopForever+0x6>)
  ldr r1, =_edata
 80015fa:	490d      	ldr	r1, [pc, #52]	; (8001630 <LoopForever+0xa>)
  ldr r2, =_sidata
 80015fc:	4a0d      	ldr	r2, [pc, #52]	; (8001634 <LoopForever+0xe>)
  movs r3, #0
 80015fe:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001600:	e002      	b.n	8001608 <LoopCopyDataInit>

08001602 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001602:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001604:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001606:	3304      	adds	r3, #4

08001608 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001608:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800160a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800160c:	d3f9      	bcc.n	8001602 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800160e:	4a0a      	ldr	r2, [pc, #40]	; (8001638 <LoopForever+0x12>)
  ldr r4, =_ebss
 8001610:	4c0a      	ldr	r4, [pc, #40]	; (800163c <LoopForever+0x16>)
  movs r3, #0
 8001612:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001614:	e001      	b.n	800161a <LoopFillZerobss>

08001616 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001616:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001618:	3204      	adds	r2, #4

0800161a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800161a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800161c:	d3fb      	bcc.n	8001616 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800161e:	f000 fd77 	bl	8002110 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8001622:	f7ff fdd7 	bl	80011d4 <main>

08001626 <LoopForever>:

LoopForever:
  b LoopForever
 8001626:	e7fe      	b.n	8001626 <LoopForever>
  ldr   r0, =_estack
 8001628:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 800162c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001630:	200001c8 	.word	0x200001c8
  ldr r2, =_sidata
 8001634:	08004764 	.word	0x08004764
  ldr r2, =_sbss
 8001638:	200001c8 	.word	0x200001c8
  ldr r4, =_ebss
 800163c:	20000374 	.word	0x20000374

08001640 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8001640:	e7fe      	b.n	8001640 <ADC1_2_IRQHandler>

08001642 <__cvt>:
 8001642:	2b00      	cmp	r3, #0
 8001644:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001648:	461f      	mov	r7, r3
 800164a:	bfbb      	ittet	lt
 800164c:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 8001650:	461f      	movlt	r7, r3
 8001652:	2300      	movge	r3, #0
 8001654:	232d      	movlt	r3, #45	; 0x2d
 8001656:	b088      	sub	sp, #32
 8001658:	4614      	mov	r4, r2
 800165a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800165c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 800165e:	7013      	strb	r3, [r2, #0]
 8001660:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8001662:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
 8001666:	f023 0820 	bic.w	r8, r3, #32
 800166a:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800166e:	d005      	beq.n	800167c <__cvt+0x3a>
 8001670:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 8001674:	d100      	bne.n	8001678 <__cvt+0x36>
 8001676:	3501      	adds	r5, #1
 8001678:	2302      	movs	r3, #2
 800167a:	e000      	b.n	800167e <__cvt+0x3c>
 800167c:	2303      	movs	r3, #3
 800167e:	aa07      	add	r2, sp, #28
 8001680:	9204      	str	r2, [sp, #16]
 8001682:	aa06      	add	r2, sp, #24
 8001684:	e9cd a202 	strd	sl, r2, [sp, #8]
 8001688:	e9cd 3500 	strd	r3, r5, [sp]
 800168c:	4622      	mov	r2, r4
 800168e:	463b      	mov	r3, r7
 8001690:	f000 fdfe 	bl	8002290 <_dtoa_r>
 8001694:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8001698:	4606      	mov	r6, r0
 800169a:	d102      	bne.n	80016a2 <__cvt+0x60>
 800169c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800169e:	07db      	lsls	r3, r3, #31
 80016a0:	d522      	bpl.n	80016e8 <__cvt+0xa6>
 80016a2:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80016a6:	eb06 0905 	add.w	r9, r6, r5
 80016aa:	d110      	bne.n	80016ce <__cvt+0x8c>
 80016ac:	7833      	ldrb	r3, [r6, #0]
 80016ae:	2b30      	cmp	r3, #48	; 0x30
 80016b0:	d10a      	bne.n	80016c8 <__cvt+0x86>
 80016b2:	2200      	movs	r2, #0
 80016b4:	2300      	movs	r3, #0
 80016b6:	4620      	mov	r0, r4
 80016b8:	4639      	mov	r1, r7
 80016ba:	f7ff f985 	bl	80009c8 <__aeabi_dcmpeq>
 80016be:	b918      	cbnz	r0, 80016c8 <__cvt+0x86>
 80016c0:	f1c5 0501 	rsb	r5, r5, #1
 80016c4:	f8ca 5000 	str.w	r5, [sl]
 80016c8:	f8da 3000 	ldr.w	r3, [sl]
 80016cc:	4499      	add	r9, r3
 80016ce:	2200      	movs	r2, #0
 80016d0:	2300      	movs	r3, #0
 80016d2:	4620      	mov	r0, r4
 80016d4:	4639      	mov	r1, r7
 80016d6:	f7ff f977 	bl	80009c8 <__aeabi_dcmpeq>
 80016da:	b108      	cbz	r0, 80016e0 <__cvt+0x9e>
 80016dc:	f8cd 901c 	str.w	r9, [sp, #28]
 80016e0:	2230      	movs	r2, #48	; 0x30
 80016e2:	9b07      	ldr	r3, [sp, #28]
 80016e4:	454b      	cmp	r3, r9
 80016e6:	d307      	bcc.n	80016f8 <__cvt+0xb6>
 80016e8:	4630      	mov	r0, r6
 80016ea:	9b07      	ldr	r3, [sp, #28]
 80016ec:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80016ee:	1b9b      	subs	r3, r3, r6
 80016f0:	6013      	str	r3, [r2, #0]
 80016f2:	b008      	add	sp, #32
 80016f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80016f8:	1c59      	adds	r1, r3, #1
 80016fa:	9107      	str	r1, [sp, #28]
 80016fc:	701a      	strb	r2, [r3, #0]
 80016fe:	e7f0      	b.n	80016e2 <__cvt+0xa0>

08001700 <__exponent>:
 8001700:	4603      	mov	r3, r0
 8001702:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001704:	2900      	cmp	r1, #0
 8001706:	f803 2b02 	strb.w	r2, [r3], #2
 800170a:	bfb6      	itet	lt
 800170c:	222d      	movlt	r2, #45	; 0x2d
 800170e:	222b      	movge	r2, #43	; 0x2b
 8001710:	4249      	neglt	r1, r1
 8001712:	2909      	cmp	r1, #9
 8001714:	7042      	strb	r2, [r0, #1]
 8001716:	dd2a      	ble.n	800176e <__exponent+0x6e>
 8001718:	f10d 0207 	add.w	r2, sp, #7
 800171c:	4617      	mov	r7, r2
 800171e:	260a      	movs	r6, #10
 8001720:	fb91 f5f6 	sdiv	r5, r1, r6
 8001724:	4694      	mov	ip, r2
 8001726:	fb06 1415 	mls	r4, r6, r5, r1
 800172a:	3430      	adds	r4, #48	; 0x30
 800172c:	f80c 4c01 	strb.w	r4, [ip, #-1]
 8001730:	460c      	mov	r4, r1
 8001732:	2c63      	cmp	r4, #99	; 0x63
 8001734:	4629      	mov	r1, r5
 8001736:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
 800173a:	dcf1      	bgt.n	8001720 <__exponent+0x20>
 800173c:	3130      	adds	r1, #48	; 0x30
 800173e:	f1ac 0402 	sub.w	r4, ip, #2
 8001742:	f802 1c01 	strb.w	r1, [r2, #-1]
 8001746:	4622      	mov	r2, r4
 8001748:	1c41      	adds	r1, r0, #1
 800174a:	42ba      	cmp	r2, r7
 800174c:	d30a      	bcc.n	8001764 <__exponent+0x64>
 800174e:	f10d 0209 	add.w	r2, sp, #9
 8001752:	eba2 020c 	sub.w	r2, r2, ip
 8001756:	42bc      	cmp	r4, r7
 8001758:	bf88      	it	hi
 800175a:	2200      	movhi	r2, #0
 800175c:	4413      	add	r3, r2
 800175e:	1a18      	subs	r0, r3, r0
 8001760:	b003      	add	sp, #12
 8001762:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001764:	f812 5b01 	ldrb.w	r5, [r2], #1
 8001768:	f801 5f01 	strb.w	r5, [r1, #1]!
 800176c:	e7ed      	b.n	800174a <__exponent+0x4a>
 800176e:	2330      	movs	r3, #48	; 0x30
 8001770:	3130      	adds	r1, #48	; 0x30
 8001772:	7083      	strb	r3, [r0, #2]
 8001774:	70c1      	strb	r1, [r0, #3]
 8001776:	1d03      	adds	r3, r0, #4
 8001778:	e7f1      	b.n	800175e <__exponent+0x5e>
	...

0800177c <_printf_float>:
 800177c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001780:	b091      	sub	sp, #68	; 0x44
 8001782:	460c      	mov	r4, r1
 8001784:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 8001788:	4616      	mov	r6, r2
 800178a:	461f      	mov	r7, r3
 800178c:	4605      	mov	r5, r0
 800178e:	f000 fcb5 	bl	80020fc <_localeconv_r>
 8001792:	6803      	ldr	r3, [r0, #0]
 8001794:	4618      	mov	r0, r3
 8001796:	9309      	str	r3, [sp, #36]	; 0x24
 8001798:	f7fe fcea 	bl	8000170 <strlen>
 800179c:	2300      	movs	r3, #0
 800179e:	930e      	str	r3, [sp, #56]	; 0x38
 80017a0:	f8d8 3000 	ldr.w	r3, [r8]
 80017a4:	900a      	str	r0, [sp, #40]	; 0x28
 80017a6:	3307      	adds	r3, #7
 80017a8:	f023 0307 	bic.w	r3, r3, #7
 80017ac:	f103 0208 	add.w	r2, r3, #8
 80017b0:	f894 9018 	ldrb.w	r9, [r4, #24]
 80017b4:	f8d4 b000 	ldr.w	fp, [r4]
 80017b8:	f8c8 2000 	str.w	r2, [r8]
 80017bc:	e9d3 a800 	ldrd	sl, r8, [r3]
 80017c0:	4652      	mov	r2, sl
 80017c2:	4643      	mov	r3, r8
 80017c4:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 80017c8:	f028 4300 	bic.w	r3, r8, #2147483648	; 0x80000000
 80017cc:	930b      	str	r3, [sp, #44]	; 0x2c
 80017ce:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80017d2:	4650      	mov	r0, sl
 80017d4:	4b9c      	ldr	r3, [pc, #624]	; (8001a48 <_printf_float+0x2cc>)
 80017d6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80017d8:	f7ff f928 	bl	8000a2c <__aeabi_dcmpun>
 80017dc:	bb70      	cbnz	r0, 800183c <_printf_float+0xc0>
 80017de:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80017e2:	4650      	mov	r0, sl
 80017e4:	4b98      	ldr	r3, [pc, #608]	; (8001a48 <_printf_float+0x2cc>)
 80017e6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80017e8:	f7ff f902 	bl	80009f0 <__aeabi_dcmple>
 80017ec:	bb30      	cbnz	r0, 800183c <_printf_float+0xc0>
 80017ee:	2200      	movs	r2, #0
 80017f0:	2300      	movs	r3, #0
 80017f2:	4650      	mov	r0, sl
 80017f4:	4641      	mov	r1, r8
 80017f6:	f7ff f8f1 	bl	80009dc <__aeabi_dcmplt>
 80017fa:	b110      	cbz	r0, 8001802 <_printf_float+0x86>
 80017fc:	232d      	movs	r3, #45	; 0x2d
 80017fe:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001802:	4a92      	ldr	r2, [pc, #584]	; (8001a4c <_printf_float+0x2d0>)
 8001804:	4b92      	ldr	r3, [pc, #584]	; (8001a50 <_printf_float+0x2d4>)
 8001806:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
 800180a:	bf94      	ite	ls
 800180c:	4690      	movls	r8, r2
 800180e:	4698      	movhi	r8, r3
 8001810:	2303      	movs	r3, #3
 8001812:	f04f 0a00 	mov.w	sl, #0
 8001816:	6123      	str	r3, [r4, #16]
 8001818:	f02b 0304 	bic.w	r3, fp, #4
 800181c:	6023      	str	r3, [r4, #0]
 800181e:	4633      	mov	r3, r6
 8001820:	4621      	mov	r1, r4
 8001822:	4628      	mov	r0, r5
 8001824:	9700      	str	r7, [sp, #0]
 8001826:	aa0f      	add	r2, sp, #60	; 0x3c
 8001828:	f000 f9d6 	bl	8001bd8 <_printf_common>
 800182c:	3001      	adds	r0, #1
 800182e:	f040 8090 	bne.w	8001952 <_printf_float+0x1d6>
 8001832:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001836:	b011      	add	sp, #68	; 0x44
 8001838:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800183c:	4652      	mov	r2, sl
 800183e:	4643      	mov	r3, r8
 8001840:	4650      	mov	r0, sl
 8001842:	4641      	mov	r1, r8
 8001844:	f7ff f8f2 	bl	8000a2c <__aeabi_dcmpun>
 8001848:	b148      	cbz	r0, 800185e <_printf_float+0xe2>
 800184a:	f1b8 0f00 	cmp.w	r8, #0
 800184e:	bfb8      	it	lt
 8001850:	232d      	movlt	r3, #45	; 0x2d
 8001852:	4a80      	ldr	r2, [pc, #512]	; (8001a54 <_printf_float+0x2d8>)
 8001854:	bfb8      	it	lt
 8001856:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 800185a:	4b7f      	ldr	r3, [pc, #508]	; (8001a58 <_printf_float+0x2dc>)
 800185c:	e7d3      	b.n	8001806 <_printf_float+0x8a>
 800185e:	6863      	ldr	r3, [r4, #4]
 8001860:	f009 01df 	and.w	r1, r9, #223	; 0xdf
 8001864:	1c5a      	adds	r2, r3, #1
 8001866:	d142      	bne.n	80018ee <_printf_float+0x172>
 8001868:	2306      	movs	r3, #6
 800186a:	6063      	str	r3, [r4, #4]
 800186c:	2200      	movs	r2, #0
 800186e:	9206      	str	r2, [sp, #24]
 8001870:	aa0e      	add	r2, sp, #56	; 0x38
 8001872:	e9cd 9204 	strd	r9, r2, [sp, #16]
 8001876:	aa0d      	add	r2, sp, #52	; 0x34
 8001878:	f44b 6380 	orr.w	r3, fp, #1024	; 0x400
 800187c:	9203      	str	r2, [sp, #12]
 800187e:	f10d 0233 	add.w	r2, sp, #51	; 0x33
 8001882:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8001886:	6023      	str	r3, [r4, #0]
 8001888:	6863      	ldr	r3, [r4, #4]
 800188a:	4652      	mov	r2, sl
 800188c:	9300      	str	r3, [sp, #0]
 800188e:	4628      	mov	r0, r5
 8001890:	4643      	mov	r3, r8
 8001892:	910b      	str	r1, [sp, #44]	; 0x2c
 8001894:	f7ff fed5 	bl	8001642 <__cvt>
 8001898:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800189a:	4680      	mov	r8, r0
 800189c:	2947      	cmp	r1, #71	; 0x47
 800189e:	990d      	ldr	r1, [sp, #52]	; 0x34
 80018a0:	d108      	bne.n	80018b4 <_printf_float+0x138>
 80018a2:	1cc8      	adds	r0, r1, #3
 80018a4:	db02      	blt.n	80018ac <_printf_float+0x130>
 80018a6:	6863      	ldr	r3, [r4, #4]
 80018a8:	4299      	cmp	r1, r3
 80018aa:	dd40      	ble.n	800192e <_printf_float+0x1b2>
 80018ac:	f1a9 0902 	sub.w	r9, r9, #2
 80018b0:	fa5f f989 	uxtb.w	r9, r9
 80018b4:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 80018b8:	d81f      	bhi.n	80018fa <_printf_float+0x17e>
 80018ba:	464a      	mov	r2, r9
 80018bc:	3901      	subs	r1, #1
 80018be:	f104 0050 	add.w	r0, r4, #80	; 0x50
 80018c2:	910d      	str	r1, [sp, #52]	; 0x34
 80018c4:	f7ff ff1c 	bl	8001700 <__exponent>
 80018c8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80018ca:	4682      	mov	sl, r0
 80018cc:	1813      	adds	r3, r2, r0
 80018ce:	2a01      	cmp	r2, #1
 80018d0:	6123      	str	r3, [r4, #16]
 80018d2:	dc02      	bgt.n	80018da <_printf_float+0x15e>
 80018d4:	6822      	ldr	r2, [r4, #0]
 80018d6:	07d2      	lsls	r2, r2, #31
 80018d8:	d501      	bpl.n	80018de <_printf_float+0x162>
 80018da:	3301      	adds	r3, #1
 80018dc:	6123      	str	r3, [r4, #16]
 80018de:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 80018e2:	2b00      	cmp	r3, #0
 80018e4:	d09b      	beq.n	800181e <_printf_float+0xa2>
 80018e6:	232d      	movs	r3, #45	; 0x2d
 80018e8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80018ec:	e797      	b.n	800181e <_printf_float+0xa2>
 80018ee:	2947      	cmp	r1, #71	; 0x47
 80018f0:	d1bc      	bne.n	800186c <_printf_float+0xf0>
 80018f2:	2b00      	cmp	r3, #0
 80018f4:	d1ba      	bne.n	800186c <_printf_float+0xf0>
 80018f6:	2301      	movs	r3, #1
 80018f8:	e7b7      	b.n	800186a <_printf_float+0xee>
 80018fa:	f1b9 0f66 	cmp.w	r9, #102	; 0x66
 80018fe:	d118      	bne.n	8001932 <_printf_float+0x1b6>
 8001900:	2900      	cmp	r1, #0
 8001902:	6863      	ldr	r3, [r4, #4]
 8001904:	dd0b      	ble.n	800191e <_printf_float+0x1a2>
 8001906:	6121      	str	r1, [r4, #16]
 8001908:	b913      	cbnz	r3, 8001910 <_printf_float+0x194>
 800190a:	6822      	ldr	r2, [r4, #0]
 800190c:	07d0      	lsls	r0, r2, #31
 800190e:	d502      	bpl.n	8001916 <_printf_float+0x19a>
 8001910:	3301      	adds	r3, #1
 8001912:	440b      	add	r3, r1
 8001914:	6123      	str	r3, [r4, #16]
 8001916:	f04f 0a00 	mov.w	sl, #0
 800191a:	65a1      	str	r1, [r4, #88]	; 0x58
 800191c:	e7df      	b.n	80018de <_printf_float+0x162>
 800191e:	b913      	cbnz	r3, 8001926 <_printf_float+0x1aa>
 8001920:	6822      	ldr	r2, [r4, #0]
 8001922:	07d2      	lsls	r2, r2, #31
 8001924:	d501      	bpl.n	800192a <_printf_float+0x1ae>
 8001926:	3302      	adds	r3, #2
 8001928:	e7f4      	b.n	8001914 <_printf_float+0x198>
 800192a:	2301      	movs	r3, #1
 800192c:	e7f2      	b.n	8001914 <_printf_float+0x198>
 800192e:	f04f 0967 	mov.w	r9, #103	; 0x67
 8001932:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001934:	4299      	cmp	r1, r3
 8001936:	db05      	blt.n	8001944 <_printf_float+0x1c8>
 8001938:	6823      	ldr	r3, [r4, #0]
 800193a:	6121      	str	r1, [r4, #16]
 800193c:	07d8      	lsls	r0, r3, #31
 800193e:	d5ea      	bpl.n	8001916 <_printf_float+0x19a>
 8001940:	1c4b      	adds	r3, r1, #1
 8001942:	e7e7      	b.n	8001914 <_printf_float+0x198>
 8001944:	2900      	cmp	r1, #0
 8001946:	bfcc      	ite	gt
 8001948:	2201      	movgt	r2, #1
 800194a:	f1c1 0202 	rsble	r2, r1, #2
 800194e:	4413      	add	r3, r2
 8001950:	e7e0      	b.n	8001914 <_printf_float+0x198>
 8001952:	6823      	ldr	r3, [r4, #0]
 8001954:	055a      	lsls	r2, r3, #21
 8001956:	d407      	bmi.n	8001968 <_printf_float+0x1ec>
 8001958:	6923      	ldr	r3, [r4, #16]
 800195a:	4642      	mov	r2, r8
 800195c:	4631      	mov	r1, r6
 800195e:	4628      	mov	r0, r5
 8001960:	47b8      	blx	r7
 8001962:	3001      	adds	r0, #1
 8001964:	d12b      	bne.n	80019be <_printf_float+0x242>
 8001966:	e764      	b.n	8001832 <_printf_float+0xb6>
 8001968:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 800196c:	f240 80dd 	bls.w	8001b2a <_printf_float+0x3ae>
 8001970:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001974:	2200      	movs	r2, #0
 8001976:	2300      	movs	r3, #0
 8001978:	f7ff f826 	bl	80009c8 <__aeabi_dcmpeq>
 800197c:	2800      	cmp	r0, #0
 800197e:	d033      	beq.n	80019e8 <_printf_float+0x26c>
 8001980:	2301      	movs	r3, #1
 8001982:	4631      	mov	r1, r6
 8001984:	4628      	mov	r0, r5
 8001986:	4a35      	ldr	r2, [pc, #212]	; (8001a5c <_printf_float+0x2e0>)
 8001988:	47b8      	blx	r7
 800198a:	3001      	adds	r0, #1
 800198c:	f43f af51 	beq.w	8001832 <_printf_float+0xb6>
 8001990:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8001994:	429a      	cmp	r2, r3
 8001996:	db02      	blt.n	800199e <_printf_float+0x222>
 8001998:	6823      	ldr	r3, [r4, #0]
 800199a:	07d8      	lsls	r0, r3, #31
 800199c:	d50f      	bpl.n	80019be <_printf_float+0x242>
 800199e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80019a2:	4631      	mov	r1, r6
 80019a4:	4628      	mov	r0, r5
 80019a6:	47b8      	blx	r7
 80019a8:	3001      	adds	r0, #1
 80019aa:	f43f af42 	beq.w	8001832 <_printf_float+0xb6>
 80019ae:	f04f 0800 	mov.w	r8, #0
 80019b2:	f104 091a 	add.w	r9, r4, #26
 80019b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80019b8:	3b01      	subs	r3, #1
 80019ba:	4543      	cmp	r3, r8
 80019bc:	dc09      	bgt.n	80019d2 <_printf_float+0x256>
 80019be:	6823      	ldr	r3, [r4, #0]
 80019c0:	079b      	lsls	r3, r3, #30
 80019c2:	f100 8104 	bmi.w	8001bce <_printf_float+0x452>
 80019c6:	68e0      	ldr	r0, [r4, #12]
 80019c8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80019ca:	4298      	cmp	r0, r3
 80019cc:	bfb8      	it	lt
 80019ce:	4618      	movlt	r0, r3
 80019d0:	e731      	b.n	8001836 <_printf_float+0xba>
 80019d2:	2301      	movs	r3, #1
 80019d4:	464a      	mov	r2, r9
 80019d6:	4631      	mov	r1, r6
 80019d8:	4628      	mov	r0, r5
 80019da:	47b8      	blx	r7
 80019dc:	3001      	adds	r0, #1
 80019de:	f43f af28 	beq.w	8001832 <_printf_float+0xb6>
 80019e2:	f108 0801 	add.w	r8, r8, #1
 80019e6:	e7e6      	b.n	80019b6 <_printf_float+0x23a>
 80019e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80019ea:	2b00      	cmp	r3, #0
 80019ec:	dc38      	bgt.n	8001a60 <_printf_float+0x2e4>
 80019ee:	2301      	movs	r3, #1
 80019f0:	4631      	mov	r1, r6
 80019f2:	4628      	mov	r0, r5
 80019f4:	4a19      	ldr	r2, [pc, #100]	; (8001a5c <_printf_float+0x2e0>)
 80019f6:	47b8      	blx	r7
 80019f8:	3001      	adds	r0, #1
 80019fa:	f43f af1a 	beq.w	8001832 <_printf_float+0xb6>
 80019fe:	e9dd 320d 	ldrd	r3, r2, [sp, #52]	; 0x34
 8001a02:	4313      	orrs	r3, r2
 8001a04:	d102      	bne.n	8001a0c <_printf_float+0x290>
 8001a06:	6823      	ldr	r3, [r4, #0]
 8001a08:	07d9      	lsls	r1, r3, #31
 8001a0a:	d5d8      	bpl.n	80019be <_printf_float+0x242>
 8001a0c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001a10:	4631      	mov	r1, r6
 8001a12:	4628      	mov	r0, r5
 8001a14:	47b8      	blx	r7
 8001a16:	3001      	adds	r0, #1
 8001a18:	f43f af0b 	beq.w	8001832 <_printf_float+0xb6>
 8001a1c:	f04f 0900 	mov.w	r9, #0
 8001a20:	f104 0a1a 	add.w	sl, r4, #26
 8001a24:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001a26:	425b      	negs	r3, r3
 8001a28:	454b      	cmp	r3, r9
 8001a2a:	dc01      	bgt.n	8001a30 <_printf_float+0x2b4>
 8001a2c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001a2e:	e794      	b.n	800195a <_printf_float+0x1de>
 8001a30:	2301      	movs	r3, #1
 8001a32:	4652      	mov	r2, sl
 8001a34:	4631      	mov	r1, r6
 8001a36:	4628      	mov	r0, r5
 8001a38:	47b8      	blx	r7
 8001a3a:	3001      	adds	r0, #1
 8001a3c:	f43f aef9 	beq.w	8001832 <_printf_float+0xb6>
 8001a40:	f109 0901 	add.w	r9, r9, #1
 8001a44:	e7ee      	b.n	8001a24 <_printf_float+0x2a8>
 8001a46:	bf00      	nop
 8001a48:	7fefffff 	.word	0x7fefffff
 8001a4c:	080043ec 	.word	0x080043ec
 8001a50:	080043f0 	.word	0x080043f0
 8001a54:	080043f4 	.word	0x080043f4
 8001a58:	080043f8 	.word	0x080043f8
 8001a5c:	080043fc 	.word	0x080043fc
 8001a60:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001a62:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001a64:	429a      	cmp	r2, r3
 8001a66:	bfa8      	it	ge
 8001a68:	461a      	movge	r2, r3
 8001a6a:	2a00      	cmp	r2, #0
 8001a6c:	4691      	mov	r9, r2
 8001a6e:	dc37      	bgt.n	8001ae0 <_printf_float+0x364>
 8001a70:	f04f 0b00 	mov.w	fp, #0
 8001a74:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001a78:	f104 021a 	add.w	r2, r4, #26
 8001a7c:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
 8001a80:	ebaa 0309 	sub.w	r3, sl, r9
 8001a84:	455b      	cmp	r3, fp
 8001a86:	dc33      	bgt.n	8001af0 <_printf_float+0x374>
 8001a88:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8001a8c:	429a      	cmp	r2, r3
 8001a8e:	db3b      	blt.n	8001b08 <_printf_float+0x38c>
 8001a90:	6823      	ldr	r3, [r4, #0]
 8001a92:	07da      	lsls	r2, r3, #31
 8001a94:	d438      	bmi.n	8001b08 <_printf_float+0x38c>
 8001a96:	e9dd 320d 	ldrd	r3, r2, [sp, #52]	; 0x34
 8001a9a:	eba2 0903 	sub.w	r9, r2, r3
 8001a9e:	eba2 020a 	sub.w	r2, r2, sl
 8001aa2:	4591      	cmp	r9, r2
 8001aa4:	bfa8      	it	ge
 8001aa6:	4691      	movge	r9, r2
 8001aa8:	f1b9 0f00 	cmp.w	r9, #0
 8001aac:	dc34      	bgt.n	8001b18 <_printf_float+0x39c>
 8001aae:	f04f 0800 	mov.w	r8, #0
 8001ab2:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001ab6:	f104 0a1a 	add.w	sl, r4, #26
 8001aba:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8001abe:	1a9b      	subs	r3, r3, r2
 8001ac0:	eba3 0309 	sub.w	r3, r3, r9
 8001ac4:	4543      	cmp	r3, r8
 8001ac6:	f77f af7a 	ble.w	80019be <_printf_float+0x242>
 8001aca:	2301      	movs	r3, #1
 8001acc:	4652      	mov	r2, sl
 8001ace:	4631      	mov	r1, r6
 8001ad0:	4628      	mov	r0, r5
 8001ad2:	47b8      	blx	r7
 8001ad4:	3001      	adds	r0, #1
 8001ad6:	f43f aeac 	beq.w	8001832 <_printf_float+0xb6>
 8001ada:	f108 0801 	add.w	r8, r8, #1
 8001ade:	e7ec      	b.n	8001aba <_printf_float+0x33e>
 8001ae0:	4613      	mov	r3, r2
 8001ae2:	4631      	mov	r1, r6
 8001ae4:	4642      	mov	r2, r8
 8001ae6:	4628      	mov	r0, r5
 8001ae8:	47b8      	blx	r7
 8001aea:	3001      	adds	r0, #1
 8001aec:	d1c0      	bne.n	8001a70 <_printf_float+0x2f4>
 8001aee:	e6a0      	b.n	8001832 <_printf_float+0xb6>
 8001af0:	2301      	movs	r3, #1
 8001af2:	4631      	mov	r1, r6
 8001af4:	4628      	mov	r0, r5
 8001af6:	920b      	str	r2, [sp, #44]	; 0x2c
 8001af8:	47b8      	blx	r7
 8001afa:	3001      	adds	r0, #1
 8001afc:	f43f ae99 	beq.w	8001832 <_printf_float+0xb6>
 8001b00:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8001b02:	f10b 0b01 	add.w	fp, fp, #1
 8001b06:	e7b9      	b.n	8001a7c <_printf_float+0x300>
 8001b08:	4631      	mov	r1, r6
 8001b0a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001b0e:	4628      	mov	r0, r5
 8001b10:	47b8      	blx	r7
 8001b12:	3001      	adds	r0, #1
 8001b14:	d1bf      	bne.n	8001a96 <_printf_float+0x31a>
 8001b16:	e68c      	b.n	8001832 <_printf_float+0xb6>
 8001b18:	464b      	mov	r3, r9
 8001b1a:	4631      	mov	r1, r6
 8001b1c:	4628      	mov	r0, r5
 8001b1e:	eb08 020a 	add.w	r2, r8, sl
 8001b22:	47b8      	blx	r7
 8001b24:	3001      	adds	r0, #1
 8001b26:	d1c2      	bne.n	8001aae <_printf_float+0x332>
 8001b28:	e683      	b.n	8001832 <_printf_float+0xb6>
 8001b2a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001b2c:	2a01      	cmp	r2, #1
 8001b2e:	dc01      	bgt.n	8001b34 <_printf_float+0x3b8>
 8001b30:	07db      	lsls	r3, r3, #31
 8001b32:	d539      	bpl.n	8001ba8 <_printf_float+0x42c>
 8001b34:	2301      	movs	r3, #1
 8001b36:	4642      	mov	r2, r8
 8001b38:	4631      	mov	r1, r6
 8001b3a:	4628      	mov	r0, r5
 8001b3c:	47b8      	blx	r7
 8001b3e:	3001      	adds	r0, #1
 8001b40:	f43f ae77 	beq.w	8001832 <_printf_float+0xb6>
 8001b44:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001b48:	4631      	mov	r1, r6
 8001b4a:	4628      	mov	r0, r5
 8001b4c:	47b8      	blx	r7
 8001b4e:	3001      	adds	r0, #1
 8001b50:	f43f ae6f 	beq.w	8001832 <_printf_float+0xb6>
 8001b54:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001b58:	2200      	movs	r2, #0
 8001b5a:	2300      	movs	r3, #0
 8001b5c:	f8dd 9038 	ldr.w	r9, [sp, #56]	; 0x38
 8001b60:	f7fe ff32 	bl	80009c8 <__aeabi_dcmpeq>
 8001b64:	b9d8      	cbnz	r0, 8001b9e <_printf_float+0x422>
 8001b66:	f109 33ff 	add.w	r3, r9, #4294967295	; 0xffffffff
 8001b6a:	f108 0201 	add.w	r2, r8, #1
 8001b6e:	4631      	mov	r1, r6
 8001b70:	4628      	mov	r0, r5
 8001b72:	47b8      	blx	r7
 8001b74:	3001      	adds	r0, #1
 8001b76:	d10e      	bne.n	8001b96 <_printf_float+0x41a>
 8001b78:	e65b      	b.n	8001832 <_printf_float+0xb6>
 8001b7a:	2301      	movs	r3, #1
 8001b7c:	464a      	mov	r2, r9
 8001b7e:	4631      	mov	r1, r6
 8001b80:	4628      	mov	r0, r5
 8001b82:	47b8      	blx	r7
 8001b84:	3001      	adds	r0, #1
 8001b86:	f43f ae54 	beq.w	8001832 <_printf_float+0xb6>
 8001b8a:	f108 0801 	add.w	r8, r8, #1
 8001b8e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001b90:	3b01      	subs	r3, #1
 8001b92:	4543      	cmp	r3, r8
 8001b94:	dcf1      	bgt.n	8001b7a <_printf_float+0x3fe>
 8001b96:	4653      	mov	r3, sl
 8001b98:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8001b9c:	e6de      	b.n	800195c <_printf_float+0x1e0>
 8001b9e:	f04f 0800 	mov.w	r8, #0
 8001ba2:	f104 091a 	add.w	r9, r4, #26
 8001ba6:	e7f2      	b.n	8001b8e <_printf_float+0x412>
 8001ba8:	2301      	movs	r3, #1
 8001baa:	4642      	mov	r2, r8
 8001bac:	e7df      	b.n	8001b6e <_printf_float+0x3f2>
 8001bae:	2301      	movs	r3, #1
 8001bb0:	464a      	mov	r2, r9
 8001bb2:	4631      	mov	r1, r6
 8001bb4:	4628      	mov	r0, r5
 8001bb6:	47b8      	blx	r7
 8001bb8:	3001      	adds	r0, #1
 8001bba:	f43f ae3a 	beq.w	8001832 <_printf_float+0xb6>
 8001bbe:	f108 0801 	add.w	r8, r8, #1
 8001bc2:	68e3      	ldr	r3, [r4, #12]
 8001bc4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8001bc6:	1a5b      	subs	r3, r3, r1
 8001bc8:	4543      	cmp	r3, r8
 8001bca:	dcf0      	bgt.n	8001bae <_printf_float+0x432>
 8001bcc:	e6fb      	b.n	80019c6 <_printf_float+0x24a>
 8001bce:	f04f 0800 	mov.w	r8, #0
 8001bd2:	f104 0919 	add.w	r9, r4, #25
 8001bd6:	e7f4      	b.n	8001bc2 <_printf_float+0x446>

08001bd8 <_printf_common>:
 8001bd8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001bdc:	4616      	mov	r6, r2
 8001bde:	4699      	mov	r9, r3
 8001be0:	688a      	ldr	r2, [r1, #8]
 8001be2:	690b      	ldr	r3, [r1, #16]
 8001be4:	4607      	mov	r7, r0
 8001be6:	4293      	cmp	r3, r2
 8001be8:	bfb8      	it	lt
 8001bea:	4613      	movlt	r3, r2
 8001bec:	6033      	str	r3, [r6, #0]
 8001bee:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001bf2:	460c      	mov	r4, r1
 8001bf4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001bf8:	b10a      	cbz	r2, 8001bfe <_printf_common+0x26>
 8001bfa:	3301      	adds	r3, #1
 8001bfc:	6033      	str	r3, [r6, #0]
 8001bfe:	6823      	ldr	r3, [r4, #0]
 8001c00:	0699      	lsls	r1, r3, #26
 8001c02:	bf42      	ittt	mi
 8001c04:	6833      	ldrmi	r3, [r6, #0]
 8001c06:	3302      	addmi	r3, #2
 8001c08:	6033      	strmi	r3, [r6, #0]
 8001c0a:	6825      	ldr	r5, [r4, #0]
 8001c0c:	f015 0506 	ands.w	r5, r5, #6
 8001c10:	d106      	bne.n	8001c20 <_printf_common+0x48>
 8001c12:	f104 0a19 	add.w	sl, r4, #25
 8001c16:	68e3      	ldr	r3, [r4, #12]
 8001c18:	6832      	ldr	r2, [r6, #0]
 8001c1a:	1a9b      	subs	r3, r3, r2
 8001c1c:	42ab      	cmp	r3, r5
 8001c1e:	dc2b      	bgt.n	8001c78 <_printf_common+0xa0>
 8001c20:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8001c24:	1e13      	subs	r3, r2, #0
 8001c26:	6822      	ldr	r2, [r4, #0]
 8001c28:	bf18      	it	ne
 8001c2a:	2301      	movne	r3, #1
 8001c2c:	0692      	lsls	r2, r2, #26
 8001c2e:	d430      	bmi.n	8001c92 <_printf_common+0xba>
 8001c30:	4649      	mov	r1, r9
 8001c32:	4638      	mov	r0, r7
 8001c34:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001c38:	47c0      	blx	r8
 8001c3a:	3001      	adds	r0, #1
 8001c3c:	d023      	beq.n	8001c86 <_printf_common+0xae>
 8001c3e:	6823      	ldr	r3, [r4, #0]
 8001c40:	6922      	ldr	r2, [r4, #16]
 8001c42:	f003 0306 	and.w	r3, r3, #6
 8001c46:	2b04      	cmp	r3, #4
 8001c48:	bf14      	ite	ne
 8001c4a:	2500      	movne	r5, #0
 8001c4c:	6833      	ldreq	r3, [r6, #0]
 8001c4e:	f04f 0600 	mov.w	r6, #0
 8001c52:	bf08      	it	eq
 8001c54:	68e5      	ldreq	r5, [r4, #12]
 8001c56:	f104 041a 	add.w	r4, r4, #26
 8001c5a:	bf08      	it	eq
 8001c5c:	1aed      	subeq	r5, r5, r3
 8001c5e:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8001c62:	bf08      	it	eq
 8001c64:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001c68:	4293      	cmp	r3, r2
 8001c6a:	bfc4      	itt	gt
 8001c6c:	1a9b      	subgt	r3, r3, r2
 8001c6e:	18ed      	addgt	r5, r5, r3
 8001c70:	42b5      	cmp	r5, r6
 8001c72:	d11a      	bne.n	8001caa <_printf_common+0xd2>
 8001c74:	2000      	movs	r0, #0
 8001c76:	e008      	b.n	8001c8a <_printf_common+0xb2>
 8001c78:	2301      	movs	r3, #1
 8001c7a:	4652      	mov	r2, sl
 8001c7c:	4649      	mov	r1, r9
 8001c7e:	4638      	mov	r0, r7
 8001c80:	47c0      	blx	r8
 8001c82:	3001      	adds	r0, #1
 8001c84:	d103      	bne.n	8001c8e <_printf_common+0xb6>
 8001c86:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001c8a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001c8e:	3501      	adds	r5, #1
 8001c90:	e7c1      	b.n	8001c16 <_printf_common+0x3e>
 8001c92:	2030      	movs	r0, #48	; 0x30
 8001c94:	18e1      	adds	r1, r4, r3
 8001c96:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001c9a:	1c5a      	adds	r2, r3, #1
 8001c9c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001ca0:	4422      	add	r2, r4
 8001ca2:	3302      	adds	r3, #2
 8001ca4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8001ca8:	e7c2      	b.n	8001c30 <_printf_common+0x58>
 8001caa:	2301      	movs	r3, #1
 8001cac:	4622      	mov	r2, r4
 8001cae:	4649      	mov	r1, r9
 8001cb0:	4638      	mov	r0, r7
 8001cb2:	47c0      	blx	r8
 8001cb4:	3001      	adds	r0, #1
 8001cb6:	d0e6      	beq.n	8001c86 <_printf_common+0xae>
 8001cb8:	3601      	adds	r6, #1
 8001cba:	e7d9      	b.n	8001c70 <_printf_common+0x98>

08001cbc <_printf_i>:
 8001cbc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001cc0:	7e0f      	ldrb	r7, [r1, #24]
 8001cc2:	4691      	mov	r9, r2
 8001cc4:	2f78      	cmp	r7, #120	; 0x78
 8001cc6:	4680      	mov	r8, r0
 8001cc8:	460c      	mov	r4, r1
 8001cca:	469a      	mov	sl, r3
 8001ccc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8001cce:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8001cd2:	d807      	bhi.n	8001ce4 <_printf_i+0x28>
 8001cd4:	2f62      	cmp	r7, #98	; 0x62
 8001cd6:	d80a      	bhi.n	8001cee <_printf_i+0x32>
 8001cd8:	2f00      	cmp	r7, #0
 8001cda:	f000 80d5 	beq.w	8001e88 <_printf_i+0x1cc>
 8001cde:	2f58      	cmp	r7, #88	; 0x58
 8001ce0:	f000 80c1 	beq.w	8001e66 <_printf_i+0x1aa>
 8001ce4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001ce8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001cec:	e03a      	b.n	8001d64 <_printf_i+0xa8>
 8001cee:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8001cf2:	2b15      	cmp	r3, #21
 8001cf4:	d8f6      	bhi.n	8001ce4 <_printf_i+0x28>
 8001cf6:	a101      	add	r1, pc, #4	; (adr r1, 8001cfc <_printf_i+0x40>)
 8001cf8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001cfc:	08001d55 	.word	0x08001d55
 8001d00:	08001d69 	.word	0x08001d69
 8001d04:	08001ce5 	.word	0x08001ce5
 8001d08:	08001ce5 	.word	0x08001ce5
 8001d0c:	08001ce5 	.word	0x08001ce5
 8001d10:	08001ce5 	.word	0x08001ce5
 8001d14:	08001d69 	.word	0x08001d69
 8001d18:	08001ce5 	.word	0x08001ce5
 8001d1c:	08001ce5 	.word	0x08001ce5
 8001d20:	08001ce5 	.word	0x08001ce5
 8001d24:	08001ce5 	.word	0x08001ce5
 8001d28:	08001e6f 	.word	0x08001e6f
 8001d2c:	08001d95 	.word	0x08001d95
 8001d30:	08001e29 	.word	0x08001e29
 8001d34:	08001ce5 	.word	0x08001ce5
 8001d38:	08001ce5 	.word	0x08001ce5
 8001d3c:	08001e91 	.word	0x08001e91
 8001d40:	08001ce5 	.word	0x08001ce5
 8001d44:	08001d95 	.word	0x08001d95
 8001d48:	08001ce5 	.word	0x08001ce5
 8001d4c:	08001ce5 	.word	0x08001ce5
 8001d50:	08001e31 	.word	0x08001e31
 8001d54:	682b      	ldr	r3, [r5, #0]
 8001d56:	1d1a      	adds	r2, r3, #4
 8001d58:	681b      	ldr	r3, [r3, #0]
 8001d5a:	602a      	str	r2, [r5, #0]
 8001d5c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001d60:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001d64:	2301      	movs	r3, #1
 8001d66:	e0a0      	b.n	8001eaa <_printf_i+0x1ee>
 8001d68:	6820      	ldr	r0, [r4, #0]
 8001d6a:	682b      	ldr	r3, [r5, #0]
 8001d6c:	0607      	lsls	r7, r0, #24
 8001d6e:	f103 0104 	add.w	r1, r3, #4
 8001d72:	6029      	str	r1, [r5, #0]
 8001d74:	d501      	bpl.n	8001d7a <_printf_i+0xbe>
 8001d76:	681e      	ldr	r6, [r3, #0]
 8001d78:	e003      	b.n	8001d82 <_printf_i+0xc6>
 8001d7a:	0646      	lsls	r6, r0, #25
 8001d7c:	d5fb      	bpl.n	8001d76 <_printf_i+0xba>
 8001d7e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8001d82:	2e00      	cmp	r6, #0
 8001d84:	da03      	bge.n	8001d8e <_printf_i+0xd2>
 8001d86:	232d      	movs	r3, #45	; 0x2d
 8001d88:	4276      	negs	r6, r6
 8001d8a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001d8e:	230a      	movs	r3, #10
 8001d90:	4859      	ldr	r0, [pc, #356]	; (8001ef8 <_printf_i+0x23c>)
 8001d92:	e012      	b.n	8001dba <_printf_i+0xfe>
 8001d94:	682b      	ldr	r3, [r5, #0]
 8001d96:	6820      	ldr	r0, [r4, #0]
 8001d98:	1d19      	adds	r1, r3, #4
 8001d9a:	6029      	str	r1, [r5, #0]
 8001d9c:	0605      	lsls	r5, r0, #24
 8001d9e:	d501      	bpl.n	8001da4 <_printf_i+0xe8>
 8001da0:	681e      	ldr	r6, [r3, #0]
 8001da2:	e002      	b.n	8001daa <_printf_i+0xee>
 8001da4:	0641      	lsls	r1, r0, #25
 8001da6:	d5fb      	bpl.n	8001da0 <_printf_i+0xe4>
 8001da8:	881e      	ldrh	r6, [r3, #0]
 8001daa:	2f6f      	cmp	r7, #111	; 0x6f
 8001dac:	bf0c      	ite	eq
 8001dae:	2308      	moveq	r3, #8
 8001db0:	230a      	movne	r3, #10
 8001db2:	4851      	ldr	r0, [pc, #324]	; (8001ef8 <_printf_i+0x23c>)
 8001db4:	2100      	movs	r1, #0
 8001db6:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001dba:	6865      	ldr	r5, [r4, #4]
 8001dbc:	2d00      	cmp	r5, #0
 8001dbe:	bfa8      	it	ge
 8001dc0:	6821      	ldrge	r1, [r4, #0]
 8001dc2:	60a5      	str	r5, [r4, #8]
 8001dc4:	bfa4      	itt	ge
 8001dc6:	f021 0104 	bicge.w	r1, r1, #4
 8001dca:	6021      	strge	r1, [r4, #0]
 8001dcc:	b90e      	cbnz	r6, 8001dd2 <_printf_i+0x116>
 8001dce:	2d00      	cmp	r5, #0
 8001dd0:	d04b      	beq.n	8001e6a <_printf_i+0x1ae>
 8001dd2:	4615      	mov	r5, r2
 8001dd4:	fbb6 f1f3 	udiv	r1, r6, r3
 8001dd8:	fb03 6711 	mls	r7, r3, r1, r6
 8001ddc:	5dc7      	ldrb	r7, [r0, r7]
 8001dde:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8001de2:	4637      	mov	r7, r6
 8001de4:	42bb      	cmp	r3, r7
 8001de6:	460e      	mov	r6, r1
 8001de8:	d9f4      	bls.n	8001dd4 <_printf_i+0x118>
 8001dea:	2b08      	cmp	r3, #8
 8001dec:	d10b      	bne.n	8001e06 <_printf_i+0x14a>
 8001dee:	6823      	ldr	r3, [r4, #0]
 8001df0:	07de      	lsls	r6, r3, #31
 8001df2:	d508      	bpl.n	8001e06 <_printf_i+0x14a>
 8001df4:	6923      	ldr	r3, [r4, #16]
 8001df6:	6861      	ldr	r1, [r4, #4]
 8001df8:	4299      	cmp	r1, r3
 8001dfa:	bfde      	ittt	le
 8001dfc:	2330      	movle	r3, #48	; 0x30
 8001dfe:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001e02:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8001e06:	1b52      	subs	r2, r2, r5
 8001e08:	6122      	str	r2, [r4, #16]
 8001e0a:	464b      	mov	r3, r9
 8001e0c:	4621      	mov	r1, r4
 8001e0e:	4640      	mov	r0, r8
 8001e10:	f8cd a000 	str.w	sl, [sp]
 8001e14:	aa03      	add	r2, sp, #12
 8001e16:	f7ff fedf 	bl	8001bd8 <_printf_common>
 8001e1a:	3001      	adds	r0, #1
 8001e1c:	d14a      	bne.n	8001eb4 <_printf_i+0x1f8>
 8001e1e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001e22:	b004      	add	sp, #16
 8001e24:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001e28:	6823      	ldr	r3, [r4, #0]
 8001e2a:	f043 0320 	orr.w	r3, r3, #32
 8001e2e:	6023      	str	r3, [r4, #0]
 8001e30:	2778      	movs	r7, #120	; 0x78
 8001e32:	4832      	ldr	r0, [pc, #200]	; (8001efc <_printf_i+0x240>)
 8001e34:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8001e38:	6823      	ldr	r3, [r4, #0]
 8001e3a:	6829      	ldr	r1, [r5, #0]
 8001e3c:	061f      	lsls	r7, r3, #24
 8001e3e:	f851 6b04 	ldr.w	r6, [r1], #4
 8001e42:	d402      	bmi.n	8001e4a <_printf_i+0x18e>
 8001e44:	065f      	lsls	r7, r3, #25
 8001e46:	bf48      	it	mi
 8001e48:	b2b6      	uxthmi	r6, r6
 8001e4a:	07df      	lsls	r7, r3, #31
 8001e4c:	bf48      	it	mi
 8001e4e:	f043 0320 	orrmi.w	r3, r3, #32
 8001e52:	6029      	str	r1, [r5, #0]
 8001e54:	bf48      	it	mi
 8001e56:	6023      	strmi	r3, [r4, #0]
 8001e58:	b91e      	cbnz	r6, 8001e62 <_printf_i+0x1a6>
 8001e5a:	6823      	ldr	r3, [r4, #0]
 8001e5c:	f023 0320 	bic.w	r3, r3, #32
 8001e60:	6023      	str	r3, [r4, #0]
 8001e62:	2310      	movs	r3, #16
 8001e64:	e7a6      	b.n	8001db4 <_printf_i+0xf8>
 8001e66:	4824      	ldr	r0, [pc, #144]	; (8001ef8 <_printf_i+0x23c>)
 8001e68:	e7e4      	b.n	8001e34 <_printf_i+0x178>
 8001e6a:	4615      	mov	r5, r2
 8001e6c:	e7bd      	b.n	8001dea <_printf_i+0x12e>
 8001e6e:	682b      	ldr	r3, [r5, #0]
 8001e70:	6826      	ldr	r6, [r4, #0]
 8001e72:	1d18      	adds	r0, r3, #4
 8001e74:	6961      	ldr	r1, [r4, #20]
 8001e76:	6028      	str	r0, [r5, #0]
 8001e78:	0635      	lsls	r5, r6, #24
 8001e7a:	681b      	ldr	r3, [r3, #0]
 8001e7c:	d501      	bpl.n	8001e82 <_printf_i+0x1c6>
 8001e7e:	6019      	str	r1, [r3, #0]
 8001e80:	e002      	b.n	8001e88 <_printf_i+0x1cc>
 8001e82:	0670      	lsls	r0, r6, #25
 8001e84:	d5fb      	bpl.n	8001e7e <_printf_i+0x1c2>
 8001e86:	8019      	strh	r1, [r3, #0]
 8001e88:	2300      	movs	r3, #0
 8001e8a:	4615      	mov	r5, r2
 8001e8c:	6123      	str	r3, [r4, #16]
 8001e8e:	e7bc      	b.n	8001e0a <_printf_i+0x14e>
 8001e90:	682b      	ldr	r3, [r5, #0]
 8001e92:	2100      	movs	r1, #0
 8001e94:	1d1a      	adds	r2, r3, #4
 8001e96:	602a      	str	r2, [r5, #0]
 8001e98:	681d      	ldr	r5, [r3, #0]
 8001e9a:	6862      	ldr	r2, [r4, #4]
 8001e9c:	4628      	mov	r0, r5
 8001e9e:	f000 f95e 	bl	800215e <memchr>
 8001ea2:	b108      	cbz	r0, 8001ea8 <_printf_i+0x1ec>
 8001ea4:	1b40      	subs	r0, r0, r5
 8001ea6:	6060      	str	r0, [r4, #4]
 8001ea8:	6863      	ldr	r3, [r4, #4]
 8001eaa:	6123      	str	r3, [r4, #16]
 8001eac:	2300      	movs	r3, #0
 8001eae:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001eb2:	e7aa      	b.n	8001e0a <_printf_i+0x14e>
 8001eb4:	462a      	mov	r2, r5
 8001eb6:	4649      	mov	r1, r9
 8001eb8:	4640      	mov	r0, r8
 8001eba:	6923      	ldr	r3, [r4, #16]
 8001ebc:	47d0      	blx	sl
 8001ebe:	3001      	adds	r0, #1
 8001ec0:	d0ad      	beq.n	8001e1e <_printf_i+0x162>
 8001ec2:	6823      	ldr	r3, [r4, #0]
 8001ec4:	079b      	lsls	r3, r3, #30
 8001ec6:	d413      	bmi.n	8001ef0 <_printf_i+0x234>
 8001ec8:	68e0      	ldr	r0, [r4, #12]
 8001eca:	9b03      	ldr	r3, [sp, #12]
 8001ecc:	4298      	cmp	r0, r3
 8001ece:	bfb8      	it	lt
 8001ed0:	4618      	movlt	r0, r3
 8001ed2:	e7a6      	b.n	8001e22 <_printf_i+0x166>
 8001ed4:	2301      	movs	r3, #1
 8001ed6:	4632      	mov	r2, r6
 8001ed8:	4649      	mov	r1, r9
 8001eda:	4640      	mov	r0, r8
 8001edc:	47d0      	blx	sl
 8001ede:	3001      	adds	r0, #1
 8001ee0:	d09d      	beq.n	8001e1e <_printf_i+0x162>
 8001ee2:	3501      	adds	r5, #1
 8001ee4:	68e3      	ldr	r3, [r4, #12]
 8001ee6:	9903      	ldr	r1, [sp, #12]
 8001ee8:	1a5b      	subs	r3, r3, r1
 8001eea:	42ab      	cmp	r3, r5
 8001eec:	dcf2      	bgt.n	8001ed4 <_printf_i+0x218>
 8001eee:	e7eb      	b.n	8001ec8 <_printf_i+0x20c>
 8001ef0:	2500      	movs	r5, #0
 8001ef2:	f104 0619 	add.w	r6, r4, #25
 8001ef6:	e7f5      	b.n	8001ee4 <_printf_i+0x228>
 8001ef8:	080043fe 	.word	0x080043fe
 8001efc:	0800440f 	.word	0x0800440f

08001f00 <sniprintf>:
 8001f00:	b40c      	push	{r2, r3}
 8001f02:	b530      	push	{r4, r5, lr}
 8001f04:	4b17      	ldr	r3, [pc, #92]	; (8001f64 <sniprintf+0x64>)
 8001f06:	1e0c      	subs	r4, r1, #0
 8001f08:	681d      	ldr	r5, [r3, #0]
 8001f0a:	b09d      	sub	sp, #116	; 0x74
 8001f0c:	da08      	bge.n	8001f20 <sniprintf+0x20>
 8001f0e:	238b      	movs	r3, #139	; 0x8b
 8001f10:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001f14:	602b      	str	r3, [r5, #0]
 8001f16:	b01d      	add	sp, #116	; 0x74
 8001f18:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8001f1c:	b002      	add	sp, #8
 8001f1e:	4770      	bx	lr
 8001f20:	f44f 7302 	mov.w	r3, #520	; 0x208
 8001f24:	f8ad 3014 	strh.w	r3, [sp, #20]
 8001f28:	bf0c      	ite	eq
 8001f2a:	4623      	moveq	r3, r4
 8001f2c:	f104 33ff 	addne.w	r3, r4, #4294967295	; 0xffffffff
 8001f30:	9304      	str	r3, [sp, #16]
 8001f32:	9307      	str	r3, [sp, #28]
 8001f34:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001f38:	9002      	str	r0, [sp, #8]
 8001f3a:	9006      	str	r0, [sp, #24]
 8001f3c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8001f40:	4628      	mov	r0, r5
 8001f42:	ab21      	add	r3, sp, #132	; 0x84
 8001f44:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8001f46:	a902      	add	r1, sp, #8
 8001f48:	9301      	str	r3, [sp, #4]
 8001f4a:	f000 ffdf 	bl	8002f0c <_svfiprintf_r>
 8001f4e:	1c43      	adds	r3, r0, #1
 8001f50:	bfbc      	itt	lt
 8001f52:	238b      	movlt	r3, #139	; 0x8b
 8001f54:	602b      	strlt	r3, [r5, #0]
 8001f56:	2c00      	cmp	r4, #0
 8001f58:	d0dd      	beq.n	8001f16 <sniprintf+0x16>
 8001f5a:	2200      	movs	r2, #0
 8001f5c:	9b02      	ldr	r3, [sp, #8]
 8001f5e:	701a      	strb	r2, [r3, #0]
 8001f60:	e7d9      	b.n	8001f16 <sniprintf+0x16>
 8001f62:	bf00      	nop
 8001f64:	20000058 	.word	0x20000058

08001f68 <std>:
 8001f68:	2300      	movs	r3, #0
 8001f6a:	b510      	push	{r4, lr}
 8001f6c:	4604      	mov	r4, r0
 8001f6e:	e9c0 3300 	strd	r3, r3, [r0]
 8001f72:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8001f76:	6083      	str	r3, [r0, #8]
 8001f78:	8181      	strh	r1, [r0, #12]
 8001f7a:	6643      	str	r3, [r0, #100]	; 0x64
 8001f7c:	81c2      	strh	r2, [r0, #14]
 8001f7e:	6183      	str	r3, [r0, #24]
 8001f80:	4619      	mov	r1, r3
 8001f82:	2208      	movs	r2, #8
 8001f84:	305c      	adds	r0, #92	; 0x5c
 8001f86:	f000 f8b1 	bl	80020ec <memset>
 8001f8a:	4b0d      	ldr	r3, [pc, #52]	; (8001fc0 <std+0x58>)
 8001f8c:	6224      	str	r4, [r4, #32]
 8001f8e:	6263      	str	r3, [r4, #36]	; 0x24
 8001f90:	4b0c      	ldr	r3, [pc, #48]	; (8001fc4 <std+0x5c>)
 8001f92:	62a3      	str	r3, [r4, #40]	; 0x28
 8001f94:	4b0c      	ldr	r3, [pc, #48]	; (8001fc8 <std+0x60>)
 8001f96:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001f98:	4b0c      	ldr	r3, [pc, #48]	; (8001fcc <std+0x64>)
 8001f9a:	6323      	str	r3, [r4, #48]	; 0x30
 8001f9c:	4b0c      	ldr	r3, [pc, #48]	; (8001fd0 <std+0x68>)
 8001f9e:	429c      	cmp	r4, r3
 8001fa0:	d006      	beq.n	8001fb0 <std+0x48>
 8001fa2:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8001fa6:	4294      	cmp	r4, r2
 8001fa8:	d002      	beq.n	8001fb0 <std+0x48>
 8001faa:	33d0      	adds	r3, #208	; 0xd0
 8001fac:	429c      	cmp	r4, r3
 8001fae:	d105      	bne.n	8001fbc <std+0x54>
 8001fb0:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8001fb4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001fb8:	f000 b8ce 	b.w	8002158 <__retarget_lock_init_recursive>
 8001fbc:	bd10      	pop	{r4, pc}
 8001fbe:	bf00      	nop
 8001fc0:	08003ab5 	.word	0x08003ab5
 8001fc4:	08003ad7 	.word	0x08003ad7
 8001fc8:	08003b0f 	.word	0x08003b0f
 8001fcc:	08003b33 	.word	0x08003b33
 8001fd0:	20000228 	.word	0x20000228

08001fd4 <stdio_exit_handler>:
 8001fd4:	4a02      	ldr	r2, [pc, #8]	; (8001fe0 <stdio_exit_handler+0xc>)
 8001fd6:	4903      	ldr	r1, [pc, #12]	; (8001fe4 <stdio_exit_handler+0x10>)
 8001fd8:	4803      	ldr	r0, [pc, #12]	; (8001fe8 <stdio_exit_handler+0x14>)
 8001fda:	f000 b869 	b.w	80020b0 <_fwalk_sglue>
 8001fde:	bf00      	nop
 8001fe0:	20000000 	.word	0x20000000
 8001fe4:	0800335d 	.word	0x0800335d
 8001fe8:	2000000c 	.word	0x2000000c

08001fec <cleanup_stdio>:
 8001fec:	6841      	ldr	r1, [r0, #4]
 8001fee:	4b0c      	ldr	r3, [pc, #48]	; (8002020 <cleanup_stdio+0x34>)
 8001ff0:	b510      	push	{r4, lr}
 8001ff2:	4299      	cmp	r1, r3
 8001ff4:	4604      	mov	r4, r0
 8001ff6:	d001      	beq.n	8001ffc <cleanup_stdio+0x10>
 8001ff8:	f001 f9b0 	bl	800335c <_fflush_r>
 8001ffc:	68a1      	ldr	r1, [r4, #8]
 8001ffe:	4b09      	ldr	r3, [pc, #36]	; (8002024 <cleanup_stdio+0x38>)
 8002000:	4299      	cmp	r1, r3
 8002002:	d002      	beq.n	800200a <cleanup_stdio+0x1e>
 8002004:	4620      	mov	r0, r4
 8002006:	f001 f9a9 	bl	800335c <_fflush_r>
 800200a:	68e1      	ldr	r1, [r4, #12]
 800200c:	4b06      	ldr	r3, [pc, #24]	; (8002028 <cleanup_stdio+0x3c>)
 800200e:	4299      	cmp	r1, r3
 8002010:	d004      	beq.n	800201c <cleanup_stdio+0x30>
 8002012:	4620      	mov	r0, r4
 8002014:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002018:	f001 b9a0 	b.w	800335c <_fflush_r>
 800201c:	bd10      	pop	{r4, pc}
 800201e:	bf00      	nop
 8002020:	20000228 	.word	0x20000228
 8002024:	20000290 	.word	0x20000290
 8002028:	200002f8 	.word	0x200002f8

0800202c <global_stdio_init.part.0>:
 800202c:	b510      	push	{r4, lr}
 800202e:	4b0b      	ldr	r3, [pc, #44]	; (800205c <global_stdio_init.part.0+0x30>)
 8002030:	4c0b      	ldr	r4, [pc, #44]	; (8002060 <global_stdio_init.part.0+0x34>)
 8002032:	4a0c      	ldr	r2, [pc, #48]	; (8002064 <global_stdio_init.part.0+0x38>)
 8002034:	4620      	mov	r0, r4
 8002036:	601a      	str	r2, [r3, #0]
 8002038:	2104      	movs	r1, #4
 800203a:	2200      	movs	r2, #0
 800203c:	f7ff ff94 	bl	8001f68 <std>
 8002040:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8002044:	2201      	movs	r2, #1
 8002046:	2109      	movs	r1, #9
 8002048:	f7ff ff8e 	bl	8001f68 <std>
 800204c:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8002050:	2202      	movs	r2, #2
 8002052:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002056:	2112      	movs	r1, #18
 8002058:	f7ff bf86 	b.w	8001f68 <std>
 800205c:	20000360 	.word	0x20000360
 8002060:	20000228 	.word	0x20000228
 8002064:	08001fd5 	.word	0x08001fd5

08002068 <__sfp_lock_acquire>:
 8002068:	4801      	ldr	r0, [pc, #4]	; (8002070 <__sfp_lock_acquire+0x8>)
 800206a:	f000 b876 	b.w	800215a <__retarget_lock_acquire_recursive>
 800206e:	bf00      	nop
 8002070:	20000365 	.word	0x20000365

08002074 <__sfp_lock_release>:
 8002074:	4801      	ldr	r0, [pc, #4]	; (800207c <__sfp_lock_release+0x8>)
 8002076:	f000 b871 	b.w	800215c <__retarget_lock_release_recursive>
 800207a:	bf00      	nop
 800207c:	20000365 	.word	0x20000365

08002080 <__sinit>:
 8002080:	b510      	push	{r4, lr}
 8002082:	4604      	mov	r4, r0
 8002084:	f7ff fff0 	bl	8002068 <__sfp_lock_acquire>
 8002088:	6a23      	ldr	r3, [r4, #32]
 800208a:	b11b      	cbz	r3, 8002094 <__sinit+0x14>
 800208c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002090:	f7ff bff0 	b.w	8002074 <__sfp_lock_release>
 8002094:	4b04      	ldr	r3, [pc, #16]	; (80020a8 <__sinit+0x28>)
 8002096:	6223      	str	r3, [r4, #32]
 8002098:	4b04      	ldr	r3, [pc, #16]	; (80020ac <__sinit+0x2c>)
 800209a:	681b      	ldr	r3, [r3, #0]
 800209c:	2b00      	cmp	r3, #0
 800209e:	d1f5      	bne.n	800208c <__sinit+0xc>
 80020a0:	f7ff ffc4 	bl	800202c <global_stdio_init.part.0>
 80020a4:	e7f2      	b.n	800208c <__sinit+0xc>
 80020a6:	bf00      	nop
 80020a8:	08001fed 	.word	0x08001fed
 80020ac:	20000360 	.word	0x20000360

080020b0 <_fwalk_sglue>:
 80020b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80020b4:	4607      	mov	r7, r0
 80020b6:	4688      	mov	r8, r1
 80020b8:	4614      	mov	r4, r2
 80020ba:	2600      	movs	r6, #0
 80020bc:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80020c0:	f1b9 0901 	subs.w	r9, r9, #1
 80020c4:	d505      	bpl.n	80020d2 <_fwalk_sglue+0x22>
 80020c6:	6824      	ldr	r4, [r4, #0]
 80020c8:	2c00      	cmp	r4, #0
 80020ca:	d1f7      	bne.n	80020bc <_fwalk_sglue+0xc>
 80020cc:	4630      	mov	r0, r6
 80020ce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80020d2:	89ab      	ldrh	r3, [r5, #12]
 80020d4:	2b01      	cmp	r3, #1
 80020d6:	d907      	bls.n	80020e8 <_fwalk_sglue+0x38>
 80020d8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80020dc:	3301      	adds	r3, #1
 80020de:	d003      	beq.n	80020e8 <_fwalk_sglue+0x38>
 80020e0:	4629      	mov	r1, r5
 80020e2:	4638      	mov	r0, r7
 80020e4:	47c0      	blx	r8
 80020e6:	4306      	orrs	r6, r0
 80020e8:	3568      	adds	r5, #104	; 0x68
 80020ea:	e7e9      	b.n	80020c0 <_fwalk_sglue+0x10>

080020ec <memset>:
 80020ec:	4603      	mov	r3, r0
 80020ee:	4402      	add	r2, r0
 80020f0:	4293      	cmp	r3, r2
 80020f2:	d100      	bne.n	80020f6 <memset+0xa>
 80020f4:	4770      	bx	lr
 80020f6:	f803 1b01 	strb.w	r1, [r3], #1
 80020fa:	e7f9      	b.n	80020f0 <memset+0x4>

080020fc <_localeconv_r>:
 80020fc:	4800      	ldr	r0, [pc, #0]	; (8002100 <_localeconv_r+0x4>)
 80020fe:	4770      	bx	lr
 8002100:	2000014c 	.word	0x2000014c

08002104 <__errno>:
 8002104:	4b01      	ldr	r3, [pc, #4]	; (800210c <__errno+0x8>)
 8002106:	6818      	ldr	r0, [r3, #0]
 8002108:	4770      	bx	lr
 800210a:	bf00      	nop
 800210c:	20000058 	.word	0x20000058

08002110 <__libc_init_array>:
 8002110:	b570      	push	{r4, r5, r6, lr}
 8002112:	2600      	movs	r6, #0
 8002114:	4d0c      	ldr	r5, [pc, #48]	; (8002148 <__libc_init_array+0x38>)
 8002116:	4c0d      	ldr	r4, [pc, #52]	; (800214c <__libc_init_array+0x3c>)
 8002118:	1b64      	subs	r4, r4, r5
 800211a:	10a4      	asrs	r4, r4, #2
 800211c:	42a6      	cmp	r6, r4
 800211e:	d109      	bne.n	8002134 <__libc_init_array+0x24>
 8002120:	f002 f912 	bl	8004348 <_init>
 8002124:	2600      	movs	r6, #0
 8002126:	4d0a      	ldr	r5, [pc, #40]	; (8002150 <__libc_init_array+0x40>)
 8002128:	4c0a      	ldr	r4, [pc, #40]	; (8002154 <__libc_init_array+0x44>)
 800212a:	1b64      	subs	r4, r4, r5
 800212c:	10a4      	asrs	r4, r4, #2
 800212e:	42a6      	cmp	r6, r4
 8002130:	d105      	bne.n	800213e <__libc_init_array+0x2e>
 8002132:	bd70      	pop	{r4, r5, r6, pc}
 8002134:	f855 3b04 	ldr.w	r3, [r5], #4
 8002138:	4798      	blx	r3
 800213a:	3601      	adds	r6, #1
 800213c:	e7ee      	b.n	800211c <__libc_init_array+0xc>
 800213e:	f855 3b04 	ldr.w	r3, [r5], #4
 8002142:	4798      	blx	r3
 8002144:	3601      	adds	r6, #1
 8002146:	e7f2      	b.n	800212e <__libc_init_array+0x1e>
 8002148:	0800475c 	.word	0x0800475c
 800214c:	0800475c 	.word	0x0800475c
 8002150:	0800475c 	.word	0x0800475c
 8002154:	08004760 	.word	0x08004760

08002158 <__retarget_lock_init_recursive>:
 8002158:	4770      	bx	lr

0800215a <__retarget_lock_acquire_recursive>:
 800215a:	4770      	bx	lr

0800215c <__retarget_lock_release_recursive>:
 800215c:	4770      	bx	lr

0800215e <memchr>:
 800215e:	4603      	mov	r3, r0
 8002160:	b510      	push	{r4, lr}
 8002162:	b2c9      	uxtb	r1, r1
 8002164:	4402      	add	r2, r0
 8002166:	4293      	cmp	r3, r2
 8002168:	4618      	mov	r0, r3
 800216a:	d101      	bne.n	8002170 <memchr+0x12>
 800216c:	2000      	movs	r0, #0
 800216e:	e003      	b.n	8002178 <memchr+0x1a>
 8002170:	7804      	ldrb	r4, [r0, #0]
 8002172:	3301      	adds	r3, #1
 8002174:	428c      	cmp	r4, r1
 8002176:	d1f6      	bne.n	8002166 <memchr+0x8>
 8002178:	bd10      	pop	{r4, pc}

0800217a <quorem>:
 800217a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800217e:	6903      	ldr	r3, [r0, #16]
 8002180:	690c      	ldr	r4, [r1, #16]
 8002182:	4607      	mov	r7, r0
 8002184:	42a3      	cmp	r3, r4
 8002186:	db7f      	blt.n	8002288 <quorem+0x10e>
 8002188:	3c01      	subs	r4, #1
 800218a:	f100 0514 	add.w	r5, r0, #20
 800218e:	f101 0814 	add.w	r8, r1, #20
 8002192:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002196:	9301      	str	r3, [sp, #4]
 8002198:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800219c:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80021a0:	3301      	adds	r3, #1
 80021a2:	429a      	cmp	r2, r3
 80021a4:	fbb2 f6f3 	udiv	r6, r2, r3
 80021a8:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 80021ac:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 80021b0:	d331      	bcc.n	8002216 <quorem+0x9c>
 80021b2:	f04f 0e00 	mov.w	lr, #0
 80021b6:	4640      	mov	r0, r8
 80021b8:	46ac      	mov	ip, r5
 80021ba:	46f2      	mov	sl, lr
 80021bc:	f850 2b04 	ldr.w	r2, [r0], #4
 80021c0:	b293      	uxth	r3, r2
 80021c2:	fb06 e303 	mla	r3, r6, r3, lr
 80021c6:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 80021ca:	0c1a      	lsrs	r2, r3, #16
 80021cc:	b29b      	uxth	r3, r3
 80021ce:	fb06 220e 	mla	r2, r6, lr, r2
 80021d2:	ebaa 0303 	sub.w	r3, sl, r3
 80021d6:	f8dc a000 	ldr.w	sl, [ip]
 80021da:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 80021de:	fa1f fa8a 	uxth.w	sl, sl
 80021e2:	4453      	add	r3, sl
 80021e4:	f8dc a000 	ldr.w	sl, [ip]
 80021e8:	b292      	uxth	r2, r2
 80021ea:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 80021ee:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80021f2:	b29b      	uxth	r3, r3
 80021f4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80021f8:	4581      	cmp	r9, r0
 80021fa:	ea4f 4a22 	mov.w	sl, r2, asr #16
 80021fe:	f84c 3b04 	str.w	r3, [ip], #4
 8002202:	d2db      	bcs.n	80021bc <quorem+0x42>
 8002204:	f855 300b 	ldr.w	r3, [r5, fp]
 8002208:	b92b      	cbnz	r3, 8002216 <quorem+0x9c>
 800220a:	9b01      	ldr	r3, [sp, #4]
 800220c:	3b04      	subs	r3, #4
 800220e:	429d      	cmp	r5, r3
 8002210:	461a      	mov	r2, r3
 8002212:	d32d      	bcc.n	8002270 <quorem+0xf6>
 8002214:	613c      	str	r4, [r7, #16]
 8002216:	4638      	mov	r0, r7
 8002218:	f001 fb4e 	bl	80038b8 <__mcmp>
 800221c:	2800      	cmp	r0, #0
 800221e:	db23      	blt.n	8002268 <quorem+0xee>
 8002220:	4629      	mov	r1, r5
 8002222:	2000      	movs	r0, #0
 8002224:	3601      	adds	r6, #1
 8002226:	f858 2b04 	ldr.w	r2, [r8], #4
 800222a:	f8d1 c000 	ldr.w	ip, [r1]
 800222e:	b293      	uxth	r3, r2
 8002230:	1ac3      	subs	r3, r0, r3
 8002232:	0c12      	lsrs	r2, r2, #16
 8002234:	fa1f f08c 	uxth.w	r0, ip
 8002238:	4403      	add	r3, r0
 800223a:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 800223e:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8002242:	b29b      	uxth	r3, r3
 8002244:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002248:	45c1      	cmp	r9, r8
 800224a:	ea4f 4022 	mov.w	r0, r2, asr #16
 800224e:	f841 3b04 	str.w	r3, [r1], #4
 8002252:	d2e8      	bcs.n	8002226 <quorem+0xac>
 8002254:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002258:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800225c:	b922      	cbnz	r2, 8002268 <quorem+0xee>
 800225e:	3b04      	subs	r3, #4
 8002260:	429d      	cmp	r5, r3
 8002262:	461a      	mov	r2, r3
 8002264:	d30a      	bcc.n	800227c <quorem+0x102>
 8002266:	613c      	str	r4, [r7, #16]
 8002268:	4630      	mov	r0, r6
 800226a:	b003      	add	sp, #12
 800226c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002270:	6812      	ldr	r2, [r2, #0]
 8002272:	3b04      	subs	r3, #4
 8002274:	2a00      	cmp	r2, #0
 8002276:	d1cd      	bne.n	8002214 <quorem+0x9a>
 8002278:	3c01      	subs	r4, #1
 800227a:	e7c8      	b.n	800220e <quorem+0x94>
 800227c:	6812      	ldr	r2, [r2, #0]
 800227e:	3b04      	subs	r3, #4
 8002280:	2a00      	cmp	r2, #0
 8002282:	d1f0      	bne.n	8002266 <quorem+0xec>
 8002284:	3c01      	subs	r4, #1
 8002286:	e7eb      	b.n	8002260 <quorem+0xe6>
 8002288:	2000      	movs	r0, #0
 800228a:	e7ee      	b.n	800226a <quorem+0xf0>
 800228c:	0000      	movs	r0, r0
	...

08002290 <_dtoa_r>:
 8002290:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002294:	4616      	mov	r6, r2
 8002296:	461f      	mov	r7, r3
 8002298:	69c4      	ldr	r4, [r0, #28]
 800229a:	b099      	sub	sp, #100	; 0x64
 800229c:	4605      	mov	r5, r0
 800229e:	e9cd 6704 	strd	r6, r7, [sp, #16]
 80022a2:	f8dd 8094 	ldr.w	r8, [sp, #148]	; 0x94
 80022a6:	b974      	cbnz	r4, 80022c6 <_dtoa_r+0x36>
 80022a8:	2010      	movs	r0, #16
 80022aa:	f000 ff2d 	bl	8003108 <malloc>
 80022ae:	4602      	mov	r2, r0
 80022b0:	61e8      	str	r0, [r5, #28]
 80022b2:	b920      	cbnz	r0, 80022be <_dtoa_r+0x2e>
 80022b4:	21ef      	movs	r1, #239	; 0xef
 80022b6:	4bac      	ldr	r3, [pc, #688]	; (8002568 <_dtoa_r+0x2d8>)
 80022b8:	48ac      	ldr	r0, [pc, #688]	; (800256c <_dtoa_r+0x2dc>)
 80022ba:	f001 fceb 	bl	8003c94 <__assert_func>
 80022be:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80022c2:	6004      	str	r4, [r0, #0]
 80022c4:	60c4      	str	r4, [r0, #12]
 80022c6:	69eb      	ldr	r3, [r5, #28]
 80022c8:	6819      	ldr	r1, [r3, #0]
 80022ca:	b151      	cbz	r1, 80022e2 <_dtoa_r+0x52>
 80022cc:	685a      	ldr	r2, [r3, #4]
 80022ce:	2301      	movs	r3, #1
 80022d0:	4093      	lsls	r3, r2
 80022d2:	604a      	str	r2, [r1, #4]
 80022d4:	608b      	str	r3, [r1, #8]
 80022d6:	4628      	mov	r0, r5
 80022d8:	f001 f8b4 	bl	8003444 <_Bfree>
 80022dc:	2200      	movs	r2, #0
 80022de:	69eb      	ldr	r3, [r5, #28]
 80022e0:	601a      	str	r2, [r3, #0]
 80022e2:	1e3b      	subs	r3, r7, #0
 80022e4:	bfaf      	iteee	ge
 80022e6:	2300      	movge	r3, #0
 80022e8:	2201      	movlt	r2, #1
 80022ea:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 80022ee:	9305      	strlt	r3, [sp, #20]
 80022f0:	bfa8      	it	ge
 80022f2:	f8c8 3000 	strge.w	r3, [r8]
 80022f6:	f8dd 9014 	ldr.w	r9, [sp, #20]
 80022fa:	4b9d      	ldr	r3, [pc, #628]	; (8002570 <_dtoa_r+0x2e0>)
 80022fc:	bfb8      	it	lt
 80022fe:	f8c8 2000 	strlt.w	r2, [r8]
 8002302:	ea33 0309 	bics.w	r3, r3, r9
 8002306:	d119      	bne.n	800233c <_dtoa_r+0xac>
 8002308:	f242 730f 	movw	r3, #9999	; 0x270f
 800230c:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800230e:	6013      	str	r3, [r2, #0]
 8002310:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8002314:	4333      	orrs	r3, r6
 8002316:	f000 8589 	beq.w	8002e2c <_dtoa_r+0xb9c>
 800231a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800231c:	b953      	cbnz	r3, 8002334 <_dtoa_r+0xa4>
 800231e:	4b95      	ldr	r3, [pc, #596]	; (8002574 <_dtoa_r+0x2e4>)
 8002320:	e023      	b.n	800236a <_dtoa_r+0xda>
 8002322:	4b95      	ldr	r3, [pc, #596]	; (8002578 <_dtoa_r+0x2e8>)
 8002324:	9303      	str	r3, [sp, #12]
 8002326:	3308      	adds	r3, #8
 8002328:	9a26      	ldr	r2, [sp, #152]	; 0x98
 800232a:	6013      	str	r3, [r2, #0]
 800232c:	9803      	ldr	r0, [sp, #12]
 800232e:	b019      	add	sp, #100	; 0x64
 8002330:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002334:	4b8f      	ldr	r3, [pc, #572]	; (8002574 <_dtoa_r+0x2e4>)
 8002336:	9303      	str	r3, [sp, #12]
 8002338:	3303      	adds	r3, #3
 800233a:	e7f5      	b.n	8002328 <_dtoa_r+0x98>
 800233c:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 8002340:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 8002344:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8002348:	2200      	movs	r2, #0
 800234a:	2300      	movs	r3, #0
 800234c:	f7fe fb3c 	bl	80009c8 <__aeabi_dcmpeq>
 8002350:	4680      	mov	r8, r0
 8002352:	b160      	cbz	r0, 800236e <_dtoa_r+0xde>
 8002354:	2301      	movs	r3, #1
 8002356:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8002358:	6013      	str	r3, [r2, #0]
 800235a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800235c:	2b00      	cmp	r3, #0
 800235e:	f000 8562 	beq.w	8002e26 <_dtoa_r+0xb96>
 8002362:	4b86      	ldr	r3, [pc, #536]	; (800257c <_dtoa_r+0x2ec>)
 8002364:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8002366:	6013      	str	r3, [r2, #0]
 8002368:	3b01      	subs	r3, #1
 800236a:	9303      	str	r3, [sp, #12]
 800236c:	e7de      	b.n	800232c <_dtoa_r+0x9c>
 800236e:	ab16      	add	r3, sp, #88	; 0x58
 8002370:	9301      	str	r3, [sp, #4]
 8002372:	ab17      	add	r3, sp, #92	; 0x5c
 8002374:	9300      	str	r3, [sp, #0]
 8002376:	4628      	mov	r0, r5
 8002378:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 800237c:	f001 fb44 	bl	8003a08 <__d2b>
 8002380:	f3c9 540a 	ubfx	r4, r9, #20, #11
 8002384:	4682      	mov	sl, r0
 8002386:	2c00      	cmp	r4, #0
 8002388:	d07e      	beq.n	8002488 <_dtoa_r+0x1f8>
 800238a:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800238e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002390:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
 8002394:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002398:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 800239c:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 80023a0:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
 80023a4:	4619      	mov	r1, r3
 80023a6:	2200      	movs	r2, #0
 80023a8:	4b75      	ldr	r3, [pc, #468]	; (8002580 <_dtoa_r+0x2f0>)
 80023aa:	f7fd feed 	bl	8000188 <__aeabi_dsub>
 80023ae:	a368      	add	r3, pc, #416	; (adr r3, 8002550 <_dtoa_r+0x2c0>)
 80023b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80023b4:	f7fe f8a0 	bl	80004f8 <__aeabi_dmul>
 80023b8:	a367      	add	r3, pc, #412	; (adr r3, 8002558 <_dtoa_r+0x2c8>)
 80023ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80023be:	f7fd fee5 	bl	800018c <__adddf3>
 80023c2:	4606      	mov	r6, r0
 80023c4:	4620      	mov	r0, r4
 80023c6:	460f      	mov	r7, r1
 80023c8:	f7fe f82c 	bl	8000424 <__aeabi_i2d>
 80023cc:	a364      	add	r3, pc, #400	; (adr r3, 8002560 <_dtoa_r+0x2d0>)
 80023ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80023d2:	f7fe f891 	bl	80004f8 <__aeabi_dmul>
 80023d6:	4602      	mov	r2, r0
 80023d8:	460b      	mov	r3, r1
 80023da:	4630      	mov	r0, r6
 80023dc:	4639      	mov	r1, r7
 80023de:	f7fd fed5 	bl	800018c <__adddf3>
 80023e2:	4606      	mov	r6, r0
 80023e4:	460f      	mov	r7, r1
 80023e6:	f7fe fb37 	bl	8000a58 <__aeabi_d2iz>
 80023ea:	2200      	movs	r2, #0
 80023ec:	4683      	mov	fp, r0
 80023ee:	2300      	movs	r3, #0
 80023f0:	4630      	mov	r0, r6
 80023f2:	4639      	mov	r1, r7
 80023f4:	f7fe faf2 	bl	80009dc <__aeabi_dcmplt>
 80023f8:	b148      	cbz	r0, 800240e <_dtoa_r+0x17e>
 80023fa:	4658      	mov	r0, fp
 80023fc:	f7fe f812 	bl	8000424 <__aeabi_i2d>
 8002400:	4632      	mov	r2, r6
 8002402:	463b      	mov	r3, r7
 8002404:	f7fe fae0 	bl	80009c8 <__aeabi_dcmpeq>
 8002408:	b908      	cbnz	r0, 800240e <_dtoa_r+0x17e>
 800240a:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 800240e:	f1bb 0f16 	cmp.w	fp, #22
 8002412:	d857      	bhi.n	80024c4 <_dtoa_r+0x234>
 8002414:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8002418:	4b5a      	ldr	r3, [pc, #360]	; (8002584 <_dtoa_r+0x2f4>)
 800241a:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800241e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002422:	f7fe fadb 	bl	80009dc <__aeabi_dcmplt>
 8002426:	2800      	cmp	r0, #0
 8002428:	d04e      	beq.n	80024c8 <_dtoa_r+0x238>
 800242a:	2300      	movs	r3, #0
 800242c:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8002430:	930f      	str	r3, [sp, #60]	; 0x3c
 8002432:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8002434:	1b1b      	subs	r3, r3, r4
 8002436:	1e5a      	subs	r2, r3, #1
 8002438:	bf46      	itte	mi
 800243a:	f1c3 0901 	rsbmi	r9, r3, #1
 800243e:	2300      	movmi	r3, #0
 8002440:	f04f 0900 	movpl.w	r9, #0
 8002444:	9209      	str	r2, [sp, #36]	; 0x24
 8002446:	bf48      	it	mi
 8002448:	9309      	strmi	r3, [sp, #36]	; 0x24
 800244a:	f1bb 0f00 	cmp.w	fp, #0
 800244e:	db3d      	blt.n	80024cc <_dtoa_r+0x23c>
 8002450:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002452:	f8cd b038 	str.w	fp, [sp, #56]	; 0x38
 8002456:	445b      	add	r3, fp
 8002458:	9309      	str	r3, [sp, #36]	; 0x24
 800245a:	2300      	movs	r3, #0
 800245c:	930a      	str	r3, [sp, #40]	; 0x28
 800245e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002460:	2b09      	cmp	r3, #9
 8002462:	d867      	bhi.n	8002534 <_dtoa_r+0x2a4>
 8002464:	2b05      	cmp	r3, #5
 8002466:	bfc4      	itt	gt
 8002468:	3b04      	subgt	r3, #4
 800246a:	9322      	strgt	r3, [sp, #136]	; 0x88
 800246c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800246e:	bfc8      	it	gt
 8002470:	2400      	movgt	r4, #0
 8002472:	f1a3 0302 	sub.w	r3, r3, #2
 8002476:	bfd8      	it	le
 8002478:	2401      	movle	r4, #1
 800247a:	2b03      	cmp	r3, #3
 800247c:	f200 8086 	bhi.w	800258c <_dtoa_r+0x2fc>
 8002480:	e8df f003 	tbb	[pc, r3]
 8002484:	5637392c 	.word	0x5637392c
 8002488:	e9dd 4316 	ldrd	r4, r3, [sp, #88]	; 0x58
 800248c:	441c      	add	r4, r3
 800248e:	f204 4332 	addw	r3, r4, #1074	; 0x432
 8002492:	2b20      	cmp	r3, #32
 8002494:	bfc1      	itttt	gt
 8002496:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800249a:	fa09 f903 	lslgt.w	r9, r9, r3
 800249e:	f204 4312 	addwgt	r3, r4, #1042	; 0x412
 80024a2:	fa26 f303 	lsrgt.w	r3, r6, r3
 80024a6:	bfd6      	itet	le
 80024a8:	f1c3 0320 	rsble	r3, r3, #32
 80024ac:	ea49 0003 	orrgt.w	r0, r9, r3
 80024b0:	fa06 f003 	lslle.w	r0, r6, r3
 80024b4:	f7fd ffa6 	bl	8000404 <__aeabi_ui2d>
 80024b8:	2201      	movs	r2, #1
 80024ba:	f1a1 73f8 	sub.w	r3, r1, #32505856	; 0x1f00000
 80024be:	3c01      	subs	r4, #1
 80024c0:	9213      	str	r2, [sp, #76]	; 0x4c
 80024c2:	e76f      	b.n	80023a4 <_dtoa_r+0x114>
 80024c4:	2301      	movs	r3, #1
 80024c6:	e7b3      	b.n	8002430 <_dtoa_r+0x1a0>
 80024c8:	900f      	str	r0, [sp, #60]	; 0x3c
 80024ca:	e7b2      	b.n	8002432 <_dtoa_r+0x1a2>
 80024cc:	f1cb 0300 	rsb	r3, fp, #0
 80024d0:	930a      	str	r3, [sp, #40]	; 0x28
 80024d2:	2300      	movs	r3, #0
 80024d4:	eba9 090b 	sub.w	r9, r9, fp
 80024d8:	930e      	str	r3, [sp, #56]	; 0x38
 80024da:	e7c0      	b.n	800245e <_dtoa_r+0x1ce>
 80024dc:	2300      	movs	r3, #0
 80024de:	930b      	str	r3, [sp, #44]	; 0x2c
 80024e0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80024e2:	2b00      	cmp	r3, #0
 80024e4:	dc55      	bgt.n	8002592 <_dtoa_r+0x302>
 80024e6:	2301      	movs	r3, #1
 80024e8:	461a      	mov	r2, r3
 80024ea:	9306      	str	r3, [sp, #24]
 80024ec:	9308      	str	r3, [sp, #32]
 80024ee:	9223      	str	r2, [sp, #140]	; 0x8c
 80024f0:	e00b      	b.n	800250a <_dtoa_r+0x27a>
 80024f2:	2301      	movs	r3, #1
 80024f4:	e7f3      	b.n	80024de <_dtoa_r+0x24e>
 80024f6:	2300      	movs	r3, #0
 80024f8:	930b      	str	r3, [sp, #44]	; 0x2c
 80024fa:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80024fc:	445b      	add	r3, fp
 80024fe:	9306      	str	r3, [sp, #24]
 8002500:	3301      	adds	r3, #1
 8002502:	2b01      	cmp	r3, #1
 8002504:	9308      	str	r3, [sp, #32]
 8002506:	bfb8      	it	lt
 8002508:	2301      	movlt	r3, #1
 800250a:	2100      	movs	r1, #0
 800250c:	2204      	movs	r2, #4
 800250e:	69e8      	ldr	r0, [r5, #28]
 8002510:	f102 0614 	add.w	r6, r2, #20
 8002514:	429e      	cmp	r6, r3
 8002516:	d940      	bls.n	800259a <_dtoa_r+0x30a>
 8002518:	6041      	str	r1, [r0, #4]
 800251a:	4628      	mov	r0, r5
 800251c:	f000 ff52 	bl	80033c4 <_Balloc>
 8002520:	9003      	str	r0, [sp, #12]
 8002522:	2800      	cmp	r0, #0
 8002524:	d13c      	bne.n	80025a0 <_dtoa_r+0x310>
 8002526:	4602      	mov	r2, r0
 8002528:	f240 11af 	movw	r1, #431	; 0x1af
 800252c:	4b16      	ldr	r3, [pc, #88]	; (8002588 <_dtoa_r+0x2f8>)
 800252e:	e6c3      	b.n	80022b8 <_dtoa_r+0x28>
 8002530:	2301      	movs	r3, #1
 8002532:	e7e1      	b.n	80024f8 <_dtoa_r+0x268>
 8002534:	2401      	movs	r4, #1
 8002536:	2300      	movs	r3, #0
 8002538:	940b      	str	r4, [sp, #44]	; 0x2c
 800253a:	9322      	str	r3, [sp, #136]	; 0x88
 800253c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002540:	2200      	movs	r2, #0
 8002542:	9306      	str	r3, [sp, #24]
 8002544:	9308      	str	r3, [sp, #32]
 8002546:	2312      	movs	r3, #18
 8002548:	e7d1      	b.n	80024ee <_dtoa_r+0x25e>
 800254a:	bf00      	nop
 800254c:	f3af 8000 	nop.w
 8002550:	636f4361 	.word	0x636f4361
 8002554:	3fd287a7 	.word	0x3fd287a7
 8002558:	8b60c8b3 	.word	0x8b60c8b3
 800255c:	3fc68a28 	.word	0x3fc68a28
 8002560:	509f79fb 	.word	0x509f79fb
 8002564:	3fd34413 	.word	0x3fd34413
 8002568:	0800442d 	.word	0x0800442d
 800256c:	08004444 	.word	0x08004444
 8002570:	7ff00000 	.word	0x7ff00000
 8002574:	08004429 	.word	0x08004429
 8002578:	08004420 	.word	0x08004420
 800257c:	080043fd 	.word	0x080043fd
 8002580:	3ff80000 	.word	0x3ff80000
 8002584:	08004540 	.word	0x08004540
 8002588:	0800449c 	.word	0x0800449c
 800258c:	2301      	movs	r3, #1
 800258e:	930b      	str	r3, [sp, #44]	; 0x2c
 8002590:	e7d4      	b.n	800253c <_dtoa_r+0x2ac>
 8002592:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8002594:	9306      	str	r3, [sp, #24]
 8002596:	9308      	str	r3, [sp, #32]
 8002598:	e7b7      	b.n	800250a <_dtoa_r+0x27a>
 800259a:	3101      	adds	r1, #1
 800259c:	0052      	lsls	r2, r2, #1
 800259e:	e7b7      	b.n	8002510 <_dtoa_r+0x280>
 80025a0:	69eb      	ldr	r3, [r5, #28]
 80025a2:	9a03      	ldr	r2, [sp, #12]
 80025a4:	601a      	str	r2, [r3, #0]
 80025a6:	9b08      	ldr	r3, [sp, #32]
 80025a8:	2b0e      	cmp	r3, #14
 80025aa:	f200 80a8 	bhi.w	80026fe <_dtoa_r+0x46e>
 80025ae:	2c00      	cmp	r4, #0
 80025b0:	f000 80a5 	beq.w	80026fe <_dtoa_r+0x46e>
 80025b4:	f1bb 0f00 	cmp.w	fp, #0
 80025b8:	dd34      	ble.n	8002624 <_dtoa_r+0x394>
 80025ba:	4b9a      	ldr	r3, [pc, #616]	; (8002824 <_dtoa_r+0x594>)
 80025bc:	f00b 020f 	and.w	r2, fp, #15
 80025c0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80025c4:	f41b 7f80 	tst.w	fp, #256	; 0x100
 80025c8:	e9d3 3400 	ldrd	r3, r4, [r3]
 80025cc:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 80025d0:	ea4f 142b 	mov.w	r4, fp, asr #4
 80025d4:	d016      	beq.n	8002604 <_dtoa_r+0x374>
 80025d6:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80025da:	4b93      	ldr	r3, [pc, #588]	; (8002828 <_dtoa_r+0x598>)
 80025dc:	2703      	movs	r7, #3
 80025de:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80025e2:	f7fe f8b3 	bl	800074c <__aeabi_ddiv>
 80025e6:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80025ea:	f004 040f 	and.w	r4, r4, #15
 80025ee:	4e8e      	ldr	r6, [pc, #568]	; (8002828 <_dtoa_r+0x598>)
 80025f0:	b954      	cbnz	r4, 8002608 <_dtoa_r+0x378>
 80025f2:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 80025f6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80025fa:	f7fe f8a7 	bl	800074c <__aeabi_ddiv>
 80025fe:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002602:	e029      	b.n	8002658 <_dtoa_r+0x3c8>
 8002604:	2702      	movs	r7, #2
 8002606:	e7f2      	b.n	80025ee <_dtoa_r+0x35e>
 8002608:	07e1      	lsls	r1, r4, #31
 800260a:	d508      	bpl.n	800261e <_dtoa_r+0x38e>
 800260c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8002610:	e9d6 2300 	ldrd	r2, r3, [r6]
 8002614:	f7fd ff70 	bl	80004f8 <__aeabi_dmul>
 8002618:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800261c:	3701      	adds	r7, #1
 800261e:	1064      	asrs	r4, r4, #1
 8002620:	3608      	adds	r6, #8
 8002622:	e7e5      	b.n	80025f0 <_dtoa_r+0x360>
 8002624:	f000 80a5 	beq.w	8002772 <_dtoa_r+0x4e2>
 8002628:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800262c:	f1cb 0400 	rsb	r4, fp, #0
 8002630:	4b7c      	ldr	r3, [pc, #496]	; (8002824 <_dtoa_r+0x594>)
 8002632:	f004 020f 	and.w	r2, r4, #15
 8002636:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800263a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800263e:	f7fd ff5b 	bl	80004f8 <__aeabi_dmul>
 8002642:	2702      	movs	r7, #2
 8002644:	2300      	movs	r3, #0
 8002646:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800264a:	4e77      	ldr	r6, [pc, #476]	; (8002828 <_dtoa_r+0x598>)
 800264c:	1124      	asrs	r4, r4, #4
 800264e:	2c00      	cmp	r4, #0
 8002650:	f040 8084 	bne.w	800275c <_dtoa_r+0x4cc>
 8002654:	2b00      	cmp	r3, #0
 8002656:	d1d2      	bne.n	80025fe <_dtoa_r+0x36e>
 8002658:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 800265c:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 8002660:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8002662:	2b00      	cmp	r3, #0
 8002664:	f000 8087 	beq.w	8002776 <_dtoa_r+0x4e6>
 8002668:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800266c:	2200      	movs	r2, #0
 800266e:	4b6f      	ldr	r3, [pc, #444]	; (800282c <_dtoa_r+0x59c>)
 8002670:	f7fe f9b4 	bl	80009dc <__aeabi_dcmplt>
 8002674:	2800      	cmp	r0, #0
 8002676:	d07e      	beq.n	8002776 <_dtoa_r+0x4e6>
 8002678:	9b08      	ldr	r3, [sp, #32]
 800267a:	2b00      	cmp	r3, #0
 800267c:	d07b      	beq.n	8002776 <_dtoa_r+0x4e6>
 800267e:	9b06      	ldr	r3, [sp, #24]
 8002680:	2b00      	cmp	r3, #0
 8002682:	dd38      	ble.n	80026f6 <_dtoa_r+0x466>
 8002684:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8002688:	2200      	movs	r2, #0
 800268a:	4b69      	ldr	r3, [pc, #420]	; (8002830 <_dtoa_r+0x5a0>)
 800268c:	f7fd ff34 	bl	80004f8 <__aeabi_dmul>
 8002690:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002694:	9c06      	ldr	r4, [sp, #24]
 8002696:	f10b 38ff 	add.w	r8, fp, #4294967295	; 0xffffffff
 800269a:	3701      	adds	r7, #1
 800269c:	4638      	mov	r0, r7
 800269e:	f7fd fec1 	bl	8000424 <__aeabi_i2d>
 80026a2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80026a6:	f7fd ff27 	bl	80004f8 <__aeabi_dmul>
 80026aa:	2200      	movs	r2, #0
 80026ac:	4b61      	ldr	r3, [pc, #388]	; (8002834 <_dtoa_r+0x5a4>)
 80026ae:	f7fd fd6d 	bl	800018c <__adddf3>
 80026b2:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 80026b6:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 80026ba:	9611      	str	r6, [sp, #68]	; 0x44
 80026bc:	2c00      	cmp	r4, #0
 80026be:	d15d      	bne.n	800277c <_dtoa_r+0x4ec>
 80026c0:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80026c4:	2200      	movs	r2, #0
 80026c6:	4b5c      	ldr	r3, [pc, #368]	; (8002838 <_dtoa_r+0x5a8>)
 80026c8:	f7fd fd5e 	bl	8000188 <__aeabi_dsub>
 80026cc:	4602      	mov	r2, r0
 80026ce:	460b      	mov	r3, r1
 80026d0:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80026d4:	4633      	mov	r3, r6
 80026d6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80026d8:	f7fe f99e 	bl	8000a18 <__aeabi_dcmpgt>
 80026dc:	2800      	cmp	r0, #0
 80026de:	f040 8295 	bne.w	8002c0c <_dtoa_r+0x97c>
 80026e2:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80026e6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80026e8:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 80026ec:	f7fe f976 	bl	80009dc <__aeabi_dcmplt>
 80026f0:	2800      	cmp	r0, #0
 80026f2:	f040 8289 	bne.w	8002c08 <_dtoa_r+0x978>
 80026f6:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	; 0x30
 80026fa:	e9cd 3404 	strd	r3, r4, [sp, #16]
 80026fe:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8002700:	2b00      	cmp	r3, #0
 8002702:	f2c0 8151 	blt.w	80029a8 <_dtoa_r+0x718>
 8002706:	f1bb 0f0e 	cmp.w	fp, #14
 800270a:	f300 814d 	bgt.w	80029a8 <_dtoa_r+0x718>
 800270e:	4b45      	ldr	r3, [pc, #276]	; (8002824 <_dtoa_r+0x594>)
 8002710:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8002714:	e9d3 3400 	ldrd	r3, r4, [r3]
 8002718:	e9cd 3406 	strd	r3, r4, [sp, #24]
 800271c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800271e:	2b00      	cmp	r3, #0
 8002720:	f280 80da 	bge.w	80028d8 <_dtoa_r+0x648>
 8002724:	9b08      	ldr	r3, [sp, #32]
 8002726:	2b00      	cmp	r3, #0
 8002728:	f300 80d6 	bgt.w	80028d8 <_dtoa_r+0x648>
 800272c:	f040 826b 	bne.w	8002c06 <_dtoa_r+0x976>
 8002730:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8002734:	2200      	movs	r2, #0
 8002736:	4b40      	ldr	r3, [pc, #256]	; (8002838 <_dtoa_r+0x5a8>)
 8002738:	f7fd fede 	bl	80004f8 <__aeabi_dmul>
 800273c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002740:	f7fe f960 	bl	8000a04 <__aeabi_dcmpge>
 8002744:	9c08      	ldr	r4, [sp, #32]
 8002746:	4626      	mov	r6, r4
 8002748:	2800      	cmp	r0, #0
 800274a:	f040 8241 	bne.w	8002bd0 <_dtoa_r+0x940>
 800274e:	2331      	movs	r3, #49	; 0x31
 8002750:	9f03      	ldr	r7, [sp, #12]
 8002752:	f10b 0b01 	add.w	fp, fp, #1
 8002756:	f807 3b01 	strb.w	r3, [r7], #1
 800275a:	e23d      	b.n	8002bd8 <_dtoa_r+0x948>
 800275c:	07e2      	lsls	r2, r4, #31
 800275e:	d505      	bpl.n	800276c <_dtoa_r+0x4dc>
 8002760:	e9d6 2300 	ldrd	r2, r3, [r6]
 8002764:	f7fd fec8 	bl	80004f8 <__aeabi_dmul>
 8002768:	2301      	movs	r3, #1
 800276a:	3701      	adds	r7, #1
 800276c:	1064      	asrs	r4, r4, #1
 800276e:	3608      	adds	r6, #8
 8002770:	e76d      	b.n	800264e <_dtoa_r+0x3be>
 8002772:	2702      	movs	r7, #2
 8002774:	e770      	b.n	8002658 <_dtoa_r+0x3c8>
 8002776:	46d8      	mov	r8, fp
 8002778:	9c08      	ldr	r4, [sp, #32]
 800277a:	e78f      	b.n	800269c <_dtoa_r+0x40c>
 800277c:	9903      	ldr	r1, [sp, #12]
 800277e:	4b29      	ldr	r3, [pc, #164]	; (8002824 <_dtoa_r+0x594>)
 8002780:	4421      	add	r1, r4
 8002782:	9112      	str	r1, [sp, #72]	; 0x48
 8002784:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8002786:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800278a:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 800278e:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8002792:	2900      	cmp	r1, #0
 8002794:	d054      	beq.n	8002840 <_dtoa_r+0x5b0>
 8002796:	2000      	movs	r0, #0
 8002798:	4928      	ldr	r1, [pc, #160]	; (800283c <_dtoa_r+0x5ac>)
 800279a:	f7fd ffd7 	bl	800074c <__aeabi_ddiv>
 800279e:	463b      	mov	r3, r7
 80027a0:	4632      	mov	r2, r6
 80027a2:	f7fd fcf1 	bl	8000188 <__aeabi_dsub>
 80027a6:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 80027aa:	9f03      	ldr	r7, [sp, #12]
 80027ac:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80027b0:	f7fe f952 	bl	8000a58 <__aeabi_d2iz>
 80027b4:	4604      	mov	r4, r0
 80027b6:	f7fd fe35 	bl	8000424 <__aeabi_i2d>
 80027ba:	4602      	mov	r2, r0
 80027bc:	460b      	mov	r3, r1
 80027be:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80027c2:	f7fd fce1 	bl	8000188 <__aeabi_dsub>
 80027c6:	4602      	mov	r2, r0
 80027c8:	460b      	mov	r3, r1
 80027ca:	3430      	adds	r4, #48	; 0x30
 80027cc:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80027d0:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 80027d4:	f807 4b01 	strb.w	r4, [r7], #1
 80027d8:	f7fe f900 	bl	80009dc <__aeabi_dcmplt>
 80027dc:	2800      	cmp	r0, #0
 80027de:	d173      	bne.n	80028c8 <_dtoa_r+0x638>
 80027e0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80027e4:	2000      	movs	r0, #0
 80027e6:	4911      	ldr	r1, [pc, #68]	; (800282c <_dtoa_r+0x59c>)
 80027e8:	f7fd fcce 	bl	8000188 <__aeabi_dsub>
 80027ec:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 80027f0:	f7fe f8f4 	bl	80009dc <__aeabi_dcmplt>
 80027f4:	2800      	cmp	r0, #0
 80027f6:	f040 80b6 	bne.w	8002966 <_dtoa_r+0x6d6>
 80027fa:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80027fc:	429f      	cmp	r7, r3
 80027fe:	f43f af7a 	beq.w	80026f6 <_dtoa_r+0x466>
 8002802:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8002806:	2200      	movs	r2, #0
 8002808:	4b09      	ldr	r3, [pc, #36]	; (8002830 <_dtoa_r+0x5a0>)
 800280a:	f7fd fe75 	bl	80004f8 <__aeabi_dmul>
 800280e:	2200      	movs	r2, #0
 8002810:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8002814:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002818:	4b05      	ldr	r3, [pc, #20]	; (8002830 <_dtoa_r+0x5a0>)
 800281a:	f7fd fe6d 	bl	80004f8 <__aeabi_dmul>
 800281e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002822:	e7c3      	b.n	80027ac <_dtoa_r+0x51c>
 8002824:	08004540 	.word	0x08004540
 8002828:	08004518 	.word	0x08004518
 800282c:	3ff00000 	.word	0x3ff00000
 8002830:	40240000 	.word	0x40240000
 8002834:	401c0000 	.word	0x401c0000
 8002838:	40140000 	.word	0x40140000
 800283c:	3fe00000 	.word	0x3fe00000
 8002840:	4630      	mov	r0, r6
 8002842:	4639      	mov	r1, r7
 8002844:	f7fd fe58 	bl	80004f8 <__aeabi_dmul>
 8002848:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800284a:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800284e:	9c03      	ldr	r4, [sp, #12]
 8002850:	9314      	str	r3, [sp, #80]	; 0x50
 8002852:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002856:	f7fe f8ff 	bl	8000a58 <__aeabi_d2iz>
 800285a:	9015      	str	r0, [sp, #84]	; 0x54
 800285c:	f7fd fde2 	bl	8000424 <__aeabi_i2d>
 8002860:	4602      	mov	r2, r0
 8002862:	460b      	mov	r3, r1
 8002864:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002868:	f7fd fc8e 	bl	8000188 <__aeabi_dsub>
 800286c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800286e:	4606      	mov	r6, r0
 8002870:	3330      	adds	r3, #48	; 0x30
 8002872:	f804 3b01 	strb.w	r3, [r4], #1
 8002876:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002878:	460f      	mov	r7, r1
 800287a:	429c      	cmp	r4, r3
 800287c:	f04f 0200 	mov.w	r2, #0
 8002880:	d124      	bne.n	80028cc <_dtoa_r+0x63c>
 8002882:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8002886:	4baf      	ldr	r3, [pc, #700]	; (8002b44 <_dtoa_r+0x8b4>)
 8002888:	f7fd fc80 	bl	800018c <__adddf3>
 800288c:	4602      	mov	r2, r0
 800288e:	460b      	mov	r3, r1
 8002890:	4630      	mov	r0, r6
 8002892:	4639      	mov	r1, r7
 8002894:	f7fe f8c0 	bl	8000a18 <__aeabi_dcmpgt>
 8002898:	2800      	cmp	r0, #0
 800289a:	d163      	bne.n	8002964 <_dtoa_r+0x6d4>
 800289c:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 80028a0:	2000      	movs	r0, #0
 80028a2:	49a8      	ldr	r1, [pc, #672]	; (8002b44 <_dtoa_r+0x8b4>)
 80028a4:	f7fd fc70 	bl	8000188 <__aeabi_dsub>
 80028a8:	4602      	mov	r2, r0
 80028aa:	460b      	mov	r3, r1
 80028ac:	4630      	mov	r0, r6
 80028ae:	4639      	mov	r1, r7
 80028b0:	f7fe f894 	bl	80009dc <__aeabi_dcmplt>
 80028b4:	2800      	cmp	r0, #0
 80028b6:	f43f af1e 	beq.w	80026f6 <_dtoa_r+0x466>
 80028ba:	9f14      	ldr	r7, [sp, #80]	; 0x50
 80028bc:	1e7b      	subs	r3, r7, #1
 80028be:	9314      	str	r3, [sp, #80]	; 0x50
 80028c0:	f817 3c01 	ldrb.w	r3, [r7, #-1]
 80028c4:	2b30      	cmp	r3, #48	; 0x30
 80028c6:	d0f8      	beq.n	80028ba <_dtoa_r+0x62a>
 80028c8:	46c3      	mov	fp, r8
 80028ca:	e03b      	b.n	8002944 <_dtoa_r+0x6b4>
 80028cc:	4b9e      	ldr	r3, [pc, #632]	; (8002b48 <_dtoa_r+0x8b8>)
 80028ce:	f7fd fe13 	bl	80004f8 <__aeabi_dmul>
 80028d2:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80028d6:	e7bc      	b.n	8002852 <_dtoa_r+0x5c2>
 80028d8:	9f03      	ldr	r7, [sp, #12]
 80028da:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 80028de:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80028e2:	4640      	mov	r0, r8
 80028e4:	4649      	mov	r1, r9
 80028e6:	f7fd ff31 	bl	800074c <__aeabi_ddiv>
 80028ea:	f7fe f8b5 	bl	8000a58 <__aeabi_d2iz>
 80028ee:	4604      	mov	r4, r0
 80028f0:	f7fd fd98 	bl	8000424 <__aeabi_i2d>
 80028f4:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80028f8:	f7fd fdfe 	bl	80004f8 <__aeabi_dmul>
 80028fc:	4602      	mov	r2, r0
 80028fe:	460b      	mov	r3, r1
 8002900:	4640      	mov	r0, r8
 8002902:	4649      	mov	r1, r9
 8002904:	f7fd fc40 	bl	8000188 <__aeabi_dsub>
 8002908:	f104 0630 	add.w	r6, r4, #48	; 0x30
 800290c:	f807 6b01 	strb.w	r6, [r7], #1
 8002910:	9e03      	ldr	r6, [sp, #12]
 8002912:	f8dd c020 	ldr.w	ip, [sp, #32]
 8002916:	1bbe      	subs	r6, r7, r6
 8002918:	45b4      	cmp	ip, r6
 800291a:	4602      	mov	r2, r0
 800291c:	460b      	mov	r3, r1
 800291e:	d136      	bne.n	800298e <_dtoa_r+0x6fe>
 8002920:	f7fd fc34 	bl	800018c <__adddf3>
 8002924:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8002928:	4680      	mov	r8, r0
 800292a:	4689      	mov	r9, r1
 800292c:	f7fe f874 	bl	8000a18 <__aeabi_dcmpgt>
 8002930:	bb58      	cbnz	r0, 800298a <_dtoa_r+0x6fa>
 8002932:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8002936:	4640      	mov	r0, r8
 8002938:	4649      	mov	r1, r9
 800293a:	f7fe f845 	bl	80009c8 <__aeabi_dcmpeq>
 800293e:	b108      	cbz	r0, 8002944 <_dtoa_r+0x6b4>
 8002940:	07e3      	lsls	r3, r4, #31
 8002942:	d422      	bmi.n	800298a <_dtoa_r+0x6fa>
 8002944:	4651      	mov	r1, sl
 8002946:	4628      	mov	r0, r5
 8002948:	f000 fd7c 	bl	8003444 <_Bfree>
 800294c:	2300      	movs	r3, #0
 800294e:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8002950:	703b      	strb	r3, [r7, #0]
 8002952:	f10b 0301 	add.w	r3, fp, #1
 8002956:	6013      	str	r3, [r2, #0]
 8002958:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800295a:	2b00      	cmp	r3, #0
 800295c:	f43f ace6 	beq.w	800232c <_dtoa_r+0x9c>
 8002960:	601f      	str	r7, [r3, #0]
 8002962:	e4e3      	b.n	800232c <_dtoa_r+0x9c>
 8002964:	4627      	mov	r7, r4
 8002966:	463b      	mov	r3, r7
 8002968:	461f      	mov	r7, r3
 800296a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800296e:	2a39      	cmp	r2, #57	; 0x39
 8002970:	d107      	bne.n	8002982 <_dtoa_r+0x6f2>
 8002972:	9a03      	ldr	r2, [sp, #12]
 8002974:	429a      	cmp	r2, r3
 8002976:	d1f7      	bne.n	8002968 <_dtoa_r+0x6d8>
 8002978:	2230      	movs	r2, #48	; 0x30
 800297a:	9903      	ldr	r1, [sp, #12]
 800297c:	f108 0801 	add.w	r8, r8, #1
 8002980:	700a      	strb	r2, [r1, #0]
 8002982:	781a      	ldrb	r2, [r3, #0]
 8002984:	3201      	adds	r2, #1
 8002986:	701a      	strb	r2, [r3, #0]
 8002988:	e79e      	b.n	80028c8 <_dtoa_r+0x638>
 800298a:	46d8      	mov	r8, fp
 800298c:	e7eb      	b.n	8002966 <_dtoa_r+0x6d6>
 800298e:	2200      	movs	r2, #0
 8002990:	4b6d      	ldr	r3, [pc, #436]	; (8002b48 <_dtoa_r+0x8b8>)
 8002992:	f7fd fdb1 	bl	80004f8 <__aeabi_dmul>
 8002996:	2200      	movs	r2, #0
 8002998:	2300      	movs	r3, #0
 800299a:	4680      	mov	r8, r0
 800299c:	4689      	mov	r9, r1
 800299e:	f7fe f813 	bl	80009c8 <__aeabi_dcmpeq>
 80029a2:	2800      	cmp	r0, #0
 80029a4:	d09b      	beq.n	80028de <_dtoa_r+0x64e>
 80029a6:	e7cd      	b.n	8002944 <_dtoa_r+0x6b4>
 80029a8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80029aa:	2a00      	cmp	r2, #0
 80029ac:	f000 80c4 	beq.w	8002b38 <_dtoa_r+0x8a8>
 80029b0:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80029b2:	2a01      	cmp	r2, #1
 80029b4:	f300 80a8 	bgt.w	8002b08 <_dtoa_r+0x878>
 80029b8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80029ba:	2a00      	cmp	r2, #0
 80029bc:	f000 80a0 	beq.w	8002b00 <_dtoa_r+0x870>
 80029c0:	f203 4333 	addw	r3, r3, #1075	; 0x433
 80029c4:	464f      	mov	r7, r9
 80029c6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80029c8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80029ca:	2101      	movs	r1, #1
 80029cc:	441a      	add	r2, r3
 80029ce:	4628      	mov	r0, r5
 80029d0:	4499      	add	r9, r3
 80029d2:	9209      	str	r2, [sp, #36]	; 0x24
 80029d4:	f000 fdec 	bl	80035b0 <__i2b>
 80029d8:	4606      	mov	r6, r0
 80029da:	b15f      	cbz	r7, 80029f4 <_dtoa_r+0x764>
 80029dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80029de:	2b00      	cmp	r3, #0
 80029e0:	dd08      	ble.n	80029f4 <_dtoa_r+0x764>
 80029e2:	42bb      	cmp	r3, r7
 80029e4:	bfa8      	it	ge
 80029e6:	463b      	movge	r3, r7
 80029e8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80029ea:	eba9 0903 	sub.w	r9, r9, r3
 80029ee:	1aff      	subs	r7, r7, r3
 80029f0:	1ad3      	subs	r3, r2, r3
 80029f2:	9309      	str	r3, [sp, #36]	; 0x24
 80029f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80029f6:	b1f3      	cbz	r3, 8002a36 <_dtoa_r+0x7a6>
 80029f8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80029fa:	2b00      	cmp	r3, #0
 80029fc:	f000 80a0 	beq.w	8002b40 <_dtoa_r+0x8b0>
 8002a00:	2c00      	cmp	r4, #0
 8002a02:	dd10      	ble.n	8002a26 <_dtoa_r+0x796>
 8002a04:	4631      	mov	r1, r6
 8002a06:	4622      	mov	r2, r4
 8002a08:	4628      	mov	r0, r5
 8002a0a:	f000 fe8f 	bl	800372c <__pow5mult>
 8002a0e:	4652      	mov	r2, sl
 8002a10:	4601      	mov	r1, r0
 8002a12:	4606      	mov	r6, r0
 8002a14:	4628      	mov	r0, r5
 8002a16:	f000 fde1 	bl	80035dc <__multiply>
 8002a1a:	4680      	mov	r8, r0
 8002a1c:	4651      	mov	r1, sl
 8002a1e:	4628      	mov	r0, r5
 8002a20:	f000 fd10 	bl	8003444 <_Bfree>
 8002a24:	46c2      	mov	sl, r8
 8002a26:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002a28:	1b1a      	subs	r2, r3, r4
 8002a2a:	d004      	beq.n	8002a36 <_dtoa_r+0x7a6>
 8002a2c:	4651      	mov	r1, sl
 8002a2e:	4628      	mov	r0, r5
 8002a30:	f000 fe7c 	bl	800372c <__pow5mult>
 8002a34:	4682      	mov	sl, r0
 8002a36:	2101      	movs	r1, #1
 8002a38:	4628      	mov	r0, r5
 8002a3a:	f000 fdb9 	bl	80035b0 <__i2b>
 8002a3e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002a40:	4604      	mov	r4, r0
 8002a42:	2b00      	cmp	r3, #0
 8002a44:	f340 8082 	ble.w	8002b4c <_dtoa_r+0x8bc>
 8002a48:	461a      	mov	r2, r3
 8002a4a:	4601      	mov	r1, r0
 8002a4c:	4628      	mov	r0, r5
 8002a4e:	f000 fe6d 	bl	800372c <__pow5mult>
 8002a52:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002a54:	4604      	mov	r4, r0
 8002a56:	2b01      	cmp	r3, #1
 8002a58:	dd7b      	ble.n	8002b52 <_dtoa_r+0x8c2>
 8002a5a:	f04f 0800 	mov.w	r8, #0
 8002a5e:	6923      	ldr	r3, [r4, #16]
 8002a60:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8002a64:	6918      	ldr	r0, [r3, #16]
 8002a66:	f000 fd55 	bl	8003514 <__hi0bits>
 8002a6a:	f1c0 0020 	rsb	r0, r0, #32
 8002a6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002a70:	4418      	add	r0, r3
 8002a72:	f010 001f 	ands.w	r0, r0, #31
 8002a76:	f000 8092 	beq.w	8002b9e <_dtoa_r+0x90e>
 8002a7a:	f1c0 0320 	rsb	r3, r0, #32
 8002a7e:	2b04      	cmp	r3, #4
 8002a80:	f340 8085 	ble.w	8002b8e <_dtoa_r+0x8fe>
 8002a84:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002a86:	f1c0 001c 	rsb	r0, r0, #28
 8002a8a:	4403      	add	r3, r0
 8002a8c:	4481      	add	r9, r0
 8002a8e:	4407      	add	r7, r0
 8002a90:	9309      	str	r3, [sp, #36]	; 0x24
 8002a92:	f1b9 0f00 	cmp.w	r9, #0
 8002a96:	dd05      	ble.n	8002aa4 <_dtoa_r+0x814>
 8002a98:	4651      	mov	r1, sl
 8002a9a:	464a      	mov	r2, r9
 8002a9c:	4628      	mov	r0, r5
 8002a9e:	f000 fe9f 	bl	80037e0 <__lshift>
 8002aa2:	4682      	mov	sl, r0
 8002aa4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002aa6:	2b00      	cmp	r3, #0
 8002aa8:	dd05      	ble.n	8002ab6 <_dtoa_r+0x826>
 8002aaa:	4621      	mov	r1, r4
 8002aac:	461a      	mov	r2, r3
 8002aae:	4628      	mov	r0, r5
 8002ab0:	f000 fe96 	bl	80037e0 <__lshift>
 8002ab4:	4604      	mov	r4, r0
 8002ab6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8002ab8:	2b00      	cmp	r3, #0
 8002aba:	d072      	beq.n	8002ba2 <_dtoa_r+0x912>
 8002abc:	4621      	mov	r1, r4
 8002abe:	4650      	mov	r0, sl
 8002ac0:	f000 fefa 	bl	80038b8 <__mcmp>
 8002ac4:	2800      	cmp	r0, #0
 8002ac6:	da6c      	bge.n	8002ba2 <_dtoa_r+0x912>
 8002ac8:	2300      	movs	r3, #0
 8002aca:	4651      	mov	r1, sl
 8002acc:	220a      	movs	r2, #10
 8002ace:	4628      	mov	r0, r5
 8002ad0:	f000 fcda 	bl	8003488 <__multadd>
 8002ad4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002ad6:	4682      	mov	sl, r0
 8002ad8:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8002adc:	2b00      	cmp	r3, #0
 8002ade:	f000 81ac 	beq.w	8002e3a <_dtoa_r+0xbaa>
 8002ae2:	2300      	movs	r3, #0
 8002ae4:	4631      	mov	r1, r6
 8002ae6:	220a      	movs	r2, #10
 8002ae8:	4628      	mov	r0, r5
 8002aea:	f000 fccd 	bl	8003488 <__multadd>
 8002aee:	9b06      	ldr	r3, [sp, #24]
 8002af0:	4606      	mov	r6, r0
 8002af2:	2b00      	cmp	r3, #0
 8002af4:	f300 8093 	bgt.w	8002c1e <_dtoa_r+0x98e>
 8002af8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002afa:	2b02      	cmp	r3, #2
 8002afc:	dc59      	bgt.n	8002bb2 <_dtoa_r+0x922>
 8002afe:	e08e      	b.n	8002c1e <_dtoa_r+0x98e>
 8002b00:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8002b02:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8002b06:	e75d      	b.n	80029c4 <_dtoa_r+0x734>
 8002b08:	9b08      	ldr	r3, [sp, #32]
 8002b0a:	1e5c      	subs	r4, r3, #1
 8002b0c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002b0e:	42a3      	cmp	r3, r4
 8002b10:	bfbf      	itttt	lt
 8002b12:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 8002b14:	9a0e      	ldrlt	r2, [sp, #56]	; 0x38
 8002b16:	1ae3      	sublt	r3, r4, r3
 8002b18:	18d2      	addlt	r2, r2, r3
 8002b1a:	bfa8      	it	ge
 8002b1c:	1b1c      	subge	r4, r3, r4
 8002b1e:	9b08      	ldr	r3, [sp, #32]
 8002b20:	bfbe      	ittt	lt
 8002b22:	940a      	strlt	r4, [sp, #40]	; 0x28
 8002b24:	920e      	strlt	r2, [sp, #56]	; 0x38
 8002b26:	2400      	movlt	r4, #0
 8002b28:	2b00      	cmp	r3, #0
 8002b2a:	bfb5      	itete	lt
 8002b2c:	eba9 0703 	sublt.w	r7, r9, r3
 8002b30:	464f      	movge	r7, r9
 8002b32:	2300      	movlt	r3, #0
 8002b34:	9b08      	ldrge	r3, [sp, #32]
 8002b36:	e747      	b.n	80029c8 <_dtoa_r+0x738>
 8002b38:	464f      	mov	r7, r9
 8002b3a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8002b3c:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8002b3e:	e74c      	b.n	80029da <_dtoa_r+0x74a>
 8002b40:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002b42:	e773      	b.n	8002a2c <_dtoa_r+0x79c>
 8002b44:	3fe00000 	.word	0x3fe00000
 8002b48:	40240000 	.word	0x40240000
 8002b4c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002b4e:	2b01      	cmp	r3, #1
 8002b50:	dc18      	bgt.n	8002b84 <_dtoa_r+0x8f4>
 8002b52:	9b04      	ldr	r3, [sp, #16]
 8002b54:	b9b3      	cbnz	r3, 8002b84 <_dtoa_r+0x8f4>
 8002b56:	9b05      	ldr	r3, [sp, #20]
 8002b58:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002b5c:	b993      	cbnz	r3, 8002b84 <_dtoa_r+0x8f4>
 8002b5e:	9b05      	ldr	r3, [sp, #20]
 8002b60:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8002b64:	0d1b      	lsrs	r3, r3, #20
 8002b66:	051b      	lsls	r3, r3, #20
 8002b68:	b17b      	cbz	r3, 8002b8a <_dtoa_r+0x8fa>
 8002b6a:	f04f 0801 	mov.w	r8, #1
 8002b6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002b70:	f109 0901 	add.w	r9, r9, #1
 8002b74:	3301      	adds	r3, #1
 8002b76:	9309      	str	r3, [sp, #36]	; 0x24
 8002b78:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002b7a:	2b00      	cmp	r3, #0
 8002b7c:	f47f af6f 	bne.w	8002a5e <_dtoa_r+0x7ce>
 8002b80:	2001      	movs	r0, #1
 8002b82:	e774      	b.n	8002a6e <_dtoa_r+0x7de>
 8002b84:	f04f 0800 	mov.w	r8, #0
 8002b88:	e7f6      	b.n	8002b78 <_dtoa_r+0x8e8>
 8002b8a:	4698      	mov	r8, r3
 8002b8c:	e7f4      	b.n	8002b78 <_dtoa_r+0x8e8>
 8002b8e:	d080      	beq.n	8002a92 <_dtoa_r+0x802>
 8002b90:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002b92:	331c      	adds	r3, #28
 8002b94:	441a      	add	r2, r3
 8002b96:	4499      	add	r9, r3
 8002b98:	441f      	add	r7, r3
 8002b9a:	9209      	str	r2, [sp, #36]	; 0x24
 8002b9c:	e779      	b.n	8002a92 <_dtoa_r+0x802>
 8002b9e:	4603      	mov	r3, r0
 8002ba0:	e7f6      	b.n	8002b90 <_dtoa_r+0x900>
 8002ba2:	9b08      	ldr	r3, [sp, #32]
 8002ba4:	2b00      	cmp	r3, #0
 8002ba6:	dc34      	bgt.n	8002c12 <_dtoa_r+0x982>
 8002ba8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002baa:	2b02      	cmp	r3, #2
 8002bac:	dd31      	ble.n	8002c12 <_dtoa_r+0x982>
 8002bae:	9b08      	ldr	r3, [sp, #32]
 8002bb0:	9306      	str	r3, [sp, #24]
 8002bb2:	9b06      	ldr	r3, [sp, #24]
 8002bb4:	b963      	cbnz	r3, 8002bd0 <_dtoa_r+0x940>
 8002bb6:	4621      	mov	r1, r4
 8002bb8:	2205      	movs	r2, #5
 8002bba:	4628      	mov	r0, r5
 8002bbc:	f000 fc64 	bl	8003488 <__multadd>
 8002bc0:	4601      	mov	r1, r0
 8002bc2:	4604      	mov	r4, r0
 8002bc4:	4650      	mov	r0, sl
 8002bc6:	f000 fe77 	bl	80038b8 <__mcmp>
 8002bca:	2800      	cmp	r0, #0
 8002bcc:	f73f adbf 	bgt.w	800274e <_dtoa_r+0x4be>
 8002bd0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8002bd2:	9f03      	ldr	r7, [sp, #12]
 8002bd4:	ea6f 0b03 	mvn.w	fp, r3
 8002bd8:	f04f 0800 	mov.w	r8, #0
 8002bdc:	4621      	mov	r1, r4
 8002bde:	4628      	mov	r0, r5
 8002be0:	f000 fc30 	bl	8003444 <_Bfree>
 8002be4:	2e00      	cmp	r6, #0
 8002be6:	f43f aead 	beq.w	8002944 <_dtoa_r+0x6b4>
 8002bea:	f1b8 0f00 	cmp.w	r8, #0
 8002bee:	d005      	beq.n	8002bfc <_dtoa_r+0x96c>
 8002bf0:	45b0      	cmp	r8, r6
 8002bf2:	d003      	beq.n	8002bfc <_dtoa_r+0x96c>
 8002bf4:	4641      	mov	r1, r8
 8002bf6:	4628      	mov	r0, r5
 8002bf8:	f000 fc24 	bl	8003444 <_Bfree>
 8002bfc:	4631      	mov	r1, r6
 8002bfe:	4628      	mov	r0, r5
 8002c00:	f000 fc20 	bl	8003444 <_Bfree>
 8002c04:	e69e      	b.n	8002944 <_dtoa_r+0x6b4>
 8002c06:	2400      	movs	r4, #0
 8002c08:	4626      	mov	r6, r4
 8002c0a:	e7e1      	b.n	8002bd0 <_dtoa_r+0x940>
 8002c0c:	46c3      	mov	fp, r8
 8002c0e:	4626      	mov	r6, r4
 8002c10:	e59d      	b.n	800274e <_dtoa_r+0x4be>
 8002c12:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002c14:	2b00      	cmp	r3, #0
 8002c16:	f000 80c8 	beq.w	8002daa <_dtoa_r+0xb1a>
 8002c1a:	9b08      	ldr	r3, [sp, #32]
 8002c1c:	9306      	str	r3, [sp, #24]
 8002c1e:	2f00      	cmp	r7, #0
 8002c20:	dd05      	ble.n	8002c2e <_dtoa_r+0x99e>
 8002c22:	4631      	mov	r1, r6
 8002c24:	463a      	mov	r2, r7
 8002c26:	4628      	mov	r0, r5
 8002c28:	f000 fdda 	bl	80037e0 <__lshift>
 8002c2c:	4606      	mov	r6, r0
 8002c2e:	f1b8 0f00 	cmp.w	r8, #0
 8002c32:	d05b      	beq.n	8002cec <_dtoa_r+0xa5c>
 8002c34:	4628      	mov	r0, r5
 8002c36:	6871      	ldr	r1, [r6, #4]
 8002c38:	f000 fbc4 	bl	80033c4 <_Balloc>
 8002c3c:	4607      	mov	r7, r0
 8002c3e:	b928      	cbnz	r0, 8002c4c <_dtoa_r+0x9bc>
 8002c40:	4602      	mov	r2, r0
 8002c42:	f240 21ef 	movw	r1, #751	; 0x2ef
 8002c46:	4b81      	ldr	r3, [pc, #516]	; (8002e4c <_dtoa_r+0xbbc>)
 8002c48:	f7ff bb36 	b.w	80022b8 <_dtoa_r+0x28>
 8002c4c:	6932      	ldr	r2, [r6, #16]
 8002c4e:	f106 010c 	add.w	r1, r6, #12
 8002c52:	3202      	adds	r2, #2
 8002c54:	0092      	lsls	r2, r2, #2
 8002c56:	300c      	adds	r0, #12
 8002c58:	f001 f80e 	bl	8003c78 <memcpy>
 8002c5c:	2201      	movs	r2, #1
 8002c5e:	4639      	mov	r1, r7
 8002c60:	4628      	mov	r0, r5
 8002c62:	f000 fdbd 	bl	80037e0 <__lshift>
 8002c66:	46b0      	mov	r8, r6
 8002c68:	4606      	mov	r6, r0
 8002c6a:	9b03      	ldr	r3, [sp, #12]
 8002c6c:	9a03      	ldr	r2, [sp, #12]
 8002c6e:	3301      	adds	r3, #1
 8002c70:	9308      	str	r3, [sp, #32]
 8002c72:	9b06      	ldr	r3, [sp, #24]
 8002c74:	4413      	add	r3, r2
 8002c76:	930b      	str	r3, [sp, #44]	; 0x2c
 8002c78:	9b04      	ldr	r3, [sp, #16]
 8002c7a:	f003 0301 	and.w	r3, r3, #1
 8002c7e:	930a      	str	r3, [sp, #40]	; 0x28
 8002c80:	9b08      	ldr	r3, [sp, #32]
 8002c82:	4621      	mov	r1, r4
 8002c84:	3b01      	subs	r3, #1
 8002c86:	4650      	mov	r0, sl
 8002c88:	9304      	str	r3, [sp, #16]
 8002c8a:	f7ff fa76 	bl	800217a <quorem>
 8002c8e:	4641      	mov	r1, r8
 8002c90:	9006      	str	r0, [sp, #24]
 8002c92:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8002c96:	4650      	mov	r0, sl
 8002c98:	f000 fe0e 	bl	80038b8 <__mcmp>
 8002c9c:	4632      	mov	r2, r6
 8002c9e:	9009      	str	r0, [sp, #36]	; 0x24
 8002ca0:	4621      	mov	r1, r4
 8002ca2:	4628      	mov	r0, r5
 8002ca4:	f000 fe24 	bl	80038f0 <__mdiff>
 8002ca8:	68c2      	ldr	r2, [r0, #12]
 8002caa:	4607      	mov	r7, r0
 8002cac:	bb02      	cbnz	r2, 8002cf0 <_dtoa_r+0xa60>
 8002cae:	4601      	mov	r1, r0
 8002cb0:	4650      	mov	r0, sl
 8002cb2:	f000 fe01 	bl	80038b8 <__mcmp>
 8002cb6:	4602      	mov	r2, r0
 8002cb8:	4639      	mov	r1, r7
 8002cba:	4628      	mov	r0, r5
 8002cbc:	920c      	str	r2, [sp, #48]	; 0x30
 8002cbe:	f000 fbc1 	bl	8003444 <_Bfree>
 8002cc2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002cc4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8002cc6:	9f08      	ldr	r7, [sp, #32]
 8002cc8:	ea43 0102 	orr.w	r1, r3, r2
 8002ccc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002cce:	4319      	orrs	r1, r3
 8002cd0:	d110      	bne.n	8002cf4 <_dtoa_r+0xa64>
 8002cd2:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8002cd6:	d029      	beq.n	8002d2c <_dtoa_r+0xa9c>
 8002cd8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002cda:	2b00      	cmp	r3, #0
 8002cdc:	dd02      	ble.n	8002ce4 <_dtoa_r+0xa54>
 8002cde:	9b06      	ldr	r3, [sp, #24]
 8002ce0:	f103 0931 	add.w	r9, r3, #49	; 0x31
 8002ce4:	9b04      	ldr	r3, [sp, #16]
 8002ce6:	f883 9000 	strb.w	r9, [r3]
 8002cea:	e777      	b.n	8002bdc <_dtoa_r+0x94c>
 8002cec:	4630      	mov	r0, r6
 8002cee:	e7ba      	b.n	8002c66 <_dtoa_r+0x9d6>
 8002cf0:	2201      	movs	r2, #1
 8002cf2:	e7e1      	b.n	8002cb8 <_dtoa_r+0xa28>
 8002cf4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002cf6:	2b00      	cmp	r3, #0
 8002cf8:	db04      	blt.n	8002d04 <_dtoa_r+0xa74>
 8002cfa:	9922      	ldr	r1, [sp, #136]	; 0x88
 8002cfc:	430b      	orrs	r3, r1
 8002cfe:	990a      	ldr	r1, [sp, #40]	; 0x28
 8002d00:	430b      	orrs	r3, r1
 8002d02:	d120      	bne.n	8002d46 <_dtoa_r+0xab6>
 8002d04:	2a00      	cmp	r2, #0
 8002d06:	dded      	ble.n	8002ce4 <_dtoa_r+0xa54>
 8002d08:	4651      	mov	r1, sl
 8002d0a:	2201      	movs	r2, #1
 8002d0c:	4628      	mov	r0, r5
 8002d0e:	f000 fd67 	bl	80037e0 <__lshift>
 8002d12:	4621      	mov	r1, r4
 8002d14:	4682      	mov	sl, r0
 8002d16:	f000 fdcf 	bl	80038b8 <__mcmp>
 8002d1a:	2800      	cmp	r0, #0
 8002d1c:	dc03      	bgt.n	8002d26 <_dtoa_r+0xa96>
 8002d1e:	d1e1      	bne.n	8002ce4 <_dtoa_r+0xa54>
 8002d20:	f019 0f01 	tst.w	r9, #1
 8002d24:	d0de      	beq.n	8002ce4 <_dtoa_r+0xa54>
 8002d26:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8002d2a:	d1d8      	bne.n	8002cde <_dtoa_r+0xa4e>
 8002d2c:	2339      	movs	r3, #57	; 0x39
 8002d2e:	9a04      	ldr	r2, [sp, #16]
 8002d30:	7013      	strb	r3, [r2, #0]
 8002d32:	463b      	mov	r3, r7
 8002d34:	461f      	mov	r7, r3
 8002d36:	f817 2c01 	ldrb.w	r2, [r7, #-1]
 8002d3a:	3b01      	subs	r3, #1
 8002d3c:	2a39      	cmp	r2, #57	; 0x39
 8002d3e:	d06b      	beq.n	8002e18 <_dtoa_r+0xb88>
 8002d40:	3201      	adds	r2, #1
 8002d42:	701a      	strb	r2, [r3, #0]
 8002d44:	e74a      	b.n	8002bdc <_dtoa_r+0x94c>
 8002d46:	2a00      	cmp	r2, #0
 8002d48:	dd07      	ble.n	8002d5a <_dtoa_r+0xaca>
 8002d4a:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8002d4e:	d0ed      	beq.n	8002d2c <_dtoa_r+0xa9c>
 8002d50:	9a04      	ldr	r2, [sp, #16]
 8002d52:	f109 0301 	add.w	r3, r9, #1
 8002d56:	7013      	strb	r3, [r2, #0]
 8002d58:	e740      	b.n	8002bdc <_dtoa_r+0x94c>
 8002d5a:	9b08      	ldr	r3, [sp, #32]
 8002d5c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8002d5e:	f803 9c01 	strb.w	r9, [r3, #-1]
 8002d62:	4293      	cmp	r3, r2
 8002d64:	d042      	beq.n	8002dec <_dtoa_r+0xb5c>
 8002d66:	4651      	mov	r1, sl
 8002d68:	2300      	movs	r3, #0
 8002d6a:	220a      	movs	r2, #10
 8002d6c:	4628      	mov	r0, r5
 8002d6e:	f000 fb8b 	bl	8003488 <__multadd>
 8002d72:	45b0      	cmp	r8, r6
 8002d74:	4682      	mov	sl, r0
 8002d76:	f04f 0300 	mov.w	r3, #0
 8002d7a:	f04f 020a 	mov.w	r2, #10
 8002d7e:	4641      	mov	r1, r8
 8002d80:	4628      	mov	r0, r5
 8002d82:	d107      	bne.n	8002d94 <_dtoa_r+0xb04>
 8002d84:	f000 fb80 	bl	8003488 <__multadd>
 8002d88:	4680      	mov	r8, r0
 8002d8a:	4606      	mov	r6, r0
 8002d8c:	9b08      	ldr	r3, [sp, #32]
 8002d8e:	3301      	adds	r3, #1
 8002d90:	9308      	str	r3, [sp, #32]
 8002d92:	e775      	b.n	8002c80 <_dtoa_r+0x9f0>
 8002d94:	f000 fb78 	bl	8003488 <__multadd>
 8002d98:	4631      	mov	r1, r6
 8002d9a:	4680      	mov	r8, r0
 8002d9c:	2300      	movs	r3, #0
 8002d9e:	220a      	movs	r2, #10
 8002da0:	4628      	mov	r0, r5
 8002da2:	f000 fb71 	bl	8003488 <__multadd>
 8002da6:	4606      	mov	r6, r0
 8002da8:	e7f0      	b.n	8002d8c <_dtoa_r+0xafc>
 8002daa:	9b08      	ldr	r3, [sp, #32]
 8002dac:	9306      	str	r3, [sp, #24]
 8002dae:	9f03      	ldr	r7, [sp, #12]
 8002db0:	4621      	mov	r1, r4
 8002db2:	4650      	mov	r0, sl
 8002db4:	f7ff f9e1 	bl	800217a <quorem>
 8002db8:	9b03      	ldr	r3, [sp, #12]
 8002dba:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8002dbe:	f807 9b01 	strb.w	r9, [r7], #1
 8002dc2:	1afa      	subs	r2, r7, r3
 8002dc4:	9b06      	ldr	r3, [sp, #24]
 8002dc6:	4293      	cmp	r3, r2
 8002dc8:	dd07      	ble.n	8002dda <_dtoa_r+0xb4a>
 8002dca:	4651      	mov	r1, sl
 8002dcc:	2300      	movs	r3, #0
 8002dce:	220a      	movs	r2, #10
 8002dd0:	4628      	mov	r0, r5
 8002dd2:	f000 fb59 	bl	8003488 <__multadd>
 8002dd6:	4682      	mov	sl, r0
 8002dd8:	e7ea      	b.n	8002db0 <_dtoa_r+0xb20>
 8002dda:	9b06      	ldr	r3, [sp, #24]
 8002ddc:	f04f 0800 	mov.w	r8, #0
 8002de0:	2b00      	cmp	r3, #0
 8002de2:	bfcc      	ite	gt
 8002de4:	461f      	movgt	r7, r3
 8002de6:	2701      	movle	r7, #1
 8002de8:	9b03      	ldr	r3, [sp, #12]
 8002dea:	441f      	add	r7, r3
 8002dec:	4651      	mov	r1, sl
 8002dee:	2201      	movs	r2, #1
 8002df0:	4628      	mov	r0, r5
 8002df2:	f000 fcf5 	bl	80037e0 <__lshift>
 8002df6:	4621      	mov	r1, r4
 8002df8:	4682      	mov	sl, r0
 8002dfa:	f000 fd5d 	bl	80038b8 <__mcmp>
 8002dfe:	2800      	cmp	r0, #0
 8002e00:	dc97      	bgt.n	8002d32 <_dtoa_r+0xaa2>
 8002e02:	d102      	bne.n	8002e0a <_dtoa_r+0xb7a>
 8002e04:	f019 0f01 	tst.w	r9, #1
 8002e08:	d193      	bne.n	8002d32 <_dtoa_r+0xaa2>
 8002e0a:	463b      	mov	r3, r7
 8002e0c:	461f      	mov	r7, r3
 8002e0e:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002e12:	2a30      	cmp	r2, #48	; 0x30
 8002e14:	d0fa      	beq.n	8002e0c <_dtoa_r+0xb7c>
 8002e16:	e6e1      	b.n	8002bdc <_dtoa_r+0x94c>
 8002e18:	9a03      	ldr	r2, [sp, #12]
 8002e1a:	429a      	cmp	r2, r3
 8002e1c:	d18a      	bne.n	8002d34 <_dtoa_r+0xaa4>
 8002e1e:	2331      	movs	r3, #49	; 0x31
 8002e20:	f10b 0b01 	add.w	fp, fp, #1
 8002e24:	e797      	b.n	8002d56 <_dtoa_r+0xac6>
 8002e26:	4b0a      	ldr	r3, [pc, #40]	; (8002e50 <_dtoa_r+0xbc0>)
 8002e28:	f7ff ba9f 	b.w	800236a <_dtoa_r+0xda>
 8002e2c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8002e2e:	2b00      	cmp	r3, #0
 8002e30:	f47f aa77 	bne.w	8002322 <_dtoa_r+0x92>
 8002e34:	4b07      	ldr	r3, [pc, #28]	; (8002e54 <_dtoa_r+0xbc4>)
 8002e36:	f7ff ba98 	b.w	800236a <_dtoa_r+0xda>
 8002e3a:	9b06      	ldr	r3, [sp, #24]
 8002e3c:	2b00      	cmp	r3, #0
 8002e3e:	dcb6      	bgt.n	8002dae <_dtoa_r+0xb1e>
 8002e40:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002e42:	2b02      	cmp	r3, #2
 8002e44:	f73f aeb5 	bgt.w	8002bb2 <_dtoa_r+0x922>
 8002e48:	e7b1      	b.n	8002dae <_dtoa_r+0xb1e>
 8002e4a:	bf00      	nop
 8002e4c:	0800449c 	.word	0x0800449c
 8002e50:	080043fc 	.word	0x080043fc
 8002e54:	08004420 	.word	0x08004420

08002e58 <__ssputs_r>:
 8002e58:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002e5c:	461f      	mov	r7, r3
 8002e5e:	688e      	ldr	r6, [r1, #8]
 8002e60:	4682      	mov	sl, r0
 8002e62:	42be      	cmp	r6, r7
 8002e64:	460c      	mov	r4, r1
 8002e66:	4690      	mov	r8, r2
 8002e68:	680b      	ldr	r3, [r1, #0]
 8002e6a:	d82c      	bhi.n	8002ec6 <__ssputs_r+0x6e>
 8002e6c:	898a      	ldrh	r2, [r1, #12]
 8002e6e:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8002e72:	d026      	beq.n	8002ec2 <__ssputs_r+0x6a>
 8002e74:	6965      	ldr	r5, [r4, #20]
 8002e76:	6909      	ldr	r1, [r1, #16]
 8002e78:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8002e7c:	eba3 0901 	sub.w	r9, r3, r1
 8002e80:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8002e84:	1c7b      	adds	r3, r7, #1
 8002e86:	444b      	add	r3, r9
 8002e88:	106d      	asrs	r5, r5, #1
 8002e8a:	429d      	cmp	r5, r3
 8002e8c:	bf38      	it	cc
 8002e8e:	461d      	movcc	r5, r3
 8002e90:	0553      	lsls	r3, r2, #21
 8002e92:	d527      	bpl.n	8002ee4 <__ssputs_r+0x8c>
 8002e94:	4629      	mov	r1, r5
 8002e96:	f000 f95f 	bl	8003158 <_malloc_r>
 8002e9a:	4606      	mov	r6, r0
 8002e9c:	b360      	cbz	r0, 8002ef8 <__ssputs_r+0xa0>
 8002e9e:	464a      	mov	r2, r9
 8002ea0:	6921      	ldr	r1, [r4, #16]
 8002ea2:	f000 fee9 	bl	8003c78 <memcpy>
 8002ea6:	89a3      	ldrh	r3, [r4, #12]
 8002ea8:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8002eac:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002eb0:	81a3      	strh	r3, [r4, #12]
 8002eb2:	6126      	str	r6, [r4, #16]
 8002eb4:	444e      	add	r6, r9
 8002eb6:	6026      	str	r6, [r4, #0]
 8002eb8:	463e      	mov	r6, r7
 8002eba:	6165      	str	r5, [r4, #20]
 8002ebc:	eba5 0509 	sub.w	r5, r5, r9
 8002ec0:	60a5      	str	r5, [r4, #8]
 8002ec2:	42be      	cmp	r6, r7
 8002ec4:	d900      	bls.n	8002ec8 <__ssputs_r+0x70>
 8002ec6:	463e      	mov	r6, r7
 8002ec8:	4632      	mov	r2, r6
 8002eca:	4641      	mov	r1, r8
 8002ecc:	6820      	ldr	r0, [r4, #0]
 8002ece:	f000 fe63 	bl	8003b98 <memmove>
 8002ed2:	2000      	movs	r0, #0
 8002ed4:	68a3      	ldr	r3, [r4, #8]
 8002ed6:	1b9b      	subs	r3, r3, r6
 8002ed8:	60a3      	str	r3, [r4, #8]
 8002eda:	6823      	ldr	r3, [r4, #0]
 8002edc:	4433      	add	r3, r6
 8002ede:	6023      	str	r3, [r4, #0]
 8002ee0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002ee4:	462a      	mov	r2, r5
 8002ee6:	f000 fe28 	bl	8003b3a <_realloc_r>
 8002eea:	4606      	mov	r6, r0
 8002eec:	2800      	cmp	r0, #0
 8002eee:	d1e0      	bne.n	8002eb2 <__ssputs_r+0x5a>
 8002ef0:	4650      	mov	r0, sl
 8002ef2:	6921      	ldr	r1, [r4, #16]
 8002ef4:	f000 ff00 	bl	8003cf8 <_free_r>
 8002ef8:	230c      	movs	r3, #12
 8002efa:	f8ca 3000 	str.w	r3, [sl]
 8002efe:	89a3      	ldrh	r3, [r4, #12]
 8002f00:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002f04:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002f08:	81a3      	strh	r3, [r4, #12]
 8002f0a:	e7e9      	b.n	8002ee0 <__ssputs_r+0x88>

08002f0c <_svfiprintf_r>:
 8002f0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002f10:	4698      	mov	r8, r3
 8002f12:	898b      	ldrh	r3, [r1, #12]
 8002f14:	4607      	mov	r7, r0
 8002f16:	061b      	lsls	r3, r3, #24
 8002f18:	460d      	mov	r5, r1
 8002f1a:	4614      	mov	r4, r2
 8002f1c:	b09d      	sub	sp, #116	; 0x74
 8002f1e:	d50e      	bpl.n	8002f3e <_svfiprintf_r+0x32>
 8002f20:	690b      	ldr	r3, [r1, #16]
 8002f22:	b963      	cbnz	r3, 8002f3e <_svfiprintf_r+0x32>
 8002f24:	2140      	movs	r1, #64	; 0x40
 8002f26:	f000 f917 	bl	8003158 <_malloc_r>
 8002f2a:	6028      	str	r0, [r5, #0]
 8002f2c:	6128      	str	r0, [r5, #16]
 8002f2e:	b920      	cbnz	r0, 8002f3a <_svfiprintf_r+0x2e>
 8002f30:	230c      	movs	r3, #12
 8002f32:	603b      	str	r3, [r7, #0]
 8002f34:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002f38:	e0d0      	b.n	80030dc <_svfiprintf_r+0x1d0>
 8002f3a:	2340      	movs	r3, #64	; 0x40
 8002f3c:	616b      	str	r3, [r5, #20]
 8002f3e:	2300      	movs	r3, #0
 8002f40:	9309      	str	r3, [sp, #36]	; 0x24
 8002f42:	2320      	movs	r3, #32
 8002f44:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8002f48:	2330      	movs	r3, #48	; 0x30
 8002f4a:	f04f 0901 	mov.w	r9, #1
 8002f4e:	f8cd 800c 	str.w	r8, [sp, #12]
 8002f52:	f8df 81a0 	ldr.w	r8, [pc, #416]	; 80030f4 <_svfiprintf_r+0x1e8>
 8002f56:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8002f5a:	4623      	mov	r3, r4
 8002f5c:	469a      	mov	sl, r3
 8002f5e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8002f62:	b10a      	cbz	r2, 8002f68 <_svfiprintf_r+0x5c>
 8002f64:	2a25      	cmp	r2, #37	; 0x25
 8002f66:	d1f9      	bne.n	8002f5c <_svfiprintf_r+0x50>
 8002f68:	ebba 0b04 	subs.w	fp, sl, r4
 8002f6c:	d00b      	beq.n	8002f86 <_svfiprintf_r+0x7a>
 8002f6e:	465b      	mov	r3, fp
 8002f70:	4622      	mov	r2, r4
 8002f72:	4629      	mov	r1, r5
 8002f74:	4638      	mov	r0, r7
 8002f76:	f7ff ff6f 	bl	8002e58 <__ssputs_r>
 8002f7a:	3001      	adds	r0, #1
 8002f7c:	f000 80a9 	beq.w	80030d2 <_svfiprintf_r+0x1c6>
 8002f80:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002f82:	445a      	add	r2, fp
 8002f84:	9209      	str	r2, [sp, #36]	; 0x24
 8002f86:	f89a 3000 	ldrb.w	r3, [sl]
 8002f8a:	2b00      	cmp	r3, #0
 8002f8c:	f000 80a1 	beq.w	80030d2 <_svfiprintf_r+0x1c6>
 8002f90:	2300      	movs	r3, #0
 8002f92:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002f96:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8002f9a:	f10a 0a01 	add.w	sl, sl, #1
 8002f9e:	9304      	str	r3, [sp, #16]
 8002fa0:	9307      	str	r3, [sp, #28]
 8002fa2:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8002fa6:	931a      	str	r3, [sp, #104]	; 0x68
 8002fa8:	4654      	mov	r4, sl
 8002faa:	2205      	movs	r2, #5
 8002fac:	f814 1b01 	ldrb.w	r1, [r4], #1
 8002fb0:	4850      	ldr	r0, [pc, #320]	; (80030f4 <_svfiprintf_r+0x1e8>)
 8002fb2:	f7ff f8d4 	bl	800215e <memchr>
 8002fb6:	9a04      	ldr	r2, [sp, #16]
 8002fb8:	b9d8      	cbnz	r0, 8002ff2 <_svfiprintf_r+0xe6>
 8002fba:	06d0      	lsls	r0, r2, #27
 8002fbc:	bf44      	itt	mi
 8002fbe:	2320      	movmi	r3, #32
 8002fc0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8002fc4:	0711      	lsls	r1, r2, #28
 8002fc6:	bf44      	itt	mi
 8002fc8:	232b      	movmi	r3, #43	; 0x2b
 8002fca:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8002fce:	f89a 3000 	ldrb.w	r3, [sl]
 8002fd2:	2b2a      	cmp	r3, #42	; 0x2a
 8002fd4:	d015      	beq.n	8003002 <_svfiprintf_r+0xf6>
 8002fd6:	4654      	mov	r4, sl
 8002fd8:	2000      	movs	r0, #0
 8002fda:	f04f 0c0a 	mov.w	ip, #10
 8002fde:	9a07      	ldr	r2, [sp, #28]
 8002fe0:	4621      	mov	r1, r4
 8002fe2:	f811 3b01 	ldrb.w	r3, [r1], #1
 8002fe6:	3b30      	subs	r3, #48	; 0x30
 8002fe8:	2b09      	cmp	r3, #9
 8002fea:	d94d      	bls.n	8003088 <_svfiprintf_r+0x17c>
 8002fec:	b1b0      	cbz	r0, 800301c <_svfiprintf_r+0x110>
 8002fee:	9207      	str	r2, [sp, #28]
 8002ff0:	e014      	b.n	800301c <_svfiprintf_r+0x110>
 8002ff2:	eba0 0308 	sub.w	r3, r0, r8
 8002ff6:	fa09 f303 	lsl.w	r3, r9, r3
 8002ffa:	4313      	orrs	r3, r2
 8002ffc:	46a2      	mov	sl, r4
 8002ffe:	9304      	str	r3, [sp, #16]
 8003000:	e7d2      	b.n	8002fa8 <_svfiprintf_r+0x9c>
 8003002:	9b03      	ldr	r3, [sp, #12]
 8003004:	1d19      	adds	r1, r3, #4
 8003006:	681b      	ldr	r3, [r3, #0]
 8003008:	9103      	str	r1, [sp, #12]
 800300a:	2b00      	cmp	r3, #0
 800300c:	bfbb      	ittet	lt
 800300e:	425b      	neglt	r3, r3
 8003010:	f042 0202 	orrlt.w	r2, r2, #2
 8003014:	9307      	strge	r3, [sp, #28]
 8003016:	9307      	strlt	r3, [sp, #28]
 8003018:	bfb8      	it	lt
 800301a:	9204      	strlt	r2, [sp, #16]
 800301c:	7823      	ldrb	r3, [r4, #0]
 800301e:	2b2e      	cmp	r3, #46	; 0x2e
 8003020:	d10c      	bne.n	800303c <_svfiprintf_r+0x130>
 8003022:	7863      	ldrb	r3, [r4, #1]
 8003024:	2b2a      	cmp	r3, #42	; 0x2a
 8003026:	d134      	bne.n	8003092 <_svfiprintf_r+0x186>
 8003028:	9b03      	ldr	r3, [sp, #12]
 800302a:	3402      	adds	r4, #2
 800302c:	1d1a      	adds	r2, r3, #4
 800302e:	681b      	ldr	r3, [r3, #0]
 8003030:	9203      	str	r2, [sp, #12]
 8003032:	2b00      	cmp	r3, #0
 8003034:	bfb8      	it	lt
 8003036:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 800303a:	9305      	str	r3, [sp, #20]
 800303c:	f8df a0b8 	ldr.w	sl, [pc, #184]	; 80030f8 <_svfiprintf_r+0x1ec>
 8003040:	2203      	movs	r2, #3
 8003042:	4650      	mov	r0, sl
 8003044:	7821      	ldrb	r1, [r4, #0]
 8003046:	f7ff f88a 	bl	800215e <memchr>
 800304a:	b138      	cbz	r0, 800305c <_svfiprintf_r+0x150>
 800304c:	2240      	movs	r2, #64	; 0x40
 800304e:	9b04      	ldr	r3, [sp, #16]
 8003050:	eba0 000a 	sub.w	r0, r0, sl
 8003054:	4082      	lsls	r2, r0
 8003056:	4313      	orrs	r3, r2
 8003058:	3401      	adds	r4, #1
 800305a:	9304      	str	r3, [sp, #16]
 800305c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003060:	2206      	movs	r2, #6
 8003062:	4826      	ldr	r0, [pc, #152]	; (80030fc <_svfiprintf_r+0x1f0>)
 8003064:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8003068:	f7ff f879 	bl	800215e <memchr>
 800306c:	2800      	cmp	r0, #0
 800306e:	d038      	beq.n	80030e2 <_svfiprintf_r+0x1d6>
 8003070:	4b23      	ldr	r3, [pc, #140]	; (8003100 <_svfiprintf_r+0x1f4>)
 8003072:	bb1b      	cbnz	r3, 80030bc <_svfiprintf_r+0x1b0>
 8003074:	9b03      	ldr	r3, [sp, #12]
 8003076:	3307      	adds	r3, #7
 8003078:	f023 0307 	bic.w	r3, r3, #7
 800307c:	3308      	adds	r3, #8
 800307e:	9303      	str	r3, [sp, #12]
 8003080:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003082:	4433      	add	r3, r6
 8003084:	9309      	str	r3, [sp, #36]	; 0x24
 8003086:	e768      	b.n	8002f5a <_svfiprintf_r+0x4e>
 8003088:	460c      	mov	r4, r1
 800308a:	2001      	movs	r0, #1
 800308c:	fb0c 3202 	mla	r2, ip, r2, r3
 8003090:	e7a6      	b.n	8002fe0 <_svfiprintf_r+0xd4>
 8003092:	2300      	movs	r3, #0
 8003094:	f04f 0c0a 	mov.w	ip, #10
 8003098:	4619      	mov	r1, r3
 800309a:	3401      	adds	r4, #1
 800309c:	9305      	str	r3, [sp, #20]
 800309e:	4620      	mov	r0, r4
 80030a0:	f810 2b01 	ldrb.w	r2, [r0], #1
 80030a4:	3a30      	subs	r2, #48	; 0x30
 80030a6:	2a09      	cmp	r2, #9
 80030a8:	d903      	bls.n	80030b2 <_svfiprintf_r+0x1a6>
 80030aa:	2b00      	cmp	r3, #0
 80030ac:	d0c6      	beq.n	800303c <_svfiprintf_r+0x130>
 80030ae:	9105      	str	r1, [sp, #20]
 80030b0:	e7c4      	b.n	800303c <_svfiprintf_r+0x130>
 80030b2:	4604      	mov	r4, r0
 80030b4:	2301      	movs	r3, #1
 80030b6:	fb0c 2101 	mla	r1, ip, r1, r2
 80030ba:	e7f0      	b.n	800309e <_svfiprintf_r+0x192>
 80030bc:	ab03      	add	r3, sp, #12
 80030be:	9300      	str	r3, [sp, #0]
 80030c0:	462a      	mov	r2, r5
 80030c2:	4638      	mov	r0, r7
 80030c4:	4b0f      	ldr	r3, [pc, #60]	; (8003104 <_svfiprintf_r+0x1f8>)
 80030c6:	a904      	add	r1, sp, #16
 80030c8:	f7fe fb58 	bl	800177c <_printf_float>
 80030cc:	1c42      	adds	r2, r0, #1
 80030ce:	4606      	mov	r6, r0
 80030d0:	d1d6      	bne.n	8003080 <_svfiprintf_r+0x174>
 80030d2:	89ab      	ldrh	r3, [r5, #12]
 80030d4:	065b      	lsls	r3, r3, #25
 80030d6:	f53f af2d 	bmi.w	8002f34 <_svfiprintf_r+0x28>
 80030da:	9809      	ldr	r0, [sp, #36]	; 0x24
 80030dc:	b01d      	add	sp, #116	; 0x74
 80030de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80030e2:	ab03      	add	r3, sp, #12
 80030e4:	9300      	str	r3, [sp, #0]
 80030e6:	462a      	mov	r2, r5
 80030e8:	4638      	mov	r0, r7
 80030ea:	4b06      	ldr	r3, [pc, #24]	; (8003104 <_svfiprintf_r+0x1f8>)
 80030ec:	a904      	add	r1, sp, #16
 80030ee:	f7fe fde5 	bl	8001cbc <_printf_i>
 80030f2:	e7eb      	b.n	80030cc <_svfiprintf_r+0x1c0>
 80030f4:	080044ad 	.word	0x080044ad
 80030f8:	080044b3 	.word	0x080044b3
 80030fc:	080044b7 	.word	0x080044b7
 8003100:	0800177d 	.word	0x0800177d
 8003104:	08002e59 	.word	0x08002e59

08003108 <malloc>:
 8003108:	4b02      	ldr	r3, [pc, #8]	; (8003114 <malloc+0xc>)
 800310a:	4601      	mov	r1, r0
 800310c:	6818      	ldr	r0, [r3, #0]
 800310e:	f000 b823 	b.w	8003158 <_malloc_r>
 8003112:	bf00      	nop
 8003114:	20000058 	.word	0x20000058

08003118 <sbrk_aligned>:
 8003118:	b570      	push	{r4, r5, r6, lr}
 800311a:	4e0e      	ldr	r6, [pc, #56]	; (8003154 <sbrk_aligned+0x3c>)
 800311c:	460c      	mov	r4, r1
 800311e:	6831      	ldr	r1, [r6, #0]
 8003120:	4605      	mov	r5, r0
 8003122:	b911      	cbnz	r1, 800312a <sbrk_aligned+0x12>
 8003124:	f000 fd86 	bl	8003c34 <_sbrk_r>
 8003128:	6030      	str	r0, [r6, #0]
 800312a:	4621      	mov	r1, r4
 800312c:	4628      	mov	r0, r5
 800312e:	f000 fd81 	bl	8003c34 <_sbrk_r>
 8003132:	1c43      	adds	r3, r0, #1
 8003134:	d00a      	beq.n	800314c <sbrk_aligned+0x34>
 8003136:	1cc4      	adds	r4, r0, #3
 8003138:	f024 0403 	bic.w	r4, r4, #3
 800313c:	42a0      	cmp	r0, r4
 800313e:	d007      	beq.n	8003150 <sbrk_aligned+0x38>
 8003140:	1a21      	subs	r1, r4, r0
 8003142:	4628      	mov	r0, r5
 8003144:	f000 fd76 	bl	8003c34 <_sbrk_r>
 8003148:	3001      	adds	r0, #1
 800314a:	d101      	bne.n	8003150 <sbrk_aligned+0x38>
 800314c:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8003150:	4620      	mov	r0, r4
 8003152:	bd70      	pop	{r4, r5, r6, pc}
 8003154:	2000036c 	.word	0x2000036c

08003158 <_malloc_r>:
 8003158:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800315c:	1ccd      	adds	r5, r1, #3
 800315e:	f025 0503 	bic.w	r5, r5, #3
 8003162:	3508      	adds	r5, #8
 8003164:	2d0c      	cmp	r5, #12
 8003166:	bf38      	it	cc
 8003168:	250c      	movcc	r5, #12
 800316a:	2d00      	cmp	r5, #0
 800316c:	4607      	mov	r7, r0
 800316e:	db01      	blt.n	8003174 <_malloc_r+0x1c>
 8003170:	42a9      	cmp	r1, r5
 8003172:	d905      	bls.n	8003180 <_malloc_r+0x28>
 8003174:	230c      	movs	r3, #12
 8003176:	2600      	movs	r6, #0
 8003178:	603b      	str	r3, [r7, #0]
 800317a:	4630      	mov	r0, r6
 800317c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003180:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8003254 <_malloc_r+0xfc>
 8003184:	f000 f912 	bl	80033ac <__malloc_lock>
 8003188:	f8d8 3000 	ldr.w	r3, [r8]
 800318c:	461c      	mov	r4, r3
 800318e:	bb5c      	cbnz	r4, 80031e8 <_malloc_r+0x90>
 8003190:	4629      	mov	r1, r5
 8003192:	4638      	mov	r0, r7
 8003194:	f7ff ffc0 	bl	8003118 <sbrk_aligned>
 8003198:	1c43      	adds	r3, r0, #1
 800319a:	4604      	mov	r4, r0
 800319c:	d155      	bne.n	800324a <_malloc_r+0xf2>
 800319e:	f8d8 4000 	ldr.w	r4, [r8]
 80031a2:	4626      	mov	r6, r4
 80031a4:	2e00      	cmp	r6, #0
 80031a6:	d145      	bne.n	8003234 <_malloc_r+0xdc>
 80031a8:	2c00      	cmp	r4, #0
 80031aa:	d048      	beq.n	800323e <_malloc_r+0xe6>
 80031ac:	6823      	ldr	r3, [r4, #0]
 80031ae:	4631      	mov	r1, r6
 80031b0:	4638      	mov	r0, r7
 80031b2:	eb04 0903 	add.w	r9, r4, r3
 80031b6:	f000 fd3d 	bl	8003c34 <_sbrk_r>
 80031ba:	4581      	cmp	r9, r0
 80031bc:	d13f      	bne.n	800323e <_malloc_r+0xe6>
 80031be:	6821      	ldr	r1, [r4, #0]
 80031c0:	4638      	mov	r0, r7
 80031c2:	1a6d      	subs	r5, r5, r1
 80031c4:	4629      	mov	r1, r5
 80031c6:	f7ff ffa7 	bl	8003118 <sbrk_aligned>
 80031ca:	3001      	adds	r0, #1
 80031cc:	d037      	beq.n	800323e <_malloc_r+0xe6>
 80031ce:	6823      	ldr	r3, [r4, #0]
 80031d0:	442b      	add	r3, r5
 80031d2:	6023      	str	r3, [r4, #0]
 80031d4:	f8d8 3000 	ldr.w	r3, [r8]
 80031d8:	2b00      	cmp	r3, #0
 80031da:	d038      	beq.n	800324e <_malloc_r+0xf6>
 80031dc:	685a      	ldr	r2, [r3, #4]
 80031de:	42a2      	cmp	r2, r4
 80031e0:	d12b      	bne.n	800323a <_malloc_r+0xe2>
 80031e2:	2200      	movs	r2, #0
 80031e4:	605a      	str	r2, [r3, #4]
 80031e6:	e00f      	b.n	8003208 <_malloc_r+0xb0>
 80031e8:	6822      	ldr	r2, [r4, #0]
 80031ea:	1b52      	subs	r2, r2, r5
 80031ec:	d41f      	bmi.n	800322e <_malloc_r+0xd6>
 80031ee:	2a0b      	cmp	r2, #11
 80031f0:	d917      	bls.n	8003222 <_malloc_r+0xca>
 80031f2:	1961      	adds	r1, r4, r5
 80031f4:	42a3      	cmp	r3, r4
 80031f6:	6025      	str	r5, [r4, #0]
 80031f8:	bf18      	it	ne
 80031fa:	6059      	strne	r1, [r3, #4]
 80031fc:	6863      	ldr	r3, [r4, #4]
 80031fe:	bf08      	it	eq
 8003200:	f8c8 1000 	streq.w	r1, [r8]
 8003204:	5162      	str	r2, [r4, r5]
 8003206:	604b      	str	r3, [r1, #4]
 8003208:	4638      	mov	r0, r7
 800320a:	f104 060b 	add.w	r6, r4, #11
 800320e:	f000 f8d3 	bl	80033b8 <__malloc_unlock>
 8003212:	f026 0607 	bic.w	r6, r6, #7
 8003216:	1d23      	adds	r3, r4, #4
 8003218:	1af2      	subs	r2, r6, r3
 800321a:	d0ae      	beq.n	800317a <_malloc_r+0x22>
 800321c:	1b9b      	subs	r3, r3, r6
 800321e:	50a3      	str	r3, [r4, r2]
 8003220:	e7ab      	b.n	800317a <_malloc_r+0x22>
 8003222:	42a3      	cmp	r3, r4
 8003224:	6862      	ldr	r2, [r4, #4]
 8003226:	d1dd      	bne.n	80031e4 <_malloc_r+0x8c>
 8003228:	f8c8 2000 	str.w	r2, [r8]
 800322c:	e7ec      	b.n	8003208 <_malloc_r+0xb0>
 800322e:	4623      	mov	r3, r4
 8003230:	6864      	ldr	r4, [r4, #4]
 8003232:	e7ac      	b.n	800318e <_malloc_r+0x36>
 8003234:	4634      	mov	r4, r6
 8003236:	6876      	ldr	r6, [r6, #4]
 8003238:	e7b4      	b.n	80031a4 <_malloc_r+0x4c>
 800323a:	4613      	mov	r3, r2
 800323c:	e7cc      	b.n	80031d8 <_malloc_r+0x80>
 800323e:	230c      	movs	r3, #12
 8003240:	4638      	mov	r0, r7
 8003242:	603b      	str	r3, [r7, #0]
 8003244:	f000 f8b8 	bl	80033b8 <__malloc_unlock>
 8003248:	e797      	b.n	800317a <_malloc_r+0x22>
 800324a:	6025      	str	r5, [r4, #0]
 800324c:	e7dc      	b.n	8003208 <_malloc_r+0xb0>
 800324e:	605b      	str	r3, [r3, #4]
 8003250:	deff      	udf	#255	; 0xff
 8003252:	bf00      	nop
 8003254:	20000368 	.word	0x20000368

08003258 <__sflush_r>:
 8003258:	898a      	ldrh	r2, [r1, #12]
 800325a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800325c:	4605      	mov	r5, r0
 800325e:	0710      	lsls	r0, r2, #28
 8003260:	460c      	mov	r4, r1
 8003262:	d457      	bmi.n	8003314 <__sflush_r+0xbc>
 8003264:	684b      	ldr	r3, [r1, #4]
 8003266:	2b00      	cmp	r3, #0
 8003268:	dc04      	bgt.n	8003274 <__sflush_r+0x1c>
 800326a:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800326c:	2b00      	cmp	r3, #0
 800326e:	dc01      	bgt.n	8003274 <__sflush_r+0x1c>
 8003270:	2000      	movs	r0, #0
 8003272:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003274:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8003276:	2e00      	cmp	r6, #0
 8003278:	d0fa      	beq.n	8003270 <__sflush_r+0x18>
 800327a:	2300      	movs	r3, #0
 800327c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8003280:	682f      	ldr	r7, [r5, #0]
 8003282:	6a21      	ldr	r1, [r4, #32]
 8003284:	602b      	str	r3, [r5, #0]
 8003286:	d032      	beq.n	80032ee <__sflush_r+0x96>
 8003288:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800328a:	89a3      	ldrh	r3, [r4, #12]
 800328c:	075a      	lsls	r2, r3, #29
 800328e:	d505      	bpl.n	800329c <__sflush_r+0x44>
 8003290:	6863      	ldr	r3, [r4, #4]
 8003292:	1ac0      	subs	r0, r0, r3
 8003294:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8003296:	b10b      	cbz	r3, 800329c <__sflush_r+0x44>
 8003298:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800329a:	1ac0      	subs	r0, r0, r3
 800329c:	2300      	movs	r3, #0
 800329e:	4602      	mov	r2, r0
 80032a0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80032a2:	4628      	mov	r0, r5
 80032a4:	6a21      	ldr	r1, [r4, #32]
 80032a6:	47b0      	blx	r6
 80032a8:	1c43      	adds	r3, r0, #1
 80032aa:	89a3      	ldrh	r3, [r4, #12]
 80032ac:	d106      	bne.n	80032bc <__sflush_r+0x64>
 80032ae:	6829      	ldr	r1, [r5, #0]
 80032b0:	291d      	cmp	r1, #29
 80032b2:	d82b      	bhi.n	800330c <__sflush_r+0xb4>
 80032b4:	4a28      	ldr	r2, [pc, #160]	; (8003358 <__sflush_r+0x100>)
 80032b6:	410a      	asrs	r2, r1
 80032b8:	07d6      	lsls	r6, r2, #31
 80032ba:	d427      	bmi.n	800330c <__sflush_r+0xb4>
 80032bc:	2200      	movs	r2, #0
 80032be:	6062      	str	r2, [r4, #4]
 80032c0:	6922      	ldr	r2, [r4, #16]
 80032c2:	04d9      	lsls	r1, r3, #19
 80032c4:	6022      	str	r2, [r4, #0]
 80032c6:	d504      	bpl.n	80032d2 <__sflush_r+0x7a>
 80032c8:	1c42      	adds	r2, r0, #1
 80032ca:	d101      	bne.n	80032d0 <__sflush_r+0x78>
 80032cc:	682b      	ldr	r3, [r5, #0]
 80032ce:	b903      	cbnz	r3, 80032d2 <__sflush_r+0x7a>
 80032d0:	6560      	str	r0, [r4, #84]	; 0x54
 80032d2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80032d4:	602f      	str	r7, [r5, #0]
 80032d6:	2900      	cmp	r1, #0
 80032d8:	d0ca      	beq.n	8003270 <__sflush_r+0x18>
 80032da:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80032de:	4299      	cmp	r1, r3
 80032e0:	d002      	beq.n	80032e8 <__sflush_r+0x90>
 80032e2:	4628      	mov	r0, r5
 80032e4:	f000 fd08 	bl	8003cf8 <_free_r>
 80032e8:	2000      	movs	r0, #0
 80032ea:	6360      	str	r0, [r4, #52]	; 0x34
 80032ec:	e7c1      	b.n	8003272 <__sflush_r+0x1a>
 80032ee:	2301      	movs	r3, #1
 80032f0:	4628      	mov	r0, r5
 80032f2:	47b0      	blx	r6
 80032f4:	1c41      	adds	r1, r0, #1
 80032f6:	d1c8      	bne.n	800328a <__sflush_r+0x32>
 80032f8:	682b      	ldr	r3, [r5, #0]
 80032fa:	2b00      	cmp	r3, #0
 80032fc:	d0c5      	beq.n	800328a <__sflush_r+0x32>
 80032fe:	2b1d      	cmp	r3, #29
 8003300:	d001      	beq.n	8003306 <__sflush_r+0xae>
 8003302:	2b16      	cmp	r3, #22
 8003304:	d101      	bne.n	800330a <__sflush_r+0xb2>
 8003306:	602f      	str	r7, [r5, #0]
 8003308:	e7b2      	b.n	8003270 <__sflush_r+0x18>
 800330a:	89a3      	ldrh	r3, [r4, #12]
 800330c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003310:	81a3      	strh	r3, [r4, #12]
 8003312:	e7ae      	b.n	8003272 <__sflush_r+0x1a>
 8003314:	690f      	ldr	r7, [r1, #16]
 8003316:	2f00      	cmp	r7, #0
 8003318:	d0aa      	beq.n	8003270 <__sflush_r+0x18>
 800331a:	0793      	lsls	r3, r2, #30
 800331c:	bf18      	it	ne
 800331e:	2300      	movne	r3, #0
 8003320:	680e      	ldr	r6, [r1, #0]
 8003322:	bf08      	it	eq
 8003324:	694b      	ldreq	r3, [r1, #20]
 8003326:	1bf6      	subs	r6, r6, r7
 8003328:	600f      	str	r7, [r1, #0]
 800332a:	608b      	str	r3, [r1, #8]
 800332c:	2e00      	cmp	r6, #0
 800332e:	dd9f      	ble.n	8003270 <__sflush_r+0x18>
 8003330:	4633      	mov	r3, r6
 8003332:	463a      	mov	r2, r7
 8003334:	4628      	mov	r0, r5
 8003336:	6a21      	ldr	r1, [r4, #32]
 8003338:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 800333c:	47e0      	blx	ip
 800333e:	2800      	cmp	r0, #0
 8003340:	dc06      	bgt.n	8003350 <__sflush_r+0xf8>
 8003342:	89a3      	ldrh	r3, [r4, #12]
 8003344:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003348:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800334c:	81a3      	strh	r3, [r4, #12]
 800334e:	e790      	b.n	8003272 <__sflush_r+0x1a>
 8003350:	4407      	add	r7, r0
 8003352:	1a36      	subs	r6, r6, r0
 8003354:	e7ea      	b.n	800332c <__sflush_r+0xd4>
 8003356:	bf00      	nop
 8003358:	dfbffffe 	.word	0xdfbffffe

0800335c <_fflush_r>:
 800335c:	b538      	push	{r3, r4, r5, lr}
 800335e:	690b      	ldr	r3, [r1, #16]
 8003360:	4605      	mov	r5, r0
 8003362:	460c      	mov	r4, r1
 8003364:	b913      	cbnz	r3, 800336c <_fflush_r+0x10>
 8003366:	2500      	movs	r5, #0
 8003368:	4628      	mov	r0, r5
 800336a:	bd38      	pop	{r3, r4, r5, pc}
 800336c:	b118      	cbz	r0, 8003376 <_fflush_r+0x1a>
 800336e:	6a03      	ldr	r3, [r0, #32]
 8003370:	b90b      	cbnz	r3, 8003376 <_fflush_r+0x1a>
 8003372:	f7fe fe85 	bl	8002080 <__sinit>
 8003376:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800337a:	2b00      	cmp	r3, #0
 800337c:	d0f3      	beq.n	8003366 <_fflush_r+0xa>
 800337e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8003380:	07d0      	lsls	r0, r2, #31
 8003382:	d404      	bmi.n	800338e <_fflush_r+0x32>
 8003384:	0599      	lsls	r1, r3, #22
 8003386:	d402      	bmi.n	800338e <_fflush_r+0x32>
 8003388:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800338a:	f7fe fee6 	bl	800215a <__retarget_lock_acquire_recursive>
 800338e:	4628      	mov	r0, r5
 8003390:	4621      	mov	r1, r4
 8003392:	f7ff ff61 	bl	8003258 <__sflush_r>
 8003396:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8003398:	4605      	mov	r5, r0
 800339a:	07da      	lsls	r2, r3, #31
 800339c:	d4e4      	bmi.n	8003368 <_fflush_r+0xc>
 800339e:	89a3      	ldrh	r3, [r4, #12]
 80033a0:	059b      	lsls	r3, r3, #22
 80033a2:	d4e1      	bmi.n	8003368 <_fflush_r+0xc>
 80033a4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80033a6:	f7fe fed9 	bl	800215c <__retarget_lock_release_recursive>
 80033aa:	e7dd      	b.n	8003368 <_fflush_r+0xc>

080033ac <__malloc_lock>:
 80033ac:	4801      	ldr	r0, [pc, #4]	; (80033b4 <__malloc_lock+0x8>)
 80033ae:	f7fe bed4 	b.w	800215a <__retarget_lock_acquire_recursive>
 80033b2:	bf00      	nop
 80033b4:	20000364 	.word	0x20000364

080033b8 <__malloc_unlock>:
 80033b8:	4801      	ldr	r0, [pc, #4]	; (80033c0 <__malloc_unlock+0x8>)
 80033ba:	f7fe becf 	b.w	800215c <__retarget_lock_release_recursive>
 80033be:	bf00      	nop
 80033c0:	20000364 	.word	0x20000364

080033c4 <_Balloc>:
 80033c4:	b570      	push	{r4, r5, r6, lr}
 80033c6:	69c6      	ldr	r6, [r0, #28]
 80033c8:	4604      	mov	r4, r0
 80033ca:	460d      	mov	r5, r1
 80033cc:	b976      	cbnz	r6, 80033ec <_Balloc+0x28>
 80033ce:	2010      	movs	r0, #16
 80033d0:	f7ff fe9a 	bl	8003108 <malloc>
 80033d4:	4602      	mov	r2, r0
 80033d6:	61e0      	str	r0, [r4, #28]
 80033d8:	b920      	cbnz	r0, 80033e4 <_Balloc+0x20>
 80033da:	216b      	movs	r1, #107	; 0x6b
 80033dc:	4b17      	ldr	r3, [pc, #92]	; (800343c <_Balloc+0x78>)
 80033de:	4818      	ldr	r0, [pc, #96]	; (8003440 <_Balloc+0x7c>)
 80033e0:	f000 fc58 	bl	8003c94 <__assert_func>
 80033e4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80033e8:	6006      	str	r6, [r0, #0]
 80033ea:	60c6      	str	r6, [r0, #12]
 80033ec:	69e6      	ldr	r6, [r4, #28]
 80033ee:	68f3      	ldr	r3, [r6, #12]
 80033f0:	b183      	cbz	r3, 8003414 <_Balloc+0x50>
 80033f2:	69e3      	ldr	r3, [r4, #28]
 80033f4:	68db      	ldr	r3, [r3, #12]
 80033f6:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80033fa:	b9b8      	cbnz	r0, 800342c <_Balloc+0x68>
 80033fc:	2101      	movs	r1, #1
 80033fe:	fa01 f605 	lsl.w	r6, r1, r5
 8003402:	1d72      	adds	r2, r6, #5
 8003404:	4620      	mov	r0, r4
 8003406:	0092      	lsls	r2, r2, #2
 8003408:	f000 fc62 	bl	8003cd0 <_calloc_r>
 800340c:	b160      	cbz	r0, 8003428 <_Balloc+0x64>
 800340e:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8003412:	e00e      	b.n	8003432 <_Balloc+0x6e>
 8003414:	2221      	movs	r2, #33	; 0x21
 8003416:	2104      	movs	r1, #4
 8003418:	4620      	mov	r0, r4
 800341a:	f000 fc59 	bl	8003cd0 <_calloc_r>
 800341e:	69e3      	ldr	r3, [r4, #28]
 8003420:	60f0      	str	r0, [r6, #12]
 8003422:	68db      	ldr	r3, [r3, #12]
 8003424:	2b00      	cmp	r3, #0
 8003426:	d1e4      	bne.n	80033f2 <_Balloc+0x2e>
 8003428:	2000      	movs	r0, #0
 800342a:	bd70      	pop	{r4, r5, r6, pc}
 800342c:	6802      	ldr	r2, [r0, #0]
 800342e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8003432:	2300      	movs	r3, #0
 8003434:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003438:	e7f7      	b.n	800342a <_Balloc+0x66>
 800343a:	bf00      	nop
 800343c:	0800442d 	.word	0x0800442d
 8003440:	080044be 	.word	0x080044be

08003444 <_Bfree>:
 8003444:	b570      	push	{r4, r5, r6, lr}
 8003446:	69c6      	ldr	r6, [r0, #28]
 8003448:	4605      	mov	r5, r0
 800344a:	460c      	mov	r4, r1
 800344c:	b976      	cbnz	r6, 800346c <_Bfree+0x28>
 800344e:	2010      	movs	r0, #16
 8003450:	f7ff fe5a 	bl	8003108 <malloc>
 8003454:	4602      	mov	r2, r0
 8003456:	61e8      	str	r0, [r5, #28]
 8003458:	b920      	cbnz	r0, 8003464 <_Bfree+0x20>
 800345a:	218f      	movs	r1, #143	; 0x8f
 800345c:	4b08      	ldr	r3, [pc, #32]	; (8003480 <_Bfree+0x3c>)
 800345e:	4809      	ldr	r0, [pc, #36]	; (8003484 <_Bfree+0x40>)
 8003460:	f000 fc18 	bl	8003c94 <__assert_func>
 8003464:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003468:	6006      	str	r6, [r0, #0]
 800346a:	60c6      	str	r6, [r0, #12]
 800346c:	b13c      	cbz	r4, 800347e <_Bfree+0x3a>
 800346e:	69eb      	ldr	r3, [r5, #28]
 8003470:	6862      	ldr	r2, [r4, #4]
 8003472:	68db      	ldr	r3, [r3, #12]
 8003474:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003478:	6021      	str	r1, [r4, #0]
 800347a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800347e:	bd70      	pop	{r4, r5, r6, pc}
 8003480:	0800442d 	.word	0x0800442d
 8003484:	080044be 	.word	0x080044be

08003488 <__multadd>:
 8003488:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800348c:	4607      	mov	r7, r0
 800348e:	460c      	mov	r4, r1
 8003490:	461e      	mov	r6, r3
 8003492:	2000      	movs	r0, #0
 8003494:	690d      	ldr	r5, [r1, #16]
 8003496:	f101 0c14 	add.w	ip, r1, #20
 800349a:	f8dc 3000 	ldr.w	r3, [ip]
 800349e:	3001      	adds	r0, #1
 80034a0:	b299      	uxth	r1, r3
 80034a2:	fb02 6101 	mla	r1, r2, r1, r6
 80034a6:	0c1e      	lsrs	r6, r3, #16
 80034a8:	0c0b      	lsrs	r3, r1, #16
 80034aa:	fb02 3306 	mla	r3, r2, r6, r3
 80034ae:	b289      	uxth	r1, r1
 80034b0:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 80034b4:	4285      	cmp	r5, r0
 80034b6:	ea4f 4613 	mov.w	r6, r3, lsr #16
 80034ba:	f84c 1b04 	str.w	r1, [ip], #4
 80034be:	dcec      	bgt.n	800349a <__multadd+0x12>
 80034c0:	b30e      	cbz	r6, 8003506 <__multadd+0x7e>
 80034c2:	68a3      	ldr	r3, [r4, #8]
 80034c4:	42ab      	cmp	r3, r5
 80034c6:	dc19      	bgt.n	80034fc <__multadd+0x74>
 80034c8:	6861      	ldr	r1, [r4, #4]
 80034ca:	4638      	mov	r0, r7
 80034cc:	3101      	adds	r1, #1
 80034ce:	f7ff ff79 	bl	80033c4 <_Balloc>
 80034d2:	4680      	mov	r8, r0
 80034d4:	b928      	cbnz	r0, 80034e2 <__multadd+0x5a>
 80034d6:	4602      	mov	r2, r0
 80034d8:	21ba      	movs	r1, #186	; 0xba
 80034da:	4b0c      	ldr	r3, [pc, #48]	; (800350c <__multadd+0x84>)
 80034dc:	480c      	ldr	r0, [pc, #48]	; (8003510 <__multadd+0x88>)
 80034de:	f000 fbd9 	bl	8003c94 <__assert_func>
 80034e2:	6922      	ldr	r2, [r4, #16]
 80034e4:	f104 010c 	add.w	r1, r4, #12
 80034e8:	3202      	adds	r2, #2
 80034ea:	0092      	lsls	r2, r2, #2
 80034ec:	300c      	adds	r0, #12
 80034ee:	f000 fbc3 	bl	8003c78 <memcpy>
 80034f2:	4621      	mov	r1, r4
 80034f4:	4638      	mov	r0, r7
 80034f6:	f7ff ffa5 	bl	8003444 <_Bfree>
 80034fa:	4644      	mov	r4, r8
 80034fc:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8003500:	3501      	adds	r5, #1
 8003502:	615e      	str	r6, [r3, #20]
 8003504:	6125      	str	r5, [r4, #16]
 8003506:	4620      	mov	r0, r4
 8003508:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800350c:	0800449c 	.word	0x0800449c
 8003510:	080044be 	.word	0x080044be

08003514 <__hi0bits>:
 8003514:	0c02      	lsrs	r2, r0, #16
 8003516:	0412      	lsls	r2, r2, #16
 8003518:	4603      	mov	r3, r0
 800351a:	b9ca      	cbnz	r2, 8003550 <__hi0bits+0x3c>
 800351c:	0403      	lsls	r3, r0, #16
 800351e:	2010      	movs	r0, #16
 8003520:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8003524:	bf04      	itt	eq
 8003526:	021b      	lsleq	r3, r3, #8
 8003528:	3008      	addeq	r0, #8
 800352a:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800352e:	bf04      	itt	eq
 8003530:	011b      	lsleq	r3, r3, #4
 8003532:	3004      	addeq	r0, #4
 8003534:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8003538:	bf04      	itt	eq
 800353a:	009b      	lsleq	r3, r3, #2
 800353c:	3002      	addeq	r0, #2
 800353e:	2b00      	cmp	r3, #0
 8003540:	db05      	blt.n	800354e <__hi0bits+0x3a>
 8003542:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 8003546:	f100 0001 	add.w	r0, r0, #1
 800354a:	bf08      	it	eq
 800354c:	2020      	moveq	r0, #32
 800354e:	4770      	bx	lr
 8003550:	2000      	movs	r0, #0
 8003552:	e7e5      	b.n	8003520 <__hi0bits+0xc>

08003554 <__lo0bits>:
 8003554:	6803      	ldr	r3, [r0, #0]
 8003556:	4602      	mov	r2, r0
 8003558:	f013 0007 	ands.w	r0, r3, #7
 800355c:	d00b      	beq.n	8003576 <__lo0bits+0x22>
 800355e:	07d9      	lsls	r1, r3, #31
 8003560:	d421      	bmi.n	80035a6 <__lo0bits+0x52>
 8003562:	0798      	lsls	r0, r3, #30
 8003564:	bf49      	itett	mi
 8003566:	085b      	lsrmi	r3, r3, #1
 8003568:	089b      	lsrpl	r3, r3, #2
 800356a:	2001      	movmi	r0, #1
 800356c:	6013      	strmi	r3, [r2, #0]
 800356e:	bf5c      	itt	pl
 8003570:	2002      	movpl	r0, #2
 8003572:	6013      	strpl	r3, [r2, #0]
 8003574:	4770      	bx	lr
 8003576:	b299      	uxth	r1, r3
 8003578:	b909      	cbnz	r1, 800357e <__lo0bits+0x2a>
 800357a:	2010      	movs	r0, #16
 800357c:	0c1b      	lsrs	r3, r3, #16
 800357e:	b2d9      	uxtb	r1, r3
 8003580:	b909      	cbnz	r1, 8003586 <__lo0bits+0x32>
 8003582:	3008      	adds	r0, #8
 8003584:	0a1b      	lsrs	r3, r3, #8
 8003586:	0719      	lsls	r1, r3, #28
 8003588:	bf04      	itt	eq
 800358a:	091b      	lsreq	r3, r3, #4
 800358c:	3004      	addeq	r0, #4
 800358e:	0799      	lsls	r1, r3, #30
 8003590:	bf04      	itt	eq
 8003592:	089b      	lsreq	r3, r3, #2
 8003594:	3002      	addeq	r0, #2
 8003596:	07d9      	lsls	r1, r3, #31
 8003598:	d403      	bmi.n	80035a2 <__lo0bits+0x4e>
 800359a:	085b      	lsrs	r3, r3, #1
 800359c:	f100 0001 	add.w	r0, r0, #1
 80035a0:	d003      	beq.n	80035aa <__lo0bits+0x56>
 80035a2:	6013      	str	r3, [r2, #0]
 80035a4:	4770      	bx	lr
 80035a6:	2000      	movs	r0, #0
 80035a8:	4770      	bx	lr
 80035aa:	2020      	movs	r0, #32
 80035ac:	4770      	bx	lr
	...

080035b0 <__i2b>:
 80035b0:	b510      	push	{r4, lr}
 80035b2:	460c      	mov	r4, r1
 80035b4:	2101      	movs	r1, #1
 80035b6:	f7ff ff05 	bl	80033c4 <_Balloc>
 80035ba:	4602      	mov	r2, r0
 80035bc:	b928      	cbnz	r0, 80035ca <__i2b+0x1a>
 80035be:	f240 1145 	movw	r1, #325	; 0x145
 80035c2:	4b04      	ldr	r3, [pc, #16]	; (80035d4 <__i2b+0x24>)
 80035c4:	4804      	ldr	r0, [pc, #16]	; (80035d8 <__i2b+0x28>)
 80035c6:	f000 fb65 	bl	8003c94 <__assert_func>
 80035ca:	2301      	movs	r3, #1
 80035cc:	6144      	str	r4, [r0, #20]
 80035ce:	6103      	str	r3, [r0, #16]
 80035d0:	bd10      	pop	{r4, pc}
 80035d2:	bf00      	nop
 80035d4:	0800449c 	.word	0x0800449c
 80035d8:	080044be 	.word	0x080044be

080035dc <__multiply>:
 80035dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80035e0:	4691      	mov	r9, r2
 80035e2:	690a      	ldr	r2, [r1, #16]
 80035e4:	f8d9 3010 	ldr.w	r3, [r9, #16]
 80035e8:	460c      	mov	r4, r1
 80035ea:	429a      	cmp	r2, r3
 80035ec:	bfbe      	ittt	lt
 80035ee:	460b      	movlt	r3, r1
 80035f0:	464c      	movlt	r4, r9
 80035f2:	4699      	movlt	r9, r3
 80035f4:	6927      	ldr	r7, [r4, #16]
 80035f6:	f8d9 a010 	ldr.w	sl, [r9, #16]
 80035fa:	68a3      	ldr	r3, [r4, #8]
 80035fc:	6861      	ldr	r1, [r4, #4]
 80035fe:	eb07 060a 	add.w	r6, r7, sl
 8003602:	42b3      	cmp	r3, r6
 8003604:	b085      	sub	sp, #20
 8003606:	bfb8      	it	lt
 8003608:	3101      	addlt	r1, #1
 800360a:	f7ff fedb 	bl	80033c4 <_Balloc>
 800360e:	b930      	cbnz	r0, 800361e <__multiply+0x42>
 8003610:	4602      	mov	r2, r0
 8003612:	f44f 71b1 	mov.w	r1, #354	; 0x162
 8003616:	4b43      	ldr	r3, [pc, #268]	; (8003724 <__multiply+0x148>)
 8003618:	4843      	ldr	r0, [pc, #268]	; (8003728 <__multiply+0x14c>)
 800361a:	f000 fb3b 	bl	8003c94 <__assert_func>
 800361e:	f100 0514 	add.w	r5, r0, #20
 8003622:	462b      	mov	r3, r5
 8003624:	2200      	movs	r2, #0
 8003626:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800362a:	4543      	cmp	r3, r8
 800362c:	d321      	bcc.n	8003672 <__multiply+0x96>
 800362e:	f104 0314 	add.w	r3, r4, #20
 8003632:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8003636:	f109 0314 	add.w	r3, r9, #20
 800363a:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 800363e:	9202      	str	r2, [sp, #8]
 8003640:	1b3a      	subs	r2, r7, r4
 8003642:	3a15      	subs	r2, #21
 8003644:	f022 0203 	bic.w	r2, r2, #3
 8003648:	3204      	adds	r2, #4
 800364a:	f104 0115 	add.w	r1, r4, #21
 800364e:	428f      	cmp	r7, r1
 8003650:	bf38      	it	cc
 8003652:	2204      	movcc	r2, #4
 8003654:	9201      	str	r2, [sp, #4]
 8003656:	9a02      	ldr	r2, [sp, #8]
 8003658:	9303      	str	r3, [sp, #12]
 800365a:	429a      	cmp	r2, r3
 800365c:	d80c      	bhi.n	8003678 <__multiply+0x9c>
 800365e:	2e00      	cmp	r6, #0
 8003660:	dd03      	ble.n	800366a <__multiply+0x8e>
 8003662:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8003666:	2b00      	cmp	r3, #0
 8003668:	d05a      	beq.n	8003720 <__multiply+0x144>
 800366a:	6106      	str	r6, [r0, #16]
 800366c:	b005      	add	sp, #20
 800366e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003672:	f843 2b04 	str.w	r2, [r3], #4
 8003676:	e7d8      	b.n	800362a <__multiply+0x4e>
 8003678:	f8b3 a000 	ldrh.w	sl, [r3]
 800367c:	f1ba 0f00 	cmp.w	sl, #0
 8003680:	d023      	beq.n	80036ca <__multiply+0xee>
 8003682:	46a9      	mov	r9, r5
 8003684:	f04f 0c00 	mov.w	ip, #0
 8003688:	f104 0e14 	add.w	lr, r4, #20
 800368c:	f85e 2b04 	ldr.w	r2, [lr], #4
 8003690:	f8d9 1000 	ldr.w	r1, [r9]
 8003694:	fa1f fb82 	uxth.w	fp, r2
 8003698:	b289      	uxth	r1, r1
 800369a:	fb0a 110b 	mla	r1, sl, fp, r1
 800369e:	4461      	add	r1, ip
 80036a0:	f8d9 c000 	ldr.w	ip, [r9]
 80036a4:	0c12      	lsrs	r2, r2, #16
 80036a6:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 80036aa:	fb0a c202 	mla	r2, sl, r2, ip
 80036ae:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 80036b2:	b289      	uxth	r1, r1
 80036b4:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80036b8:	4577      	cmp	r7, lr
 80036ba:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 80036be:	f849 1b04 	str.w	r1, [r9], #4
 80036c2:	d8e3      	bhi.n	800368c <__multiply+0xb0>
 80036c4:	9a01      	ldr	r2, [sp, #4]
 80036c6:	f845 c002 	str.w	ip, [r5, r2]
 80036ca:	9a03      	ldr	r2, [sp, #12]
 80036cc:	3304      	adds	r3, #4
 80036ce:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 80036d2:	f1b9 0f00 	cmp.w	r9, #0
 80036d6:	d021      	beq.n	800371c <__multiply+0x140>
 80036d8:	46ae      	mov	lr, r5
 80036da:	f04f 0a00 	mov.w	sl, #0
 80036de:	6829      	ldr	r1, [r5, #0]
 80036e0:	f104 0c14 	add.w	ip, r4, #20
 80036e4:	f8bc b000 	ldrh.w	fp, [ip]
 80036e8:	f8be 2002 	ldrh.w	r2, [lr, #2]
 80036ec:	b289      	uxth	r1, r1
 80036ee:	fb09 220b 	mla	r2, r9, fp, r2
 80036f2:	4452      	add	r2, sl
 80036f4:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80036f8:	f84e 1b04 	str.w	r1, [lr], #4
 80036fc:	f85c 1b04 	ldr.w	r1, [ip], #4
 8003700:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8003704:	f8be 1000 	ldrh.w	r1, [lr]
 8003708:	4567      	cmp	r7, ip
 800370a:	fb09 110a 	mla	r1, r9, sl, r1
 800370e:	eb01 4112 	add.w	r1, r1, r2, lsr #16
 8003712:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8003716:	d8e5      	bhi.n	80036e4 <__multiply+0x108>
 8003718:	9a01      	ldr	r2, [sp, #4]
 800371a:	50a9      	str	r1, [r5, r2]
 800371c:	3504      	adds	r5, #4
 800371e:	e79a      	b.n	8003656 <__multiply+0x7a>
 8003720:	3e01      	subs	r6, #1
 8003722:	e79c      	b.n	800365e <__multiply+0x82>
 8003724:	0800449c 	.word	0x0800449c
 8003728:	080044be 	.word	0x080044be

0800372c <__pow5mult>:
 800372c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003730:	4615      	mov	r5, r2
 8003732:	f012 0203 	ands.w	r2, r2, #3
 8003736:	4606      	mov	r6, r0
 8003738:	460f      	mov	r7, r1
 800373a:	d007      	beq.n	800374c <__pow5mult+0x20>
 800373c:	4c25      	ldr	r4, [pc, #148]	; (80037d4 <__pow5mult+0xa8>)
 800373e:	3a01      	subs	r2, #1
 8003740:	2300      	movs	r3, #0
 8003742:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8003746:	f7ff fe9f 	bl	8003488 <__multadd>
 800374a:	4607      	mov	r7, r0
 800374c:	10ad      	asrs	r5, r5, #2
 800374e:	d03d      	beq.n	80037cc <__pow5mult+0xa0>
 8003750:	69f4      	ldr	r4, [r6, #28]
 8003752:	b97c      	cbnz	r4, 8003774 <__pow5mult+0x48>
 8003754:	2010      	movs	r0, #16
 8003756:	f7ff fcd7 	bl	8003108 <malloc>
 800375a:	4602      	mov	r2, r0
 800375c:	61f0      	str	r0, [r6, #28]
 800375e:	b928      	cbnz	r0, 800376c <__pow5mult+0x40>
 8003760:	f240 11b3 	movw	r1, #435	; 0x1b3
 8003764:	4b1c      	ldr	r3, [pc, #112]	; (80037d8 <__pow5mult+0xac>)
 8003766:	481d      	ldr	r0, [pc, #116]	; (80037dc <__pow5mult+0xb0>)
 8003768:	f000 fa94 	bl	8003c94 <__assert_func>
 800376c:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8003770:	6004      	str	r4, [r0, #0]
 8003772:	60c4      	str	r4, [r0, #12]
 8003774:	f8d6 801c 	ldr.w	r8, [r6, #28]
 8003778:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800377c:	b94c      	cbnz	r4, 8003792 <__pow5mult+0x66>
 800377e:	f240 2171 	movw	r1, #625	; 0x271
 8003782:	4630      	mov	r0, r6
 8003784:	f7ff ff14 	bl	80035b0 <__i2b>
 8003788:	2300      	movs	r3, #0
 800378a:	4604      	mov	r4, r0
 800378c:	f8c8 0008 	str.w	r0, [r8, #8]
 8003790:	6003      	str	r3, [r0, #0]
 8003792:	f04f 0900 	mov.w	r9, #0
 8003796:	07eb      	lsls	r3, r5, #31
 8003798:	d50a      	bpl.n	80037b0 <__pow5mult+0x84>
 800379a:	4639      	mov	r1, r7
 800379c:	4622      	mov	r2, r4
 800379e:	4630      	mov	r0, r6
 80037a0:	f7ff ff1c 	bl	80035dc <__multiply>
 80037a4:	4680      	mov	r8, r0
 80037a6:	4639      	mov	r1, r7
 80037a8:	4630      	mov	r0, r6
 80037aa:	f7ff fe4b 	bl	8003444 <_Bfree>
 80037ae:	4647      	mov	r7, r8
 80037b0:	106d      	asrs	r5, r5, #1
 80037b2:	d00b      	beq.n	80037cc <__pow5mult+0xa0>
 80037b4:	6820      	ldr	r0, [r4, #0]
 80037b6:	b938      	cbnz	r0, 80037c8 <__pow5mult+0x9c>
 80037b8:	4622      	mov	r2, r4
 80037ba:	4621      	mov	r1, r4
 80037bc:	4630      	mov	r0, r6
 80037be:	f7ff ff0d 	bl	80035dc <__multiply>
 80037c2:	6020      	str	r0, [r4, #0]
 80037c4:	f8c0 9000 	str.w	r9, [r0]
 80037c8:	4604      	mov	r4, r0
 80037ca:	e7e4      	b.n	8003796 <__pow5mult+0x6a>
 80037cc:	4638      	mov	r0, r7
 80037ce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80037d2:	bf00      	nop
 80037d4:	08004608 	.word	0x08004608
 80037d8:	0800442d 	.word	0x0800442d
 80037dc:	080044be 	.word	0x080044be

080037e0 <__lshift>:
 80037e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80037e4:	460c      	mov	r4, r1
 80037e6:	4607      	mov	r7, r0
 80037e8:	4691      	mov	r9, r2
 80037ea:	6923      	ldr	r3, [r4, #16]
 80037ec:	6849      	ldr	r1, [r1, #4]
 80037ee:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80037f2:	68a3      	ldr	r3, [r4, #8]
 80037f4:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80037f8:	f108 0601 	add.w	r6, r8, #1
 80037fc:	42b3      	cmp	r3, r6
 80037fe:	db0b      	blt.n	8003818 <__lshift+0x38>
 8003800:	4638      	mov	r0, r7
 8003802:	f7ff fddf 	bl	80033c4 <_Balloc>
 8003806:	4605      	mov	r5, r0
 8003808:	b948      	cbnz	r0, 800381e <__lshift+0x3e>
 800380a:	4602      	mov	r2, r0
 800380c:	f44f 71ef 	mov.w	r1, #478	; 0x1de
 8003810:	4b27      	ldr	r3, [pc, #156]	; (80038b0 <__lshift+0xd0>)
 8003812:	4828      	ldr	r0, [pc, #160]	; (80038b4 <__lshift+0xd4>)
 8003814:	f000 fa3e 	bl	8003c94 <__assert_func>
 8003818:	3101      	adds	r1, #1
 800381a:	005b      	lsls	r3, r3, #1
 800381c:	e7ee      	b.n	80037fc <__lshift+0x1c>
 800381e:	2300      	movs	r3, #0
 8003820:	f100 0114 	add.w	r1, r0, #20
 8003824:	f100 0210 	add.w	r2, r0, #16
 8003828:	4618      	mov	r0, r3
 800382a:	4553      	cmp	r3, sl
 800382c:	db33      	blt.n	8003896 <__lshift+0xb6>
 800382e:	6920      	ldr	r0, [r4, #16]
 8003830:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8003834:	f104 0314 	add.w	r3, r4, #20
 8003838:	f019 091f 	ands.w	r9, r9, #31
 800383c:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8003840:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8003844:	d02b      	beq.n	800389e <__lshift+0xbe>
 8003846:	468a      	mov	sl, r1
 8003848:	2200      	movs	r2, #0
 800384a:	f1c9 0e20 	rsb	lr, r9, #32
 800384e:	6818      	ldr	r0, [r3, #0]
 8003850:	fa00 f009 	lsl.w	r0, r0, r9
 8003854:	4310      	orrs	r0, r2
 8003856:	f84a 0b04 	str.w	r0, [sl], #4
 800385a:	f853 2b04 	ldr.w	r2, [r3], #4
 800385e:	459c      	cmp	ip, r3
 8003860:	fa22 f20e 	lsr.w	r2, r2, lr
 8003864:	d8f3      	bhi.n	800384e <__lshift+0x6e>
 8003866:	ebac 0304 	sub.w	r3, ip, r4
 800386a:	3b15      	subs	r3, #21
 800386c:	f023 0303 	bic.w	r3, r3, #3
 8003870:	3304      	adds	r3, #4
 8003872:	f104 0015 	add.w	r0, r4, #21
 8003876:	4584      	cmp	ip, r0
 8003878:	bf38      	it	cc
 800387a:	2304      	movcc	r3, #4
 800387c:	50ca      	str	r2, [r1, r3]
 800387e:	b10a      	cbz	r2, 8003884 <__lshift+0xa4>
 8003880:	f108 0602 	add.w	r6, r8, #2
 8003884:	3e01      	subs	r6, #1
 8003886:	4638      	mov	r0, r7
 8003888:	4621      	mov	r1, r4
 800388a:	612e      	str	r6, [r5, #16]
 800388c:	f7ff fdda 	bl	8003444 <_Bfree>
 8003890:	4628      	mov	r0, r5
 8003892:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003896:	f842 0f04 	str.w	r0, [r2, #4]!
 800389a:	3301      	adds	r3, #1
 800389c:	e7c5      	b.n	800382a <__lshift+0x4a>
 800389e:	3904      	subs	r1, #4
 80038a0:	f853 2b04 	ldr.w	r2, [r3], #4
 80038a4:	459c      	cmp	ip, r3
 80038a6:	f841 2f04 	str.w	r2, [r1, #4]!
 80038aa:	d8f9      	bhi.n	80038a0 <__lshift+0xc0>
 80038ac:	e7ea      	b.n	8003884 <__lshift+0xa4>
 80038ae:	bf00      	nop
 80038b0:	0800449c 	.word	0x0800449c
 80038b4:	080044be 	.word	0x080044be

080038b8 <__mcmp>:
 80038b8:	4603      	mov	r3, r0
 80038ba:	690a      	ldr	r2, [r1, #16]
 80038bc:	6900      	ldr	r0, [r0, #16]
 80038be:	b530      	push	{r4, r5, lr}
 80038c0:	1a80      	subs	r0, r0, r2
 80038c2:	d10d      	bne.n	80038e0 <__mcmp+0x28>
 80038c4:	3314      	adds	r3, #20
 80038c6:	3114      	adds	r1, #20
 80038c8:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 80038cc:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 80038d0:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 80038d4:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 80038d8:	4295      	cmp	r5, r2
 80038da:	d002      	beq.n	80038e2 <__mcmp+0x2a>
 80038dc:	d304      	bcc.n	80038e8 <__mcmp+0x30>
 80038de:	2001      	movs	r0, #1
 80038e0:	bd30      	pop	{r4, r5, pc}
 80038e2:	42a3      	cmp	r3, r4
 80038e4:	d3f4      	bcc.n	80038d0 <__mcmp+0x18>
 80038e6:	e7fb      	b.n	80038e0 <__mcmp+0x28>
 80038e8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80038ec:	e7f8      	b.n	80038e0 <__mcmp+0x28>
	...

080038f0 <__mdiff>:
 80038f0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80038f4:	460d      	mov	r5, r1
 80038f6:	4607      	mov	r7, r0
 80038f8:	4611      	mov	r1, r2
 80038fa:	4628      	mov	r0, r5
 80038fc:	4614      	mov	r4, r2
 80038fe:	f7ff ffdb 	bl	80038b8 <__mcmp>
 8003902:	1e06      	subs	r6, r0, #0
 8003904:	d111      	bne.n	800392a <__mdiff+0x3a>
 8003906:	4631      	mov	r1, r6
 8003908:	4638      	mov	r0, r7
 800390a:	f7ff fd5b 	bl	80033c4 <_Balloc>
 800390e:	4602      	mov	r2, r0
 8003910:	b928      	cbnz	r0, 800391e <__mdiff+0x2e>
 8003912:	f240 2137 	movw	r1, #567	; 0x237
 8003916:	4b3a      	ldr	r3, [pc, #232]	; (8003a00 <__mdiff+0x110>)
 8003918:	483a      	ldr	r0, [pc, #232]	; (8003a04 <__mdiff+0x114>)
 800391a:	f000 f9bb 	bl	8003c94 <__assert_func>
 800391e:	2301      	movs	r3, #1
 8003920:	e9c0 3604 	strd	r3, r6, [r0, #16]
 8003924:	4610      	mov	r0, r2
 8003926:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800392a:	bfa4      	itt	ge
 800392c:	4623      	movge	r3, r4
 800392e:	462c      	movge	r4, r5
 8003930:	4638      	mov	r0, r7
 8003932:	6861      	ldr	r1, [r4, #4]
 8003934:	bfa6      	itte	ge
 8003936:	461d      	movge	r5, r3
 8003938:	2600      	movge	r6, #0
 800393a:	2601      	movlt	r6, #1
 800393c:	f7ff fd42 	bl	80033c4 <_Balloc>
 8003940:	4602      	mov	r2, r0
 8003942:	b918      	cbnz	r0, 800394c <__mdiff+0x5c>
 8003944:	f240 2145 	movw	r1, #581	; 0x245
 8003948:	4b2d      	ldr	r3, [pc, #180]	; (8003a00 <__mdiff+0x110>)
 800394a:	e7e5      	b.n	8003918 <__mdiff+0x28>
 800394c:	f102 0814 	add.w	r8, r2, #20
 8003950:	46c2      	mov	sl, r8
 8003952:	f04f 0c00 	mov.w	ip, #0
 8003956:	6927      	ldr	r7, [r4, #16]
 8003958:	60c6      	str	r6, [r0, #12]
 800395a:	692e      	ldr	r6, [r5, #16]
 800395c:	f104 0014 	add.w	r0, r4, #20
 8003960:	f105 0914 	add.w	r9, r5, #20
 8003964:	eb00 0e87 	add.w	lr, r0, r7, lsl #2
 8003968:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 800396c:	3410      	adds	r4, #16
 800396e:	f854 bf04 	ldr.w	fp, [r4, #4]!
 8003972:	f859 3b04 	ldr.w	r3, [r9], #4
 8003976:	fa1f f18b 	uxth.w	r1, fp
 800397a:	4461      	add	r1, ip
 800397c:	fa1f fc83 	uxth.w	ip, r3
 8003980:	0c1b      	lsrs	r3, r3, #16
 8003982:	eba1 010c 	sub.w	r1, r1, ip
 8003986:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800398a:	eb03 4321 	add.w	r3, r3, r1, asr #16
 800398e:	b289      	uxth	r1, r1
 8003990:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8003994:	454e      	cmp	r6, r9
 8003996:	ea4f 4c23 	mov.w	ip, r3, asr #16
 800399a:	f84a 1b04 	str.w	r1, [sl], #4
 800399e:	d8e6      	bhi.n	800396e <__mdiff+0x7e>
 80039a0:	1b73      	subs	r3, r6, r5
 80039a2:	3b15      	subs	r3, #21
 80039a4:	f023 0303 	bic.w	r3, r3, #3
 80039a8:	3515      	adds	r5, #21
 80039aa:	3304      	adds	r3, #4
 80039ac:	42ae      	cmp	r6, r5
 80039ae:	bf38      	it	cc
 80039b0:	2304      	movcc	r3, #4
 80039b2:	4418      	add	r0, r3
 80039b4:	4443      	add	r3, r8
 80039b6:	461e      	mov	r6, r3
 80039b8:	4605      	mov	r5, r0
 80039ba:	4575      	cmp	r5, lr
 80039bc:	d30e      	bcc.n	80039dc <__mdiff+0xec>
 80039be:	f10e 0103 	add.w	r1, lr, #3
 80039c2:	1a09      	subs	r1, r1, r0
 80039c4:	f021 0103 	bic.w	r1, r1, #3
 80039c8:	3803      	subs	r0, #3
 80039ca:	4586      	cmp	lr, r0
 80039cc:	bf38      	it	cc
 80039ce:	2100      	movcc	r1, #0
 80039d0:	440b      	add	r3, r1
 80039d2:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80039d6:	b189      	cbz	r1, 80039fc <__mdiff+0x10c>
 80039d8:	6117      	str	r7, [r2, #16]
 80039da:	e7a3      	b.n	8003924 <__mdiff+0x34>
 80039dc:	f855 8b04 	ldr.w	r8, [r5], #4
 80039e0:	fa1f f188 	uxth.w	r1, r8
 80039e4:	4461      	add	r1, ip
 80039e6:	140c      	asrs	r4, r1, #16
 80039e8:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 80039ec:	b289      	uxth	r1, r1
 80039ee:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 80039f2:	ea4f 4c24 	mov.w	ip, r4, asr #16
 80039f6:	f846 1b04 	str.w	r1, [r6], #4
 80039fa:	e7de      	b.n	80039ba <__mdiff+0xca>
 80039fc:	3f01      	subs	r7, #1
 80039fe:	e7e8      	b.n	80039d2 <__mdiff+0xe2>
 8003a00:	0800449c 	.word	0x0800449c
 8003a04:	080044be 	.word	0x080044be

08003a08 <__d2b>:
 8003a08:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003a0a:	2101      	movs	r1, #1
 8003a0c:	4617      	mov	r7, r2
 8003a0e:	461c      	mov	r4, r3
 8003a10:	9e08      	ldr	r6, [sp, #32]
 8003a12:	f7ff fcd7 	bl	80033c4 <_Balloc>
 8003a16:	4605      	mov	r5, r0
 8003a18:	b930      	cbnz	r0, 8003a28 <__d2b+0x20>
 8003a1a:	4602      	mov	r2, r0
 8003a1c:	f240 310f 	movw	r1, #783	; 0x30f
 8003a20:	4b22      	ldr	r3, [pc, #136]	; (8003aac <__d2b+0xa4>)
 8003a22:	4823      	ldr	r0, [pc, #140]	; (8003ab0 <__d2b+0xa8>)
 8003a24:	f000 f936 	bl	8003c94 <__assert_func>
 8003a28:	f3c4 0313 	ubfx	r3, r4, #0, #20
 8003a2c:	f3c4 540a 	ubfx	r4, r4, #20, #11
 8003a30:	bb24      	cbnz	r4, 8003a7c <__d2b+0x74>
 8003a32:	2f00      	cmp	r7, #0
 8003a34:	9301      	str	r3, [sp, #4]
 8003a36:	d026      	beq.n	8003a86 <__d2b+0x7e>
 8003a38:	4668      	mov	r0, sp
 8003a3a:	9700      	str	r7, [sp, #0]
 8003a3c:	f7ff fd8a 	bl	8003554 <__lo0bits>
 8003a40:	e9dd 1200 	ldrd	r1, r2, [sp]
 8003a44:	b1e8      	cbz	r0, 8003a82 <__d2b+0x7a>
 8003a46:	f1c0 0320 	rsb	r3, r0, #32
 8003a4a:	fa02 f303 	lsl.w	r3, r2, r3
 8003a4e:	430b      	orrs	r3, r1
 8003a50:	40c2      	lsrs	r2, r0
 8003a52:	616b      	str	r3, [r5, #20]
 8003a54:	9201      	str	r2, [sp, #4]
 8003a56:	9b01      	ldr	r3, [sp, #4]
 8003a58:	2b00      	cmp	r3, #0
 8003a5a:	bf14      	ite	ne
 8003a5c:	2102      	movne	r1, #2
 8003a5e:	2101      	moveq	r1, #1
 8003a60:	61ab      	str	r3, [r5, #24]
 8003a62:	6129      	str	r1, [r5, #16]
 8003a64:	b1bc      	cbz	r4, 8003a96 <__d2b+0x8e>
 8003a66:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 8003a6a:	4404      	add	r4, r0
 8003a6c:	6034      	str	r4, [r6, #0]
 8003a6e:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8003a72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003a74:	6018      	str	r0, [r3, #0]
 8003a76:	4628      	mov	r0, r5
 8003a78:	b003      	add	sp, #12
 8003a7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003a7c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8003a80:	e7d7      	b.n	8003a32 <__d2b+0x2a>
 8003a82:	6169      	str	r1, [r5, #20]
 8003a84:	e7e7      	b.n	8003a56 <__d2b+0x4e>
 8003a86:	a801      	add	r0, sp, #4
 8003a88:	f7ff fd64 	bl	8003554 <__lo0bits>
 8003a8c:	9b01      	ldr	r3, [sp, #4]
 8003a8e:	2101      	movs	r1, #1
 8003a90:	616b      	str	r3, [r5, #20]
 8003a92:	3020      	adds	r0, #32
 8003a94:	e7e5      	b.n	8003a62 <__d2b+0x5a>
 8003a96:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8003a9a:	eb05 0381 	add.w	r3, r5, r1, lsl #2
 8003a9e:	6030      	str	r0, [r6, #0]
 8003aa0:	6918      	ldr	r0, [r3, #16]
 8003aa2:	f7ff fd37 	bl	8003514 <__hi0bits>
 8003aa6:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 8003aaa:	e7e2      	b.n	8003a72 <__d2b+0x6a>
 8003aac:	0800449c 	.word	0x0800449c
 8003ab0:	080044be 	.word	0x080044be

08003ab4 <__sread>:
 8003ab4:	b510      	push	{r4, lr}
 8003ab6:	460c      	mov	r4, r1
 8003ab8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003abc:	f000 f8a8 	bl	8003c10 <_read_r>
 8003ac0:	2800      	cmp	r0, #0
 8003ac2:	bfab      	itete	ge
 8003ac4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8003ac6:	89a3      	ldrhlt	r3, [r4, #12]
 8003ac8:	181b      	addge	r3, r3, r0
 8003aca:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8003ace:	bfac      	ite	ge
 8003ad0:	6563      	strge	r3, [r4, #84]	; 0x54
 8003ad2:	81a3      	strhlt	r3, [r4, #12]
 8003ad4:	bd10      	pop	{r4, pc}

08003ad6 <__swrite>:
 8003ad6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003ada:	461f      	mov	r7, r3
 8003adc:	898b      	ldrh	r3, [r1, #12]
 8003ade:	4605      	mov	r5, r0
 8003ae0:	05db      	lsls	r3, r3, #23
 8003ae2:	460c      	mov	r4, r1
 8003ae4:	4616      	mov	r6, r2
 8003ae6:	d505      	bpl.n	8003af4 <__swrite+0x1e>
 8003ae8:	2302      	movs	r3, #2
 8003aea:	2200      	movs	r2, #0
 8003aec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003af0:	f000 f87c 	bl	8003bec <_lseek_r>
 8003af4:	89a3      	ldrh	r3, [r4, #12]
 8003af6:	4632      	mov	r2, r6
 8003af8:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8003afc:	81a3      	strh	r3, [r4, #12]
 8003afe:	4628      	mov	r0, r5
 8003b00:	463b      	mov	r3, r7
 8003b02:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003b06:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003b0a:	f000 b8a3 	b.w	8003c54 <_write_r>

08003b0e <__sseek>:
 8003b0e:	b510      	push	{r4, lr}
 8003b10:	460c      	mov	r4, r1
 8003b12:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003b16:	f000 f869 	bl	8003bec <_lseek_r>
 8003b1a:	1c43      	adds	r3, r0, #1
 8003b1c:	89a3      	ldrh	r3, [r4, #12]
 8003b1e:	bf15      	itete	ne
 8003b20:	6560      	strne	r0, [r4, #84]	; 0x54
 8003b22:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8003b26:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8003b2a:	81a3      	strheq	r3, [r4, #12]
 8003b2c:	bf18      	it	ne
 8003b2e:	81a3      	strhne	r3, [r4, #12]
 8003b30:	bd10      	pop	{r4, pc}

08003b32 <__sclose>:
 8003b32:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003b36:	f000 b849 	b.w	8003bcc <_close_r>

08003b3a <_realloc_r>:
 8003b3a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003b3e:	4680      	mov	r8, r0
 8003b40:	4614      	mov	r4, r2
 8003b42:	460e      	mov	r6, r1
 8003b44:	b921      	cbnz	r1, 8003b50 <_realloc_r+0x16>
 8003b46:	4611      	mov	r1, r2
 8003b48:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003b4c:	f7ff bb04 	b.w	8003158 <_malloc_r>
 8003b50:	b92a      	cbnz	r2, 8003b5e <_realloc_r+0x24>
 8003b52:	f000 f8d1 	bl	8003cf8 <_free_r>
 8003b56:	4625      	mov	r5, r4
 8003b58:	4628      	mov	r0, r5
 8003b5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003b5e:	f000 f925 	bl	8003dac <_malloc_usable_size_r>
 8003b62:	4284      	cmp	r4, r0
 8003b64:	4607      	mov	r7, r0
 8003b66:	d802      	bhi.n	8003b6e <_realloc_r+0x34>
 8003b68:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8003b6c:	d812      	bhi.n	8003b94 <_realloc_r+0x5a>
 8003b6e:	4621      	mov	r1, r4
 8003b70:	4640      	mov	r0, r8
 8003b72:	f7ff faf1 	bl	8003158 <_malloc_r>
 8003b76:	4605      	mov	r5, r0
 8003b78:	2800      	cmp	r0, #0
 8003b7a:	d0ed      	beq.n	8003b58 <_realloc_r+0x1e>
 8003b7c:	42bc      	cmp	r4, r7
 8003b7e:	4622      	mov	r2, r4
 8003b80:	4631      	mov	r1, r6
 8003b82:	bf28      	it	cs
 8003b84:	463a      	movcs	r2, r7
 8003b86:	f000 f877 	bl	8003c78 <memcpy>
 8003b8a:	4631      	mov	r1, r6
 8003b8c:	4640      	mov	r0, r8
 8003b8e:	f000 f8b3 	bl	8003cf8 <_free_r>
 8003b92:	e7e1      	b.n	8003b58 <_realloc_r+0x1e>
 8003b94:	4635      	mov	r5, r6
 8003b96:	e7df      	b.n	8003b58 <_realloc_r+0x1e>

08003b98 <memmove>:
 8003b98:	4288      	cmp	r0, r1
 8003b9a:	b510      	push	{r4, lr}
 8003b9c:	eb01 0402 	add.w	r4, r1, r2
 8003ba0:	d902      	bls.n	8003ba8 <memmove+0x10>
 8003ba2:	4284      	cmp	r4, r0
 8003ba4:	4623      	mov	r3, r4
 8003ba6:	d807      	bhi.n	8003bb8 <memmove+0x20>
 8003ba8:	1e43      	subs	r3, r0, #1
 8003baa:	42a1      	cmp	r1, r4
 8003bac:	d008      	beq.n	8003bc0 <memmove+0x28>
 8003bae:	f811 2b01 	ldrb.w	r2, [r1], #1
 8003bb2:	f803 2f01 	strb.w	r2, [r3, #1]!
 8003bb6:	e7f8      	b.n	8003baa <memmove+0x12>
 8003bb8:	4601      	mov	r1, r0
 8003bba:	4402      	add	r2, r0
 8003bbc:	428a      	cmp	r2, r1
 8003bbe:	d100      	bne.n	8003bc2 <memmove+0x2a>
 8003bc0:	bd10      	pop	{r4, pc}
 8003bc2:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8003bc6:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8003bca:	e7f7      	b.n	8003bbc <memmove+0x24>

08003bcc <_close_r>:
 8003bcc:	b538      	push	{r3, r4, r5, lr}
 8003bce:	2300      	movs	r3, #0
 8003bd0:	4d05      	ldr	r5, [pc, #20]	; (8003be8 <_close_r+0x1c>)
 8003bd2:	4604      	mov	r4, r0
 8003bd4:	4608      	mov	r0, r1
 8003bd6:	602b      	str	r3, [r5, #0]
 8003bd8:	f7fd fca4 	bl	8001524 <_close>
 8003bdc:	1c43      	adds	r3, r0, #1
 8003bde:	d102      	bne.n	8003be6 <_close_r+0x1a>
 8003be0:	682b      	ldr	r3, [r5, #0]
 8003be2:	b103      	cbz	r3, 8003be6 <_close_r+0x1a>
 8003be4:	6023      	str	r3, [r4, #0]
 8003be6:	bd38      	pop	{r3, r4, r5, pc}
 8003be8:	20000370 	.word	0x20000370

08003bec <_lseek_r>:
 8003bec:	b538      	push	{r3, r4, r5, lr}
 8003bee:	4604      	mov	r4, r0
 8003bf0:	4608      	mov	r0, r1
 8003bf2:	4611      	mov	r1, r2
 8003bf4:	2200      	movs	r2, #0
 8003bf6:	4d05      	ldr	r5, [pc, #20]	; (8003c0c <_lseek_r+0x20>)
 8003bf8:	602a      	str	r2, [r5, #0]
 8003bfa:	461a      	mov	r2, r3
 8003bfc:	f7fd fcb6 	bl	800156c <_lseek>
 8003c00:	1c43      	adds	r3, r0, #1
 8003c02:	d102      	bne.n	8003c0a <_lseek_r+0x1e>
 8003c04:	682b      	ldr	r3, [r5, #0]
 8003c06:	b103      	cbz	r3, 8003c0a <_lseek_r+0x1e>
 8003c08:	6023      	str	r3, [r4, #0]
 8003c0a:	bd38      	pop	{r3, r4, r5, pc}
 8003c0c:	20000370 	.word	0x20000370

08003c10 <_read_r>:
 8003c10:	b538      	push	{r3, r4, r5, lr}
 8003c12:	4604      	mov	r4, r0
 8003c14:	4608      	mov	r0, r1
 8003c16:	4611      	mov	r1, r2
 8003c18:	2200      	movs	r2, #0
 8003c1a:	4d05      	ldr	r5, [pc, #20]	; (8003c30 <_read_r+0x20>)
 8003c1c:	602a      	str	r2, [r5, #0]
 8003c1e:	461a      	mov	r2, r3
 8003c20:	f7fd fc47 	bl	80014b2 <_read>
 8003c24:	1c43      	adds	r3, r0, #1
 8003c26:	d102      	bne.n	8003c2e <_read_r+0x1e>
 8003c28:	682b      	ldr	r3, [r5, #0]
 8003c2a:	b103      	cbz	r3, 8003c2e <_read_r+0x1e>
 8003c2c:	6023      	str	r3, [r4, #0]
 8003c2e:	bd38      	pop	{r3, r4, r5, pc}
 8003c30:	20000370 	.word	0x20000370

08003c34 <_sbrk_r>:
 8003c34:	b538      	push	{r3, r4, r5, lr}
 8003c36:	2300      	movs	r3, #0
 8003c38:	4d05      	ldr	r5, [pc, #20]	; (8003c50 <_sbrk_r+0x1c>)
 8003c3a:	4604      	mov	r4, r0
 8003c3c:	4608      	mov	r0, r1
 8003c3e:	602b      	str	r3, [r5, #0]
 8003c40:	f7fd fca0 	bl	8001584 <_sbrk>
 8003c44:	1c43      	adds	r3, r0, #1
 8003c46:	d102      	bne.n	8003c4e <_sbrk_r+0x1a>
 8003c48:	682b      	ldr	r3, [r5, #0]
 8003c4a:	b103      	cbz	r3, 8003c4e <_sbrk_r+0x1a>
 8003c4c:	6023      	str	r3, [r4, #0]
 8003c4e:	bd38      	pop	{r3, r4, r5, pc}
 8003c50:	20000370 	.word	0x20000370

08003c54 <_write_r>:
 8003c54:	b538      	push	{r3, r4, r5, lr}
 8003c56:	4604      	mov	r4, r0
 8003c58:	4608      	mov	r0, r1
 8003c5a:	4611      	mov	r1, r2
 8003c5c:	2200      	movs	r2, #0
 8003c5e:	4d05      	ldr	r5, [pc, #20]	; (8003c74 <_write_r+0x20>)
 8003c60:	602a      	str	r2, [r5, #0]
 8003c62:	461a      	mov	r2, r3
 8003c64:	f7fd fc42 	bl	80014ec <_write>
 8003c68:	1c43      	adds	r3, r0, #1
 8003c6a:	d102      	bne.n	8003c72 <_write_r+0x1e>
 8003c6c:	682b      	ldr	r3, [r5, #0]
 8003c6e:	b103      	cbz	r3, 8003c72 <_write_r+0x1e>
 8003c70:	6023      	str	r3, [r4, #0]
 8003c72:	bd38      	pop	{r3, r4, r5, pc}
 8003c74:	20000370 	.word	0x20000370

08003c78 <memcpy>:
 8003c78:	440a      	add	r2, r1
 8003c7a:	4291      	cmp	r1, r2
 8003c7c:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8003c80:	d100      	bne.n	8003c84 <memcpy+0xc>
 8003c82:	4770      	bx	lr
 8003c84:	b510      	push	{r4, lr}
 8003c86:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003c8a:	4291      	cmp	r1, r2
 8003c8c:	f803 4f01 	strb.w	r4, [r3, #1]!
 8003c90:	d1f9      	bne.n	8003c86 <memcpy+0xe>
 8003c92:	bd10      	pop	{r4, pc}

08003c94 <__assert_func>:
 8003c94:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003c96:	4614      	mov	r4, r2
 8003c98:	461a      	mov	r2, r3
 8003c9a:	4b09      	ldr	r3, [pc, #36]	; (8003cc0 <__assert_func+0x2c>)
 8003c9c:	4605      	mov	r5, r0
 8003c9e:	681b      	ldr	r3, [r3, #0]
 8003ca0:	68d8      	ldr	r0, [r3, #12]
 8003ca2:	b14c      	cbz	r4, 8003cb8 <__assert_func+0x24>
 8003ca4:	4b07      	ldr	r3, [pc, #28]	; (8003cc4 <__assert_func+0x30>)
 8003ca6:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8003caa:	9100      	str	r1, [sp, #0]
 8003cac:	462b      	mov	r3, r5
 8003cae:	4906      	ldr	r1, [pc, #24]	; (8003cc8 <__assert_func+0x34>)
 8003cb0:	f000 f884 	bl	8003dbc <fiprintf>
 8003cb4:	f000 f8a1 	bl	8003dfa <abort>
 8003cb8:	4b04      	ldr	r3, [pc, #16]	; (8003ccc <__assert_func+0x38>)
 8003cba:	461c      	mov	r4, r3
 8003cbc:	e7f3      	b.n	8003ca6 <__assert_func+0x12>
 8003cbe:	bf00      	nop
 8003cc0:	20000058 	.word	0x20000058
 8003cc4:	0800471f 	.word	0x0800471f
 8003cc8:	0800472c 	.word	0x0800472c
 8003ccc:	0800475a 	.word	0x0800475a

08003cd0 <_calloc_r>:
 8003cd0:	b570      	push	{r4, r5, r6, lr}
 8003cd2:	fba1 5402 	umull	r5, r4, r1, r2
 8003cd6:	b934      	cbnz	r4, 8003ce6 <_calloc_r+0x16>
 8003cd8:	4629      	mov	r1, r5
 8003cda:	f7ff fa3d 	bl	8003158 <_malloc_r>
 8003cde:	4606      	mov	r6, r0
 8003ce0:	b928      	cbnz	r0, 8003cee <_calloc_r+0x1e>
 8003ce2:	4630      	mov	r0, r6
 8003ce4:	bd70      	pop	{r4, r5, r6, pc}
 8003ce6:	220c      	movs	r2, #12
 8003ce8:	2600      	movs	r6, #0
 8003cea:	6002      	str	r2, [r0, #0]
 8003cec:	e7f9      	b.n	8003ce2 <_calloc_r+0x12>
 8003cee:	462a      	mov	r2, r5
 8003cf0:	4621      	mov	r1, r4
 8003cf2:	f7fe f9fb 	bl	80020ec <memset>
 8003cf6:	e7f4      	b.n	8003ce2 <_calloc_r+0x12>

08003cf8 <_free_r>:
 8003cf8:	b538      	push	{r3, r4, r5, lr}
 8003cfa:	4605      	mov	r5, r0
 8003cfc:	2900      	cmp	r1, #0
 8003cfe:	d040      	beq.n	8003d82 <_free_r+0x8a>
 8003d00:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003d04:	1f0c      	subs	r4, r1, #4
 8003d06:	2b00      	cmp	r3, #0
 8003d08:	bfb8      	it	lt
 8003d0a:	18e4      	addlt	r4, r4, r3
 8003d0c:	f7ff fb4e 	bl	80033ac <__malloc_lock>
 8003d10:	4a1c      	ldr	r2, [pc, #112]	; (8003d84 <_free_r+0x8c>)
 8003d12:	6813      	ldr	r3, [r2, #0]
 8003d14:	b933      	cbnz	r3, 8003d24 <_free_r+0x2c>
 8003d16:	6063      	str	r3, [r4, #4]
 8003d18:	6014      	str	r4, [r2, #0]
 8003d1a:	4628      	mov	r0, r5
 8003d1c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003d20:	f7ff bb4a 	b.w	80033b8 <__malloc_unlock>
 8003d24:	42a3      	cmp	r3, r4
 8003d26:	d908      	bls.n	8003d3a <_free_r+0x42>
 8003d28:	6820      	ldr	r0, [r4, #0]
 8003d2a:	1821      	adds	r1, r4, r0
 8003d2c:	428b      	cmp	r3, r1
 8003d2e:	bf01      	itttt	eq
 8003d30:	6819      	ldreq	r1, [r3, #0]
 8003d32:	685b      	ldreq	r3, [r3, #4]
 8003d34:	1809      	addeq	r1, r1, r0
 8003d36:	6021      	streq	r1, [r4, #0]
 8003d38:	e7ed      	b.n	8003d16 <_free_r+0x1e>
 8003d3a:	461a      	mov	r2, r3
 8003d3c:	685b      	ldr	r3, [r3, #4]
 8003d3e:	b10b      	cbz	r3, 8003d44 <_free_r+0x4c>
 8003d40:	42a3      	cmp	r3, r4
 8003d42:	d9fa      	bls.n	8003d3a <_free_r+0x42>
 8003d44:	6811      	ldr	r1, [r2, #0]
 8003d46:	1850      	adds	r0, r2, r1
 8003d48:	42a0      	cmp	r0, r4
 8003d4a:	d10b      	bne.n	8003d64 <_free_r+0x6c>
 8003d4c:	6820      	ldr	r0, [r4, #0]
 8003d4e:	4401      	add	r1, r0
 8003d50:	1850      	adds	r0, r2, r1
 8003d52:	4283      	cmp	r3, r0
 8003d54:	6011      	str	r1, [r2, #0]
 8003d56:	d1e0      	bne.n	8003d1a <_free_r+0x22>
 8003d58:	6818      	ldr	r0, [r3, #0]
 8003d5a:	685b      	ldr	r3, [r3, #4]
 8003d5c:	4408      	add	r0, r1
 8003d5e:	6010      	str	r0, [r2, #0]
 8003d60:	6053      	str	r3, [r2, #4]
 8003d62:	e7da      	b.n	8003d1a <_free_r+0x22>
 8003d64:	d902      	bls.n	8003d6c <_free_r+0x74>
 8003d66:	230c      	movs	r3, #12
 8003d68:	602b      	str	r3, [r5, #0]
 8003d6a:	e7d6      	b.n	8003d1a <_free_r+0x22>
 8003d6c:	6820      	ldr	r0, [r4, #0]
 8003d6e:	1821      	adds	r1, r4, r0
 8003d70:	428b      	cmp	r3, r1
 8003d72:	bf01      	itttt	eq
 8003d74:	6819      	ldreq	r1, [r3, #0]
 8003d76:	685b      	ldreq	r3, [r3, #4]
 8003d78:	1809      	addeq	r1, r1, r0
 8003d7a:	6021      	streq	r1, [r4, #0]
 8003d7c:	6063      	str	r3, [r4, #4]
 8003d7e:	6054      	str	r4, [r2, #4]
 8003d80:	e7cb      	b.n	8003d1a <_free_r+0x22>
 8003d82:	bd38      	pop	{r3, r4, r5, pc}
 8003d84:	20000368 	.word	0x20000368

08003d88 <__ascii_mbtowc>:
 8003d88:	b082      	sub	sp, #8
 8003d8a:	b901      	cbnz	r1, 8003d8e <__ascii_mbtowc+0x6>
 8003d8c:	a901      	add	r1, sp, #4
 8003d8e:	b142      	cbz	r2, 8003da2 <__ascii_mbtowc+0x1a>
 8003d90:	b14b      	cbz	r3, 8003da6 <__ascii_mbtowc+0x1e>
 8003d92:	7813      	ldrb	r3, [r2, #0]
 8003d94:	600b      	str	r3, [r1, #0]
 8003d96:	7812      	ldrb	r2, [r2, #0]
 8003d98:	1e10      	subs	r0, r2, #0
 8003d9a:	bf18      	it	ne
 8003d9c:	2001      	movne	r0, #1
 8003d9e:	b002      	add	sp, #8
 8003da0:	4770      	bx	lr
 8003da2:	4610      	mov	r0, r2
 8003da4:	e7fb      	b.n	8003d9e <__ascii_mbtowc+0x16>
 8003da6:	f06f 0001 	mvn.w	r0, #1
 8003daa:	e7f8      	b.n	8003d9e <__ascii_mbtowc+0x16>

08003dac <_malloc_usable_size_r>:
 8003dac:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003db0:	1f18      	subs	r0, r3, #4
 8003db2:	2b00      	cmp	r3, #0
 8003db4:	bfbc      	itt	lt
 8003db6:	580b      	ldrlt	r3, [r1, r0]
 8003db8:	18c0      	addlt	r0, r0, r3
 8003dba:	4770      	bx	lr

08003dbc <fiprintf>:
 8003dbc:	b40e      	push	{r1, r2, r3}
 8003dbe:	b503      	push	{r0, r1, lr}
 8003dc0:	4601      	mov	r1, r0
 8003dc2:	ab03      	add	r3, sp, #12
 8003dc4:	4805      	ldr	r0, [pc, #20]	; (8003ddc <fiprintf+0x20>)
 8003dc6:	f853 2b04 	ldr.w	r2, [r3], #4
 8003dca:	6800      	ldr	r0, [r0, #0]
 8003dcc:	9301      	str	r3, [sp, #4]
 8003dce:	f000 f843 	bl	8003e58 <_vfiprintf_r>
 8003dd2:	b002      	add	sp, #8
 8003dd4:	f85d eb04 	ldr.w	lr, [sp], #4
 8003dd8:	b003      	add	sp, #12
 8003dda:	4770      	bx	lr
 8003ddc:	20000058 	.word	0x20000058

08003de0 <__ascii_wctomb>:
 8003de0:	4603      	mov	r3, r0
 8003de2:	4608      	mov	r0, r1
 8003de4:	b141      	cbz	r1, 8003df8 <__ascii_wctomb+0x18>
 8003de6:	2aff      	cmp	r2, #255	; 0xff
 8003de8:	d904      	bls.n	8003df4 <__ascii_wctomb+0x14>
 8003dea:	228a      	movs	r2, #138	; 0x8a
 8003dec:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003df0:	601a      	str	r2, [r3, #0]
 8003df2:	4770      	bx	lr
 8003df4:	2001      	movs	r0, #1
 8003df6:	700a      	strb	r2, [r1, #0]
 8003df8:	4770      	bx	lr

08003dfa <abort>:
 8003dfa:	2006      	movs	r0, #6
 8003dfc:	b508      	push	{r3, lr}
 8003dfe:	f000 fa87 	bl	8004310 <raise>
 8003e02:	2001      	movs	r0, #1
 8003e04:	f7fd fb4b 	bl	800149e <_exit>

08003e08 <__sfputc_r>:
 8003e08:	6893      	ldr	r3, [r2, #8]
 8003e0a:	b410      	push	{r4}
 8003e0c:	3b01      	subs	r3, #1
 8003e0e:	2b00      	cmp	r3, #0
 8003e10:	6093      	str	r3, [r2, #8]
 8003e12:	da07      	bge.n	8003e24 <__sfputc_r+0x1c>
 8003e14:	6994      	ldr	r4, [r2, #24]
 8003e16:	42a3      	cmp	r3, r4
 8003e18:	db01      	blt.n	8003e1e <__sfputc_r+0x16>
 8003e1a:	290a      	cmp	r1, #10
 8003e1c:	d102      	bne.n	8003e24 <__sfputc_r+0x1c>
 8003e1e:	bc10      	pop	{r4}
 8003e20:	f000 b934 	b.w	800408c <__swbuf_r>
 8003e24:	6813      	ldr	r3, [r2, #0]
 8003e26:	1c58      	adds	r0, r3, #1
 8003e28:	6010      	str	r0, [r2, #0]
 8003e2a:	7019      	strb	r1, [r3, #0]
 8003e2c:	4608      	mov	r0, r1
 8003e2e:	bc10      	pop	{r4}
 8003e30:	4770      	bx	lr

08003e32 <__sfputs_r>:
 8003e32:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003e34:	4606      	mov	r6, r0
 8003e36:	460f      	mov	r7, r1
 8003e38:	4614      	mov	r4, r2
 8003e3a:	18d5      	adds	r5, r2, r3
 8003e3c:	42ac      	cmp	r4, r5
 8003e3e:	d101      	bne.n	8003e44 <__sfputs_r+0x12>
 8003e40:	2000      	movs	r0, #0
 8003e42:	e007      	b.n	8003e54 <__sfputs_r+0x22>
 8003e44:	463a      	mov	r2, r7
 8003e46:	4630      	mov	r0, r6
 8003e48:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003e4c:	f7ff ffdc 	bl	8003e08 <__sfputc_r>
 8003e50:	1c43      	adds	r3, r0, #1
 8003e52:	d1f3      	bne.n	8003e3c <__sfputs_r+0xa>
 8003e54:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08003e58 <_vfiprintf_r>:
 8003e58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003e5c:	460d      	mov	r5, r1
 8003e5e:	4614      	mov	r4, r2
 8003e60:	4698      	mov	r8, r3
 8003e62:	4606      	mov	r6, r0
 8003e64:	b09d      	sub	sp, #116	; 0x74
 8003e66:	b118      	cbz	r0, 8003e70 <_vfiprintf_r+0x18>
 8003e68:	6a03      	ldr	r3, [r0, #32]
 8003e6a:	b90b      	cbnz	r3, 8003e70 <_vfiprintf_r+0x18>
 8003e6c:	f7fe f908 	bl	8002080 <__sinit>
 8003e70:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003e72:	07d9      	lsls	r1, r3, #31
 8003e74:	d405      	bmi.n	8003e82 <_vfiprintf_r+0x2a>
 8003e76:	89ab      	ldrh	r3, [r5, #12]
 8003e78:	059a      	lsls	r2, r3, #22
 8003e7a:	d402      	bmi.n	8003e82 <_vfiprintf_r+0x2a>
 8003e7c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8003e7e:	f7fe f96c 	bl	800215a <__retarget_lock_acquire_recursive>
 8003e82:	89ab      	ldrh	r3, [r5, #12]
 8003e84:	071b      	lsls	r3, r3, #28
 8003e86:	d501      	bpl.n	8003e8c <_vfiprintf_r+0x34>
 8003e88:	692b      	ldr	r3, [r5, #16]
 8003e8a:	b99b      	cbnz	r3, 8003eb4 <_vfiprintf_r+0x5c>
 8003e8c:	4629      	mov	r1, r5
 8003e8e:	4630      	mov	r0, r6
 8003e90:	f000 f93a 	bl	8004108 <__swsetup_r>
 8003e94:	b170      	cbz	r0, 8003eb4 <_vfiprintf_r+0x5c>
 8003e96:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003e98:	07dc      	lsls	r4, r3, #31
 8003e9a:	d504      	bpl.n	8003ea6 <_vfiprintf_r+0x4e>
 8003e9c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003ea0:	b01d      	add	sp, #116	; 0x74
 8003ea2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003ea6:	89ab      	ldrh	r3, [r5, #12]
 8003ea8:	0598      	lsls	r0, r3, #22
 8003eaa:	d4f7      	bmi.n	8003e9c <_vfiprintf_r+0x44>
 8003eac:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8003eae:	f7fe f955 	bl	800215c <__retarget_lock_release_recursive>
 8003eb2:	e7f3      	b.n	8003e9c <_vfiprintf_r+0x44>
 8003eb4:	2300      	movs	r3, #0
 8003eb6:	9309      	str	r3, [sp, #36]	; 0x24
 8003eb8:	2320      	movs	r3, #32
 8003eba:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8003ebe:	2330      	movs	r3, #48	; 0x30
 8003ec0:	f04f 0901 	mov.w	r9, #1
 8003ec4:	f8cd 800c 	str.w	r8, [sp, #12]
 8003ec8:	f8df 81ac 	ldr.w	r8, [pc, #428]	; 8004078 <_vfiprintf_r+0x220>
 8003ecc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8003ed0:	4623      	mov	r3, r4
 8003ed2:	469a      	mov	sl, r3
 8003ed4:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003ed8:	b10a      	cbz	r2, 8003ede <_vfiprintf_r+0x86>
 8003eda:	2a25      	cmp	r2, #37	; 0x25
 8003edc:	d1f9      	bne.n	8003ed2 <_vfiprintf_r+0x7a>
 8003ede:	ebba 0b04 	subs.w	fp, sl, r4
 8003ee2:	d00b      	beq.n	8003efc <_vfiprintf_r+0xa4>
 8003ee4:	465b      	mov	r3, fp
 8003ee6:	4622      	mov	r2, r4
 8003ee8:	4629      	mov	r1, r5
 8003eea:	4630      	mov	r0, r6
 8003eec:	f7ff ffa1 	bl	8003e32 <__sfputs_r>
 8003ef0:	3001      	adds	r0, #1
 8003ef2:	f000 80a9 	beq.w	8004048 <_vfiprintf_r+0x1f0>
 8003ef6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003ef8:	445a      	add	r2, fp
 8003efa:	9209      	str	r2, [sp, #36]	; 0x24
 8003efc:	f89a 3000 	ldrb.w	r3, [sl]
 8003f00:	2b00      	cmp	r3, #0
 8003f02:	f000 80a1 	beq.w	8004048 <_vfiprintf_r+0x1f0>
 8003f06:	2300      	movs	r3, #0
 8003f08:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8003f0c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003f10:	f10a 0a01 	add.w	sl, sl, #1
 8003f14:	9304      	str	r3, [sp, #16]
 8003f16:	9307      	str	r3, [sp, #28]
 8003f18:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8003f1c:	931a      	str	r3, [sp, #104]	; 0x68
 8003f1e:	4654      	mov	r4, sl
 8003f20:	2205      	movs	r2, #5
 8003f22:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003f26:	4854      	ldr	r0, [pc, #336]	; (8004078 <_vfiprintf_r+0x220>)
 8003f28:	f7fe f919 	bl	800215e <memchr>
 8003f2c:	9a04      	ldr	r2, [sp, #16]
 8003f2e:	b9d8      	cbnz	r0, 8003f68 <_vfiprintf_r+0x110>
 8003f30:	06d1      	lsls	r1, r2, #27
 8003f32:	bf44      	itt	mi
 8003f34:	2320      	movmi	r3, #32
 8003f36:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003f3a:	0713      	lsls	r3, r2, #28
 8003f3c:	bf44      	itt	mi
 8003f3e:	232b      	movmi	r3, #43	; 0x2b
 8003f40:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003f44:	f89a 3000 	ldrb.w	r3, [sl]
 8003f48:	2b2a      	cmp	r3, #42	; 0x2a
 8003f4a:	d015      	beq.n	8003f78 <_vfiprintf_r+0x120>
 8003f4c:	4654      	mov	r4, sl
 8003f4e:	2000      	movs	r0, #0
 8003f50:	f04f 0c0a 	mov.w	ip, #10
 8003f54:	9a07      	ldr	r2, [sp, #28]
 8003f56:	4621      	mov	r1, r4
 8003f58:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003f5c:	3b30      	subs	r3, #48	; 0x30
 8003f5e:	2b09      	cmp	r3, #9
 8003f60:	d94d      	bls.n	8003ffe <_vfiprintf_r+0x1a6>
 8003f62:	b1b0      	cbz	r0, 8003f92 <_vfiprintf_r+0x13a>
 8003f64:	9207      	str	r2, [sp, #28]
 8003f66:	e014      	b.n	8003f92 <_vfiprintf_r+0x13a>
 8003f68:	eba0 0308 	sub.w	r3, r0, r8
 8003f6c:	fa09 f303 	lsl.w	r3, r9, r3
 8003f70:	4313      	orrs	r3, r2
 8003f72:	46a2      	mov	sl, r4
 8003f74:	9304      	str	r3, [sp, #16]
 8003f76:	e7d2      	b.n	8003f1e <_vfiprintf_r+0xc6>
 8003f78:	9b03      	ldr	r3, [sp, #12]
 8003f7a:	1d19      	adds	r1, r3, #4
 8003f7c:	681b      	ldr	r3, [r3, #0]
 8003f7e:	9103      	str	r1, [sp, #12]
 8003f80:	2b00      	cmp	r3, #0
 8003f82:	bfbb      	ittet	lt
 8003f84:	425b      	neglt	r3, r3
 8003f86:	f042 0202 	orrlt.w	r2, r2, #2
 8003f8a:	9307      	strge	r3, [sp, #28]
 8003f8c:	9307      	strlt	r3, [sp, #28]
 8003f8e:	bfb8      	it	lt
 8003f90:	9204      	strlt	r2, [sp, #16]
 8003f92:	7823      	ldrb	r3, [r4, #0]
 8003f94:	2b2e      	cmp	r3, #46	; 0x2e
 8003f96:	d10c      	bne.n	8003fb2 <_vfiprintf_r+0x15a>
 8003f98:	7863      	ldrb	r3, [r4, #1]
 8003f9a:	2b2a      	cmp	r3, #42	; 0x2a
 8003f9c:	d134      	bne.n	8004008 <_vfiprintf_r+0x1b0>
 8003f9e:	9b03      	ldr	r3, [sp, #12]
 8003fa0:	3402      	adds	r4, #2
 8003fa2:	1d1a      	adds	r2, r3, #4
 8003fa4:	681b      	ldr	r3, [r3, #0]
 8003fa6:	9203      	str	r2, [sp, #12]
 8003fa8:	2b00      	cmp	r3, #0
 8003faa:	bfb8      	it	lt
 8003fac:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8003fb0:	9305      	str	r3, [sp, #20]
 8003fb2:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 800407c <_vfiprintf_r+0x224>
 8003fb6:	2203      	movs	r2, #3
 8003fb8:	4650      	mov	r0, sl
 8003fba:	7821      	ldrb	r1, [r4, #0]
 8003fbc:	f7fe f8cf 	bl	800215e <memchr>
 8003fc0:	b138      	cbz	r0, 8003fd2 <_vfiprintf_r+0x17a>
 8003fc2:	2240      	movs	r2, #64	; 0x40
 8003fc4:	9b04      	ldr	r3, [sp, #16]
 8003fc6:	eba0 000a 	sub.w	r0, r0, sl
 8003fca:	4082      	lsls	r2, r0
 8003fcc:	4313      	orrs	r3, r2
 8003fce:	3401      	adds	r4, #1
 8003fd0:	9304      	str	r3, [sp, #16]
 8003fd2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003fd6:	2206      	movs	r2, #6
 8003fd8:	4829      	ldr	r0, [pc, #164]	; (8004080 <_vfiprintf_r+0x228>)
 8003fda:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8003fde:	f7fe f8be 	bl	800215e <memchr>
 8003fe2:	2800      	cmp	r0, #0
 8003fe4:	d03f      	beq.n	8004066 <_vfiprintf_r+0x20e>
 8003fe6:	4b27      	ldr	r3, [pc, #156]	; (8004084 <_vfiprintf_r+0x22c>)
 8003fe8:	bb1b      	cbnz	r3, 8004032 <_vfiprintf_r+0x1da>
 8003fea:	9b03      	ldr	r3, [sp, #12]
 8003fec:	3307      	adds	r3, #7
 8003fee:	f023 0307 	bic.w	r3, r3, #7
 8003ff2:	3308      	adds	r3, #8
 8003ff4:	9303      	str	r3, [sp, #12]
 8003ff6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003ff8:	443b      	add	r3, r7
 8003ffa:	9309      	str	r3, [sp, #36]	; 0x24
 8003ffc:	e768      	b.n	8003ed0 <_vfiprintf_r+0x78>
 8003ffe:	460c      	mov	r4, r1
 8004000:	2001      	movs	r0, #1
 8004002:	fb0c 3202 	mla	r2, ip, r2, r3
 8004006:	e7a6      	b.n	8003f56 <_vfiprintf_r+0xfe>
 8004008:	2300      	movs	r3, #0
 800400a:	f04f 0c0a 	mov.w	ip, #10
 800400e:	4619      	mov	r1, r3
 8004010:	3401      	adds	r4, #1
 8004012:	9305      	str	r3, [sp, #20]
 8004014:	4620      	mov	r0, r4
 8004016:	f810 2b01 	ldrb.w	r2, [r0], #1
 800401a:	3a30      	subs	r2, #48	; 0x30
 800401c:	2a09      	cmp	r2, #9
 800401e:	d903      	bls.n	8004028 <_vfiprintf_r+0x1d0>
 8004020:	2b00      	cmp	r3, #0
 8004022:	d0c6      	beq.n	8003fb2 <_vfiprintf_r+0x15a>
 8004024:	9105      	str	r1, [sp, #20]
 8004026:	e7c4      	b.n	8003fb2 <_vfiprintf_r+0x15a>
 8004028:	4604      	mov	r4, r0
 800402a:	2301      	movs	r3, #1
 800402c:	fb0c 2101 	mla	r1, ip, r1, r2
 8004030:	e7f0      	b.n	8004014 <_vfiprintf_r+0x1bc>
 8004032:	ab03      	add	r3, sp, #12
 8004034:	9300      	str	r3, [sp, #0]
 8004036:	462a      	mov	r2, r5
 8004038:	4630      	mov	r0, r6
 800403a:	4b13      	ldr	r3, [pc, #76]	; (8004088 <_vfiprintf_r+0x230>)
 800403c:	a904      	add	r1, sp, #16
 800403e:	f7fd fb9d 	bl	800177c <_printf_float>
 8004042:	4607      	mov	r7, r0
 8004044:	1c78      	adds	r0, r7, #1
 8004046:	d1d6      	bne.n	8003ff6 <_vfiprintf_r+0x19e>
 8004048:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800404a:	07d9      	lsls	r1, r3, #31
 800404c:	d405      	bmi.n	800405a <_vfiprintf_r+0x202>
 800404e:	89ab      	ldrh	r3, [r5, #12]
 8004050:	059a      	lsls	r2, r3, #22
 8004052:	d402      	bmi.n	800405a <_vfiprintf_r+0x202>
 8004054:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8004056:	f7fe f881 	bl	800215c <__retarget_lock_release_recursive>
 800405a:	89ab      	ldrh	r3, [r5, #12]
 800405c:	065b      	lsls	r3, r3, #25
 800405e:	f53f af1d 	bmi.w	8003e9c <_vfiprintf_r+0x44>
 8004062:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004064:	e71c      	b.n	8003ea0 <_vfiprintf_r+0x48>
 8004066:	ab03      	add	r3, sp, #12
 8004068:	9300      	str	r3, [sp, #0]
 800406a:	462a      	mov	r2, r5
 800406c:	4630      	mov	r0, r6
 800406e:	4b06      	ldr	r3, [pc, #24]	; (8004088 <_vfiprintf_r+0x230>)
 8004070:	a904      	add	r1, sp, #16
 8004072:	f7fd fe23 	bl	8001cbc <_printf_i>
 8004076:	e7e4      	b.n	8004042 <_vfiprintf_r+0x1ea>
 8004078:	080044ad 	.word	0x080044ad
 800407c:	080044b3 	.word	0x080044b3
 8004080:	080044b7 	.word	0x080044b7
 8004084:	0800177d 	.word	0x0800177d
 8004088:	08003e33 	.word	0x08003e33

0800408c <__swbuf_r>:
 800408c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800408e:	460e      	mov	r6, r1
 8004090:	4614      	mov	r4, r2
 8004092:	4605      	mov	r5, r0
 8004094:	b118      	cbz	r0, 800409e <__swbuf_r+0x12>
 8004096:	6a03      	ldr	r3, [r0, #32]
 8004098:	b90b      	cbnz	r3, 800409e <__swbuf_r+0x12>
 800409a:	f7fd fff1 	bl	8002080 <__sinit>
 800409e:	69a3      	ldr	r3, [r4, #24]
 80040a0:	60a3      	str	r3, [r4, #8]
 80040a2:	89a3      	ldrh	r3, [r4, #12]
 80040a4:	071a      	lsls	r2, r3, #28
 80040a6:	d525      	bpl.n	80040f4 <__swbuf_r+0x68>
 80040a8:	6923      	ldr	r3, [r4, #16]
 80040aa:	b31b      	cbz	r3, 80040f4 <__swbuf_r+0x68>
 80040ac:	6823      	ldr	r3, [r4, #0]
 80040ae:	6922      	ldr	r2, [r4, #16]
 80040b0:	b2f6      	uxtb	r6, r6
 80040b2:	1a98      	subs	r0, r3, r2
 80040b4:	6963      	ldr	r3, [r4, #20]
 80040b6:	4637      	mov	r7, r6
 80040b8:	4283      	cmp	r3, r0
 80040ba:	dc04      	bgt.n	80040c6 <__swbuf_r+0x3a>
 80040bc:	4621      	mov	r1, r4
 80040be:	4628      	mov	r0, r5
 80040c0:	f7ff f94c 	bl	800335c <_fflush_r>
 80040c4:	b9e0      	cbnz	r0, 8004100 <__swbuf_r+0x74>
 80040c6:	68a3      	ldr	r3, [r4, #8]
 80040c8:	3b01      	subs	r3, #1
 80040ca:	60a3      	str	r3, [r4, #8]
 80040cc:	6823      	ldr	r3, [r4, #0]
 80040ce:	1c5a      	adds	r2, r3, #1
 80040d0:	6022      	str	r2, [r4, #0]
 80040d2:	701e      	strb	r6, [r3, #0]
 80040d4:	6962      	ldr	r2, [r4, #20]
 80040d6:	1c43      	adds	r3, r0, #1
 80040d8:	429a      	cmp	r2, r3
 80040da:	d004      	beq.n	80040e6 <__swbuf_r+0x5a>
 80040dc:	89a3      	ldrh	r3, [r4, #12]
 80040de:	07db      	lsls	r3, r3, #31
 80040e0:	d506      	bpl.n	80040f0 <__swbuf_r+0x64>
 80040e2:	2e0a      	cmp	r6, #10
 80040e4:	d104      	bne.n	80040f0 <__swbuf_r+0x64>
 80040e6:	4621      	mov	r1, r4
 80040e8:	4628      	mov	r0, r5
 80040ea:	f7ff f937 	bl	800335c <_fflush_r>
 80040ee:	b938      	cbnz	r0, 8004100 <__swbuf_r+0x74>
 80040f0:	4638      	mov	r0, r7
 80040f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80040f4:	4621      	mov	r1, r4
 80040f6:	4628      	mov	r0, r5
 80040f8:	f000 f806 	bl	8004108 <__swsetup_r>
 80040fc:	2800      	cmp	r0, #0
 80040fe:	d0d5      	beq.n	80040ac <__swbuf_r+0x20>
 8004100:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8004104:	e7f4      	b.n	80040f0 <__swbuf_r+0x64>
	...

08004108 <__swsetup_r>:
 8004108:	b538      	push	{r3, r4, r5, lr}
 800410a:	4b2a      	ldr	r3, [pc, #168]	; (80041b4 <__swsetup_r+0xac>)
 800410c:	4605      	mov	r5, r0
 800410e:	6818      	ldr	r0, [r3, #0]
 8004110:	460c      	mov	r4, r1
 8004112:	b118      	cbz	r0, 800411c <__swsetup_r+0x14>
 8004114:	6a03      	ldr	r3, [r0, #32]
 8004116:	b90b      	cbnz	r3, 800411c <__swsetup_r+0x14>
 8004118:	f7fd ffb2 	bl	8002080 <__sinit>
 800411c:	89a3      	ldrh	r3, [r4, #12]
 800411e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004122:	0718      	lsls	r0, r3, #28
 8004124:	d422      	bmi.n	800416c <__swsetup_r+0x64>
 8004126:	06d9      	lsls	r1, r3, #27
 8004128:	d407      	bmi.n	800413a <__swsetup_r+0x32>
 800412a:	2309      	movs	r3, #9
 800412c:	602b      	str	r3, [r5, #0]
 800412e:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8004132:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004136:	81a3      	strh	r3, [r4, #12]
 8004138:	e034      	b.n	80041a4 <__swsetup_r+0x9c>
 800413a:	0758      	lsls	r0, r3, #29
 800413c:	d512      	bpl.n	8004164 <__swsetup_r+0x5c>
 800413e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8004140:	b141      	cbz	r1, 8004154 <__swsetup_r+0x4c>
 8004142:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8004146:	4299      	cmp	r1, r3
 8004148:	d002      	beq.n	8004150 <__swsetup_r+0x48>
 800414a:	4628      	mov	r0, r5
 800414c:	f7ff fdd4 	bl	8003cf8 <_free_r>
 8004150:	2300      	movs	r3, #0
 8004152:	6363      	str	r3, [r4, #52]	; 0x34
 8004154:	89a3      	ldrh	r3, [r4, #12]
 8004156:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800415a:	81a3      	strh	r3, [r4, #12]
 800415c:	2300      	movs	r3, #0
 800415e:	6063      	str	r3, [r4, #4]
 8004160:	6923      	ldr	r3, [r4, #16]
 8004162:	6023      	str	r3, [r4, #0]
 8004164:	89a3      	ldrh	r3, [r4, #12]
 8004166:	f043 0308 	orr.w	r3, r3, #8
 800416a:	81a3      	strh	r3, [r4, #12]
 800416c:	6923      	ldr	r3, [r4, #16]
 800416e:	b94b      	cbnz	r3, 8004184 <__swsetup_r+0x7c>
 8004170:	89a3      	ldrh	r3, [r4, #12]
 8004172:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8004176:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800417a:	d003      	beq.n	8004184 <__swsetup_r+0x7c>
 800417c:	4621      	mov	r1, r4
 800417e:	4628      	mov	r0, r5
 8004180:	f000 f83f 	bl	8004202 <__smakebuf_r>
 8004184:	89a0      	ldrh	r0, [r4, #12]
 8004186:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800418a:	f010 0301 	ands.w	r3, r0, #1
 800418e:	d00a      	beq.n	80041a6 <__swsetup_r+0x9e>
 8004190:	2300      	movs	r3, #0
 8004192:	60a3      	str	r3, [r4, #8]
 8004194:	6963      	ldr	r3, [r4, #20]
 8004196:	425b      	negs	r3, r3
 8004198:	61a3      	str	r3, [r4, #24]
 800419a:	6923      	ldr	r3, [r4, #16]
 800419c:	b943      	cbnz	r3, 80041b0 <__swsetup_r+0xa8>
 800419e:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80041a2:	d1c4      	bne.n	800412e <__swsetup_r+0x26>
 80041a4:	bd38      	pop	{r3, r4, r5, pc}
 80041a6:	0781      	lsls	r1, r0, #30
 80041a8:	bf58      	it	pl
 80041aa:	6963      	ldrpl	r3, [r4, #20]
 80041ac:	60a3      	str	r3, [r4, #8]
 80041ae:	e7f4      	b.n	800419a <__swsetup_r+0x92>
 80041b0:	2000      	movs	r0, #0
 80041b2:	e7f7      	b.n	80041a4 <__swsetup_r+0x9c>
 80041b4:	20000058 	.word	0x20000058

080041b8 <__swhatbuf_r>:
 80041b8:	b570      	push	{r4, r5, r6, lr}
 80041ba:	460c      	mov	r4, r1
 80041bc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80041c0:	4615      	mov	r5, r2
 80041c2:	2900      	cmp	r1, #0
 80041c4:	461e      	mov	r6, r3
 80041c6:	b096      	sub	sp, #88	; 0x58
 80041c8:	da0c      	bge.n	80041e4 <__swhatbuf_r+0x2c>
 80041ca:	89a3      	ldrh	r3, [r4, #12]
 80041cc:	2100      	movs	r1, #0
 80041ce:	f013 0f80 	tst.w	r3, #128	; 0x80
 80041d2:	bf0c      	ite	eq
 80041d4:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 80041d8:	2340      	movne	r3, #64	; 0x40
 80041da:	2000      	movs	r0, #0
 80041dc:	6031      	str	r1, [r6, #0]
 80041de:	602b      	str	r3, [r5, #0]
 80041e0:	b016      	add	sp, #88	; 0x58
 80041e2:	bd70      	pop	{r4, r5, r6, pc}
 80041e4:	466a      	mov	r2, sp
 80041e6:	f000 f849 	bl	800427c <_fstat_r>
 80041ea:	2800      	cmp	r0, #0
 80041ec:	dbed      	blt.n	80041ca <__swhatbuf_r+0x12>
 80041ee:	9901      	ldr	r1, [sp, #4]
 80041f0:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 80041f4:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 80041f8:	4259      	negs	r1, r3
 80041fa:	4159      	adcs	r1, r3
 80041fc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004200:	e7eb      	b.n	80041da <__swhatbuf_r+0x22>

08004202 <__smakebuf_r>:
 8004202:	898b      	ldrh	r3, [r1, #12]
 8004204:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004206:	079d      	lsls	r5, r3, #30
 8004208:	4606      	mov	r6, r0
 800420a:	460c      	mov	r4, r1
 800420c:	d507      	bpl.n	800421e <__smakebuf_r+0x1c>
 800420e:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8004212:	6023      	str	r3, [r4, #0]
 8004214:	6123      	str	r3, [r4, #16]
 8004216:	2301      	movs	r3, #1
 8004218:	6163      	str	r3, [r4, #20]
 800421a:	b002      	add	sp, #8
 800421c:	bd70      	pop	{r4, r5, r6, pc}
 800421e:	466a      	mov	r2, sp
 8004220:	ab01      	add	r3, sp, #4
 8004222:	f7ff ffc9 	bl	80041b8 <__swhatbuf_r>
 8004226:	9900      	ldr	r1, [sp, #0]
 8004228:	4605      	mov	r5, r0
 800422a:	4630      	mov	r0, r6
 800422c:	f7fe ff94 	bl	8003158 <_malloc_r>
 8004230:	b948      	cbnz	r0, 8004246 <__smakebuf_r+0x44>
 8004232:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004236:	059a      	lsls	r2, r3, #22
 8004238:	d4ef      	bmi.n	800421a <__smakebuf_r+0x18>
 800423a:	f023 0303 	bic.w	r3, r3, #3
 800423e:	f043 0302 	orr.w	r3, r3, #2
 8004242:	81a3      	strh	r3, [r4, #12]
 8004244:	e7e3      	b.n	800420e <__smakebuf_r+0xc>
 8004246:	89a3      	ldrh	r3, [r4, #12]
 8004248:	6020      	str	r0, [r4, #0]
 800424a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800424e:	81a3      	strh	r3, [r4, #12]
 8004250:	9b00      	ldr	r3, [sp, #0]
 8004252:	6120      	str	r0, [r4, #16]
 8004254:	6163      	str	r3, [r4, #20]
 8004256:	9b01      	ldr	r3, [sp, #4]
 8004258:	b15b      	cbz	r3, 8004272 <__smakebuf_r+0x70>
 800425a:	4630      	mov	r0, r6
 800425c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004260:	f000 f81e 	bl	80042a0 <_isatty_r>
 8004264:	b128      	cbz	r0, 8004272 <__smakebuf_r+0x70>
 8004266:	89a3      	ldrh	r3, [r4, #12]
 8004268:	f023 0303 	bic.w	r3, r3, #3
 800426c:	f043 0301 	orr.w	r3, r3, #1
 8004270:	81a3      	strh	r3, [r4, #12]
 8004272:	89a3      	ldrh	r3, [r4, #12]
 8004274:	431d      	orrs	r5, r3
 8004276:	81a5      	strh	r5, [r4, #12]
 8004278:	e7cf      	b.n	800421a <__smakebuf_r+0x18>
	...

0800427c <_fstat_r>:
 800427c:	b538      	push	{r3, r4, r5, lr}
 800427e:	2300      	movs	r3, #0
 8004280:	4d06      	ldr	r5, [pc, #24]	; (800429c <_fstat_r+0x20>)
 8004282:	4604      	mov	r4, r0
 8004284:	4608      	mov	r0, r1
 8004286:	4611      	mov	r1, r2
 8004288:	602b      	str	r3, [r5, #0]
 800428a:	f7fd f956 	bl	800153a <_fstat>
 800428e:	1c43      	adds	r3, r0, #1
 8004290:	d102      	bne.n	8004298 <_fstat_r+0x1c>
 8004292:	682b      	ldr	r3, [r5, #0]
 8004294:	b103      	cbz	r3, 8004298 <_fstat_r+0x1c>
 8004296:	6023      	str	r3, [r4, #0]
 8004298:	bd38      	pop	{r3, r4, r5, pc}
 800429a:	bf00      	nop
 800429c:	20000370 	.word	0x20000370

080042a0 <_isatty_r>:
 80042a0:	b538      	push	{r3, r4, r5, lr}
 80042a2:	2300      	movs	r3, #0
 80042a4:	4d05      	ldr	r5, [pc, #20]	; (80042bc <_isatty_r+0x1c>)
 80042a6:	4604      	mov	r4, r0
 80042a8:	4608      	mov	r0, r1
 80042aa:	602b      	str	r3, [r5, #0]
 80042ac:	f7fd f954 	bl	8001558 <_isatty>
 80042b0:	1c43      	adds	r3, r0, #1
 80042b2:	d102      	bne.n	80042ba <_isatty_r+0x1a>
 80042b4:	682b      	ldr	r3, [r5, #0]
 80042b6:	b103      	cbz	r3, 80042ba <_isatty_r+0x1a>
 80042b8:	6023      	str	r3, [r4, #0]
 80042ba:	bd38      	pop	{r3, r4, r5, pc}
 80042bc:	20000370 	.word	0x20000370

080042c0 <_raise_r>:
 80042c0:	291f      	cmp	r1, #31
 80042c2:	b538      	push	{r3, r4, r5, lr}
 80042c4:	4604      	mov	r4, r0
 80042c6:	460d      	mov	r5, r1
 80042c8:	d904      	bls.n	80042d4 <_raise_r+0x14>
 80042ca:	2316      	movs	r3, #22
 80042cc:	6003      	str	r3, [r0, #0]
 80042ce:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80042d2:	bd38      	pop	{r3, r4, r5, pc}
 80042d4:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 80042d6:	b112      	cbz	r2, 80042de <_raise_r+0x1e>
 80042d8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80042dc:	b94b      	cbnz	r3, 80042f2 <_raise_r+0x32>
 80042de:	4620      	mov	r0, r4
 80042e0:	f000 f830 	bl	8004344 <_getpid_r>
 80042e4:	462a      	mov	r2, r5
 80042e6:	4601      	mov	r1, r0
 80042e8:	4620      	mov	r0, r4
 80042ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80042ee:	f000 b817 	b.w	8004320 <_kill_r>
 80042f2:	2b01      	cmp	r3, #1
 80042f4:	d00a      	beq.n	800430c <_raise_r+0x4c>
 80042f6:	1c59      	adds	r1, r3, #1
 80042f8:	d103      	bne.n	8004302 <_raise_r+0x42>
 80042fa:	2316      	movs	r3, #22
 80042fc:	6003      	str	r3, [r0, #0]
 80042fe:	2001      	movs	r0, #1
 8004300:	e7e7      	b.n	80042d2 <_raise_r+0x12>
 8004302:	2400      	movs	r4, #0
 8004304:	4628      	mov	r0, r5
 8004306:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800430a:	4798      	blx	r3
 800430c:	2000      	movs	r0, #0
 800430e:	e7e0      	b.n	80042d2 <_raise_r+0x12>

08004310 <raise>:
 8004310:	4b02      	ldr	r3, [pc, #8]	; (800431c <raise+0xc>)
 8004312:	4601      	mov	r1, r0
 8004314:	6818      	ldr	r0, [r3, #0]
 8004316:	f7ff bfd3 	b.w	80042c0 <_raise_r>
 800431a:	bf00      	nop
 800431c:	20000058 	.word	0x20000058

08004320 <_kill_r>:
 8004320:	b538      	push	{r3, r4, r5, lr}
 8004322:	2300      	movs	r3, #0
 8004324:	4d06      	ldr	r5, [pc, #24]	; (8004340 <_kill_r+0x20>)
 8004326:	4604      	mov	r4, r0
 8004328:	4608      	mov	r0, r1
 800432a:	4611      	mov	r1, r2
 800432c:	602b      	str	r3, [r5, #0]
 800432e:	f7fd f8a6 	bl	800147e <_kill>
 8004332:	1c43      	adds	r3, r0, #1
 8004334:	d102      	bne.n	800433c <_kill_r+0x1c>
 8004336:	682b      	ldr	r3, [r5, #0]
 8004338:	b103      	cbz	r3, 800433c <_kill_r+0x1c>
 800433a:	6023      	str	r3, [r4, #0]
 800433c:	bd38      	pop	{r3, r4, r5, pc}
 800433e:	bf00      	nop
 8004340:	20000370 	.word	0x20000370

08004344 <_getpid_r>:
 8004344:	f7fd b894 	b.w	8001470 <_getpid>

08004348 <_init>:
 8004348:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800434a:	bf00      	nop
 800434c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800434e:	bc08      	pop	{r3}
 8004350:	469e      	mov	lr, r3
 8004352:	4770      	bx	lr

08004354 <_fini>:
 8004354:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004356:	bf00      	nop
 8004358:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800435a:	bc08      	pop	{r3}
 800435c:	469e      	mov	lr, r3
 800435e:	4770      	bx	lr
